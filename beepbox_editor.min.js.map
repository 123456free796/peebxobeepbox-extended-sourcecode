{"version":3,"names":["Config","centerWave","wave","sum","i","length","average","performIntegral","push","Float32Array","cumulative","temp","getPulseWidthRatio","pulseWidth","Math","pow","pulseWidthRange","pulseWidthStepPower","getDrumWave","index","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","samples","chipNoiseLength","drumBuffer","newBuffer","random","Error","drawNoiseSpectrum","sqrt","waveLength","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","highIndex","min","retroWave","combinedAmplitude","lerped","log2","amplitude","radians","PI","cos","sin","getArpeggioPitchIndex","pitchCount","rhythm","arpeggio","arpeggioPattern","rhythms","arpeggioPatterns","toNameMap","array","dictionary","value","name","result","effectsIncludeTransition","effects","effectsIncludeChord","effectsIncludePitchShift","effectsIncludeDetune","effectsIncludeVibrato","effectsIncludeNoteFilter","effectsIncludeDistortion","effectsIncludeBitcrusher","effectsIncludePanning","effectsIncludeChorus","effectsIncludeEcho","effectsIncludeReverb","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","echoDelayRange","echoDelayStepTicks","echoSustainRange","echoShelfHz","echoShelfGain","reverbShelfHz","reverbShelfGain","reverbRange","reverbDelayBufferSize","reverbDelayBufferMask","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentCountMin","layeredInstrumentCountMax","patternInstrumentCountMax","partsPerBeat","ticksPerPart","stepsPerBeat","ticksPerArpeggio","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipBaseExpression","fmBaseExpression","noiseBaseExpression","spectrumBaseExpression","drumsetBaseExpression","harmonicsBaseExpression","pwmBaseExpression","supersawBaseExpression","pickedStringBaseExpression","distortionBaseVolume","bitcrusherBaseVolume","chipWaves","expression","pitchFilterMult","isSoft","filterFreqStep","filterFreqRange","filterFreqReferenceSetting","filterFreqReferenceHz","filterFreqMaxHz","filterFreqMinHz","filterGainRange","filterGainCenter","filterGainStep","filterMaxPoints","filterTypeNames","fadeInRange","fadeOutTicks","fadeOutNeutral","drumsetFadeOutTicks","transitions","isSeamless","continues","slides","slideTicks","includeAdjacentPatterns","vibratos","periodsSeconds","delayTicks","unisons","voices","spread","offset","sign","effectNames","effectOrder","noteSizeMax","volumeRange","volumeLogScale","panCenter","panMax","panDelaySecondsMax","chorusRange","chorusPeriodSeconds","chorusDelayRange","chorusDelayOffsets","chorusPhaseOffsets","chorusMaxDelay","concat","reduce","x","y","max","chords","customInterval","arpeggiates","strumParts","singleTone","maxChordSize","operatorCount","maxPitchOrOperatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","type","speed","feedbacks","indices","spectrumNoiseLength","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","spectrumMax","harmonicsControlPoints","harmonicsRendered","harmonicsRenderedForPickedString","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","supersawVoiceCount","supersawDynamismMax","supersawSpreadMax","supersawShapeMax","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","pitchOctaves","maxPitch","maximumTonesPerChannel","justIntonationSemitones","map","pitchShiftRange","pitchShiftCenter","detuneCenter","detuneMax","sineWaveLength","sineWaveMask","sineWave","generateSineWave","pickedStringDispersionCenterFreq","pickedStringDispersionFreqScale","pickedStringDispersionFreqMult","pickedStringShelfHz","stringSustainRange","stringDecayRate","enableAcousticSustain","sustainTypeNames","distortionRange","bitcrusherFreqRange","bitcrusherOctaveStep","bitcrusherQuantizationRange","maxEnvelopeCount","defaultAutomationRange","instrumentAutomationTargets","computeIndex","displayName","interleave","isFilter","maxCount","effect","compatibleInstruments","isMobile","test","navigator","userAgent","prettyNumber","toFixed","replace","EditorConfig","valueToPreset","presetValue","categoryIndex","presetIndex","presetCategories","presets","midiProgramToPresetValue","program","category","preset","generalMidi","midiProgram","nameToPresetValue","presetName","version","versionDisplayName","releaseNotesURL","isOnMac","platform","ctrlSymbol","ctrlName","customType","settings","eqFilter","transition","fadeInSeconds","chord","unison","cutoffHz","linearGain","vibrato","isNoise","filterCutoffHz","filterResonance","filterEnvelope","algorithm","feedbackType","feedbackAmplitude","operators","frequency","target","envelope","reverb","dynamism","shape","noteFilter","harmonics","stringSustain","stringSustainType","feedbackEnvelope","midiSubharmonicOctaves","interval","bitcrusherOctave","bitcrusherQuantization","distortion","chorus","spectrum","pulseEnvelope","drums","pitchShiftSemitones","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","appendChild","document","createTextNode","Array","isArray","Symbol","iterator","__spread","constructor","Object","Element","_d","e_2","_e","key","setAttribute","join","console","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","createElement","_c","split","name_2","createElementNS","snakeCaseName","ColorConfig","getChannelColor","song","channel","pitchChannelCount","pitchChannels","noiseChannels","setTheme","theme","this","themes","undefined","_styleElement","textContent","themeColor","querySelector","getComputedStyle","getPropertyValue","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","whitePianoKeyText","blackPianoKeyText","secondaryChannel","primaryChannel","secondaryNote","primaryNote","head","scrollBarTest","body","div","clientWidth","classList","add","removeChild","Layout","setLayout","layout","_layoutMap","factor","countBits","n","isPowerOf2","round","log","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndex","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","reverseIndexBits","small","long","tall","Deque","_capacity","_buffer","_mask","_offset","_count","pushFront","_expandCapacity","pushBack","popFront","popBack","peakFront","peakBack","count","set","get","remove","oldBuffer","size","FilterCoefficients","a","b","order","linearGain0thOrder","lowPass1stOrderButterworth","cornerRadiansPerSample","g","tan","a0","lowPass1stOrderSimplified","highPass1stOrderButterworth","highShelf1stOrder","shelfLinearGain","sqrtGain","allPass1stOrderInvertPhaseAbove","allPass1stOrderFractionalDelay","delay","lowPass2ndOrderButterworth","peakLinearGain","alpha","lowPass2ndOrderSimplified","feedback","highPass2ndOrderButterworth","highShelf2ndOrder","slope","A","Aplus","Aminus","sqrtA2Alpha","peak2ndOrder","bandWidthScale","bandWidth","FrequencyResponse","real","imag","denom","analyze","filter","radiansPerSample","analyzeComplex","realZ1","imagZ1","realNum","imagNum","realDenom","imagDenom","realZ","imagZ","imagTemp","magnitude","angle","atan2","DynamicBiquadFilter","a1","a2","b0","b1","b2","a1Delta","a2Delta","b0Delta","b1Delta","b2Delta","output1","output2","useMultiplicativeInputCoefficients","resetOutput","loadCoefficientsWithGradient","start","end","deltaRate","warpInfinityToNyquist","atan","epsilon","clamp","val","validateRange","base64IntToCharCode","base64CharCodeToInt","BitFieldReader","source","_bits","_readIndex","charCodeAt","read","readLongTail","minValue","minBits","numBits","readPartDuration","readLegacyPartDuration","readPinCount","readPitchInterval","BitFieldWriter","_index","clear","write","writeLongTail","writePartDuration","writePinCount","writePitchInterval","other","encodeBase64","buffer","lengthBase64","ceil","makeNotePin","time","Note","pitch","fadeout","pitches","pins","continuesLastPattern","pickMainInterval","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestSize","pin","clone","newNote","getEndPinIndex","part","endPinIndex","Pattern","notes","instruments","cloneNotes","note","reset","toJsonObject","noteArray","pointArray","tick","pitchBend","volume","noteObject","points","patternObject","patternInstruments","fromJsonObject","importedPartsPerBeat","isNoiseChannel","instrumentCount","getMaxInstrumentsPerPatternForChannel","maxNoteCount","beatsPerBar","tickClock","k","indexOf","noteClock","startInterval","pointObject","lowestPitch","highestPitch","splice","Operator","SpectrumWave","hash","isHarmonic","markCustomWaveDirty","hashMult","Synth","fittingPowerOfTwo","point","SpectrumWaveState","_hash","getCustomWave","lowestOctave","pitchTweak","controlPointToOctave","floor","value1","value2","octave1","octave2","HarmonicsWave","HarmonicsWaveState","instrumentType","_generatedForType","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","FilterControlPoint","freq","gain","freqSetting","gainSetting","getHz","getHzFromSettingValue","getSettingValueFromHz","hz","getRoundedSettingValueFromHz","getLinearGain","peakMult","power","neutral","interpolatedPower","getRoundedSettingValueFromLinearGain","toCoefficients","sampleRate","freqMult","getVolumeCompensationMult","octave","gainPow","freqRelativeTo8khz","warpedFreq","warpedOctave","distanceFromCenter","freqLoudness","FilterSettings","controlPoints","controlPointCount","addPoint","controlPoint","filterArray","filterObject","convertLegacySettings","legacyCutoffSetting","legacyResonanceSetting","legacyEnv","legacyFilterMaxRadians","asin","legacyFilterMax","resonant","firstOrder","cutoffAtMax","legacyFilterCutoffRange","envDecays","standardSampleRate","legacyHz","legacyRadians","extraOctaves","targetRadians","curvedHz","finalHz","finalRadians","legacyFilter","response","legacyFilterGainAtNewRadians","logGain","convertedGain","intendedGain","invertedGain","curvedRadians","legacyFilterGain","EnvelopeSettings","envelopeObject","Instrument","chipWave","chipNoise","envelopeCount","fadeIn","fadeOut","pitchShift","detune","pan","supersawDynamism","supersawSpread","supersawShape","bitcrusherFreq","echoSustain","echoDelay","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","spectrumWave","setTypeAndReset","legacySettings","filterCutoff","legacyFilterEnv","legacyPulseEnv","legacyOperatorEnvelopes","operatorEnvelopes","legacyFeedbackEnv","noCarriersControlledByNoteSize","allCarriersControlledByNoteSize","noteSizeControlsSomethingElse","addEnvelope","instrumentObject","getChord","detuneToCents","fadeInSettingToSeconds","fadeOutSettingToTicks","getDrumsetEnvelope","operatorArray","operator","legacyGlobalReverb","legacyEffectsNames","transitionProperty","binary","seamless","sudden","hard","smooth","soft","slide","secondsToFadeInSetting","ticksToFadeOutSetting","chordProperty","legacyChordNames","harmony","unisonProperty","legacyChorusNames","union","fifths","octaves","centsToDetune","vibratoProperty","legacyVibratoNames","isNaN","findIndex","legacyEnvelopeNames","custom","steady","getEnvelope","drum","legacyWaveNames","triangle","square","sawtooth","spiky","plateau","operatorObject","filterCutoffMaxHz","filterCutoffRange","filterResonanceRange","LN2","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","envelopeArray","tempEnvelope","frequencyFromPitch","supportsEnvelopeTarget","envelopeSettings","automationTarget","clearInvalidEnvelopeTargets","envelopeIndex","getTransition","getFadeInSeconds","getFadeOutTicks","Channel","patterns","bars","muted","Song","string","channels","fromBase64String","initToDefault","getChannelCount","noiseChannelCount","getMaxInstrumentsPerChannel","layeredInstruments","getMaxInstrumentsPerPattern","channelIndex","getChannelIsNoise","andResetChannels","scale","loopStart","loopLength","tempo","barCount","patternsPerChannel","pattern","instrument","bar","toBase64String","bits","_latestVersion","harmonicsBits","o","spectrumBits","neededBits","shapeBits","bitsPerNoteSize","getNeededBits","maxInstrumentsPerPattern","neededInstrumentCountBits","neededInstrumentIndexBits","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","unshift","pop","allPitches","pitchIndex","pitchIter","stringLength","digits","prototype","maxApplyArgs","slice","_envelopeFromLegacyIndex","legacyIndex","compressed","charIndex","JSON","parse","substring","_oldestVersion","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","beforeNine","legacySettingsCache","command","instrumentChannelIterator","instrumentIndexIterator","channelCount","instrumentsPerChannel","instrumentIndex","instrumentsFlagBits","legacyWaves","originalControlPointCount","sustainValue","legacyEffects","legacyEnvelopes","originalValue","byteCount","subStringLength","bitStringLength","bitStringLengthLength","newPattern","newNotes","noteCount","useOldShape","pinCount","initialSize","bendCount","pinObj","intervalIter","shift","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","patternArray","sequenceArray","l","channelObject","sequence","format","_format","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","oldScaleNames","enigma","scaleName","letter","charAt","toUpperCase","symbol","toLowerCase","C","D","E","F","G","B","maxInstruments","maxPatterns","maxBars","newPitchChannels","newNoiseChannels","instrumentObjects","getPattern","patternIndex","getBeatsPerMinute","maxValue","clz32","PickedString","delayLine","allPassG","allPassGDelta","sustainFilterA1","sustainFilterA1Delta","sustainFilterA2","sustainFilterA2Delta","sustainFilterB0","sustainFilterB0Delta","sustainFilterB1","sustainFilterB1Delta","sustainFilterB2","sustainFilterB2Delta","delayIndex","allPassSample","allPassPrevInput","sustainFilterSample","sustainFilterPrevOutput2","sustainFilterPrevInput1","sustainFilterPrevInput2","fractionalDelaySample","prevDelayLength","delayResetOffset","update","synth","instrumentState","tone","stringIndex","roundedSamplesPerTick","stringDecayStart","stringDecayEnd","sustainType","allPassCenter","samplesPerSecond","phaseDeltaStart","phaseDeltas","phaseDeltaScale","phaseDeltaScales","phaseDeltaEnd","radiansPerSampleStart","radiansPerSampleEnd","centerHarmonicStart","centerHarmonicEnd","allPassRadiansStart","allPassRadiansEnd","shelfRadians","decayCurveStart","decayCurveEnd","register","registerShelfCenter","registerLowpassCenter","decayRateStart","decayRateEnd","expressionDecayStart","expressionDecayEnd","tempFilterStartCoefficients","tempFrequencyResponse","allPassGStart","allPassPhaseDelayStart","tempFilterEndCoefficients","allPassGEnd","allPassPhaseDelayEnd","brightnessType","shelfGainStart","shelfGainEnd","cornerHardness","lowpass1stOrderCutoffRadiansStart","lowpass1stOrderCutoffRadiansEnd","lowpass2ndOrderCutoffRadiansStart","lowpass2ndOrderCutoffRadiansEnd","lowpass2ndOrderGainStart","lowpass2ndOrderGainEnd","sustainFilterA1Start","sustainFilterA2Start","sustainFilterB0Start","sustainFilterB1Start","sustainFilterB2Start","sustainFilterPhaseDelayStart","sustainFilterA1End","sustainFilterA2End","sustainFilterB0End","sustainFilterB1End","sustainFilterB2End","sustainFilterPhaseDelayEnd","periodLengthStart","periodLengthEnd","minBufferLength","delayLength","delayLengthEnd","delayLengthDelta","pitchChanged","abs","reinitializeImpulse","likelyMaximumLength","newDelayLine","oldDelayBufferMask","startCopyingFromIndex","delayBufferMask","startImpulseFrom","startZerosFrom","stopZerosAt","impulseWave","impulseWaveLength","impulsePhaseDelta","fadeDuration","startImpulseFromSample","stopImpulseAt","stopImpulseAtSample","impulsePhase","prevWaveIntegral","impulsePhaseInt","nextWaveIntegral","phaseRatio","sample","combinedFade","curvedFade","EnvelopeComputer","noteSecondsStart","noteSecondsEnd","noteTicksStart","noteTicksEnd","noteSizeStart","noteSizeEnd","prevNoteSize","nextNoteSize","_noteSizeFinal","prevNoteSecondsStart","prevNoteSecondsEnd","prevNoteTicksStart","prevNoteTicksEnd","_prevNoteSizeFinal","prevSlideStart","prevSlideEnd","nextSlideStart","nextSlideEnd","prevSlideRatioStart","prevSlideRatioEnd","nextSlideRatioStart","nextSlideRatioEnd","envelopeStarts","envelopeEnds","_modifiedEnvelopeIndices","_modifiedEnvelopeCount","lowpassCutoffDecayVolumeCompensation","computeEnvelopes","currentPart","tickTimeStart","secondsPerTick","atNoteStart","forceContinueAtStart","tickTimeEnd","beatsPerTick","beatTimeStart","beatTimeEnd","passedEndOfNote","startPin","endPin","startPinTick","endPinTick","ratioStart","ratioEnd","noteStartTick","noteStartPart","noteEndTick","noteEndPart","maximumSlideTicks","prevNote","nextNote","forceContinueAtEnd","usedNoteSize","targetIndex","envelopeStart","computeEnvelope","envelopeEnd","filterSettings","getLowpassCutoffDecayVolumeCompensation","clearEnvelopes","beats","noteSize","noteSizeToVolumeMult","attack","Tone","fill","chordSize","drumsetPitch","prevNotePitchIndex","nextNotePitchIndex","freshlyAllocated","isOnLastTick","ticksSinceReleased","liveInputSamplesHeld","lastInterval","noiseSample","phases","expressionDelta","operatorExpressions","operatorExpressionDeltas","prevPitchExpressions","prevVibrato","prevStringDecay","pulseWidthDelta","supersawDynamismDelta","supersawUnisonDetunes","supersawShapeDelta","supersawDelayLength","supersawDelayLengthDelta","supersawDelayLine","supersawDelayIndex","supersawPrevPhaseDelta","pickedStrings","noteFilters","noteFilterCount","initialNoteFilterInput1","initialNoteFilterInput2","specialIntervalExpressionMult","feedbackOutputs","feedbackMult","feedbackDelta","envelopeComputer","pickedString","InstrumentState","awake","computed","tonesAddedInThisTick","flushingDelayLines","deactivateAfterThisTick","attentuationProgress","flushedSamples","activeTones","releasedTones","liveInputTones","synthesizer","noisePitchFilterMult","eqFilterVolume","eqFilterVolumeDelta","mixVolume","mixVolumeDelta","delayInputMult","delayInputMultDelta","distortionDelta","distortionDrive","distortionDriveDelta","distortionFractionalInput1","distortionFractionalInput2","distortionFractionalInput3","distortionPrevInput","distortionNextOutput","bitcrusherPrevInput","bitcrusherCurrentOutput","bitcrusherPhase","bitcrusherPhaseDelta","bitcrusherPhaseDeltaScale","bitcrusherScale","bitcrusherScaleScale","bitcrusherFoldLevel","bitcrusherFoldLevelScale","eqFilters","eqFilterCount","initialEqFilterInput1","initialEqFilterInput2","panningDelayLine","panningDelayPos","panningVolumeL","panningVolumeR","panningVolumeDeltaL","panningVolumeDeltaR","panningOffsetL","panningOffsetR","panningOffsetDeltaL","panningOffsetDeltaR","chorusDelayLineL","chorusDelayLineR","chorusDelayLineDirty","chorusDelayPos","chorusPhase","chorusVoiceMult","chorusVoiceMultDelta","chorusCombinedMult","chorusCombinedMultDelta","echoDelayLineL","echoDelayLineR","echoDelayLineDirty","echoDelayPos","echoDelayOffsetStart","echoDelayOffsetEnd","echoDelayOffsetRatio","echoDelayOffsetRatioDelta","echoMult","echoMultDelta","echoShelfA1","echoShelfB0","echoShelfB1","echoShelfSampleL","echoShelfSampleR","echoShelfPrevInputL","echoShelfPrevInputR","reverbDelayLine","reverbDelayLineDirty","reverbDelayPos","reverbMult","reverbMultDelta","reverbShelfA1","reverbShelfB0","reverbShelfB1","reverbShelfSample0","reverbShelfSample1","reverbShelfSample2","reverbShelfSample3","reverbShelfPrevInput0","reverbShelfPrevInput1","reverbShelfPrevInput2","reverbShelfPrevInput3","allocateNecessaryBuffers","samplesPerTick","panningDelayBufferSize","chorusDelayBufferSize","safeEchoDelaySteps","safeEchoDelayBufferSize","newDelayLineL","newDelayLineR","oldMask","deactivate","resetAllEffects","compute","getInstrumentSynthFunction","updateWaves","usesDistortion","usesBitcrusher","usesPanning","usesChorus","usesEcho","usesReverb","distortionSliderStart","distortionSliderEnd","distortionStart","distortionEnd","distortionDriveStart","distortionDriveEnd","freqSettingStart","freqSettingEnd","quantizationSettingStart","quantizationSettingEnd","freqStart","freqEnd","scaleStart","scaleEnd","foldLevelStart","foldLevelEnd","eqFilterSettings","mainInstrumentVolume","instrumentVolumeToVolumeMult","mixVolumeEnd","eqFilterVolumeStart","eqFilterVolumeEnd","delayInputMultStart","delayInputMultEnd","panStart","panEnd","volumeStartL","volumeStartR","volumeEndL","volumeEndR","maxDelaySamples","delayStart","delayEnd","delayStartL","delayStartR","delayEndL","delayEndR","chorusStart","chorusEnd","chorusCombinedMultStart","chorusCombinedMultEnd","maxEchoMult","averageEchoDelaySeconds","echoMultStart","echoMultEnd","echoDelayOffset","maxReverbMult","reverbStart","reverbEnd","totalDelaySamples","attenuationThreshold","halfLifeMult","delayDuration","attenuationPerSecond","averageMult","averageReverbDelaySeconds","progressInTick","progressAtEndOfTick","_drumsetIndexToSpectrumOctave","getDrumsetWave","drumsetIndexReferenceDelta","ChannelState","singleSeamlessInstrument","preferLowerLatency","anticipatePoorPerformance","liveInputDuration","liveInputStarted","liveInputPitches","liveInputChannel","liveInputInstruments","loopRepeatCount","enableMetronome","countInMetronome","playheadInternal","prevBar","nextBar","beat","isAtStartOfTick","tickSampleCountdown","isPlayingSong","isRecording","liveInputEndTime","browserAutomaticallyClearsAudioBuffer","tempDrumSetControlPoint","tonePool","tempMatchedPitchTones","startedMetronome","metronomeSamplesRemaining","metronomeAmplitude","metronomePrevAmplitude","metronomeFilter","limit","tempMonoInstrumentSampleBuffer","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","getChannelData","outputDataR","performance","now","deactivateAudio","synthesize","computeDelayBufferSizes","setSong","syncSongState","channelState","warmUpSynthesizer","getSamplesPerTick","operatorAmplitudeCurve","playing","recording","remainder","getSamplesPerBar","getTicksIntoBar","getCurrentPart","getTotalBars","panningDelayBufferMask","chorusDelayBufferMask","activateAudio","bufferSize","latencyHint","window","AudioContext","webkitAudioContext","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","close","maintainLiveInput","play","pause","startRecording","snapToStart","snapToBar","goToBar","resetEffects","freeAllTones","jumpIntoLoop","oldBar","goToNextBar","goToPrevBar","getNextBar","outputBufferLength","playSong","ended","limitDecay","limitRise","bufferIndex","samplesLeftInBuffer","samplesLeftInTick","runLength","runEnd","determineCurrentActiveTones","determineLiveInputTones","tonesPlayedInThisInstrument","freeReleasedTone","shouldFadeOutFast","computeTone","playTone","effectsSynth","midBeat","periods","samplesPerPeriod","tempAmplitude","sampleL","sampleR","limitedVolume","Number","isFinite","freeTone","newTone","releaseTone","toneIndex","toneList","toneCount","moveTonesIntoOrderedTempMatchedList","clearTempMatchedPitchTones","adjacentPatternHasCompatibleInstrumentTransition","otherPattern","otherNote","forceContinue","otherInstrument","otherTransition","adjacentNotesHaveMatchingPitches","firstNote","secondNote","firstNoteInterval","notePitches","currentTick","newInstrumentIndex","sourceInstrumentState","destInstrumentState","prevNoteForThisInstrument","nextNoteForThisInstrument","partsPerBar","tonesInPrevNote","tonesInNextNote","prevPattern","lastNote","patternForcesContinueAtStart","chordOfCompatibleInstrument","nextPattern","nextPatternForcesContinueAtStart","oldTone","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","computeChordExpression","released","chordExpression","intervalScale","secondsPerPart","sampleTime","beatsPerPart","ticksIntoBar","partTimeStart","partTimeEnd","specialIntervalMult","toneIsOnLastTick","intervalStart","intervalEnd","fadeExpressionStart","fadeExpressionEnd","chordExpressionStart","chordExpressionEnd","expressionReferencePitch","baseExpression","pitchDamping","startTicksSinceReleased","endTicksSinceReleased","pinStart","pinEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","noteLengthTicks","intervalDiff","chordSizeDiff","vibratoAmplitude","vibratoStart","getLFOAmplitude","ticksUntilVibratoStart","vibratoEnd","ticksUntilVibratoEnd","noteFilterExpression","noteFilterSettings","noteAllFreqsEnvelopeStart","noteAllFreqsEnvelopeEnd","noteFreqEnvelopeStart","noteFreqEnvelopeEnd","notePeakEnvelopeStart","notePeakEnvelopeEnd","drumsetFilterEnvelope","drumsetFilterEnvelopeStart","drumsetFilterEnvelopeEnd","sineExpressionBoost","totalCarrierExpression","arpeggioInterval","associatedCarrierIndex","pitchStart","pitchEnd","baseFreqStart","baseFreqEnd","targetFreqStart","targetFreqEnd","freqEnvelopeStart","freqEnvelopeEnd","amplitudeCurve","amplitudeMult","expressionStart","expressionEnd","pitchExpressionStart","pitchExpressionEnd","feedbackStart","feedbackEnd","freqEndRatio","basePhaseDeltaScale","intervalOffset","endPitch","settingsExpressionMult","basePulseWidth","pulseWidthStart","pulseWidthEnd","startFreq","voiceCountExpression","unisonEnvelopeStart","unisonEnvelopeEnd","unisonAStart","unisonAEnd","unisonBStart","unisonBEnd","supersawExpressionStart","supersawExpressionEnd","minFirstVoiceAmplitude","baseDynamismSlider","curvedDynamismStart","curvedDynamismEnd","firstVoiceAmplitudeStart","firstVoiceAmplitudeEnd","dynamismStart","dynamismEnd","initializeSupersaw","accumulator","normalizedPhase","zeroCrossingPhase","prevDrop","nextDrop","phaseDelta","distanceToZeroCrossing","swappedIndex","baseSpreadSlider","averageSpreadSlider","curvedSpread","baseShape","shapeStart","shapeEnd","delayLengthStart","pulseExpressionRatio","sustainEnvelopeStart","sustainEnvelopeEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulators","modulatorNumber","feedbackIndices","wrappedFmSynth","Function","chipSynth","harmonicsSynth","pulseWidthSynth","supersawSynth","pickedStringSynth","noiseSynth","spectrumSynth","drumsetSynth","data","unisonSign","phaseDeltaA","phaseDeltaB","phaseDeltaScaleA","phaseDeltaScaleB","phaseA","phaseB","filters","filterCount","initialFilterInput1","initialFilterInput2","applyFilters","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","prevWaveIntegralA","prevWaveIntegralB","sampleIndex","nextWaveIntegralA","nextWaveIntegralB","waveA","waveB","inputSample","output","sanitizeFilters","voiceCount","pickedStringFunction","pickedStringFunctionCache","pickedStringSource","sampleList","voice","lines","usesEqFilter","signature","effectsFunction","effectsFunctionCache","effectsSource","usesDelays","phase","sawPhaseA","sawPhaseB","pulseWave","t","dynamismDelta","unisonDetunes","shapeDelta","supersawSample","detunedPhaseDelta","delaySampleTime","lowerIndex","upperIndex","delayRatio","prevDelaySample","phaseMask","pitchRelativefilter","findRandomZeroCrossing","phaseInt","waveSample","referenceDelta","indexPrev","wavePrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","instrumentVolume","volumeMultToInstrumentVolume","volumeMult","volumeMultToNoteSize","setting","seconds","ticks","lower","upper","cents","beatsPerSecond","partsPerSecond","tickPerSecond","sanitizeDelayLine","lastIndex","mask","input1","input2","button","p","h2","TipPrompt","_doc","message","_closeButton","class","_close","undo","cleanUp","removeEventListener","container","setTimeout","focus","addEventListener","Change","_noop","_didSomething","isNoop","commit","UndoableChange","reversed","super","_reversed","_doneForwards","_doForwards","_doBackwards","redo","_isDoneForwards","ChangeGroup","append","change","ChangeSequence","changes","_changes","patternsContainSameInstruments","pattern1Instruments","pattern2Instruments","pattern2Has1Instruments","every","pattern1Has2Instruments","discardInvalidPatternInstruments","uniqueInstruments","Set","unionOfUsedNotes","removeRedundantPins","prevPin","nextPin","prevTimeSpan","nextTimeSpan","projectNoteIntoBar","oldNote","timeOffset","newNoteLength","newPinTime","nextPinTime","ratio","prevPinTime","offsetInterval","pitchIdx","pinIdx","joinedWithPrevNote","newIntervalOffset","newTimeOffset","tempPin","transformedPin","ChangeMoveAndOverflowNotes","doc","newBeatsPerBar","partsToMove","oldChannel","newChannel","oldPartsPerBar","newPartsPerBar","currentBar","oldPattern","oldBarStart","absoluteNoteStart","absoluteNoteEnd","startBar","endBar","barStartPart","removeDuplicatePatterns","ChangeReplacePatterns","ChangePins","_note","_oldStart","_oldEnd","_newStart","_newEnd","_oldPins","_newPins","_oldPitches","_newPitches","_oldContinuesLastPattern","_newContinuesLastPattern","_finishSetup","firstInterval","firstTime","notifier","changed","ChangeCustomizeInstrument","getCurrentInstrument","ChangePreset","newValue","tempVolume","tempPan","ChangeRandomGeneratedInstrument","selectWeightedRandom","entries","total","entry","weight","item","selectCurvedDistribution","peak","width","PotentialFilterPoint","chance","minFreq","maxFreq","centerHz","centerGain","applyFilterPoints","potentialPoints","usedFreqs","potentialPoint","includes","midFreq","normalize","spectrumGenerators","current","generator","harmonicGenerators","ChangeTransition","ChangeToggleEffects","toggleFlag","oldValue","wasSelected","ChangePatternNumbers","startChannel","height","ChangeBarCount","atBeginning","diff","barScrollPos","ChangeInsertBars","newLength","ChangeDeleteBars","ChangeChannelOrder","selectionMin","selectionMax","ChangeChannelCount","newPitchChannelCount","newNoiseChannelCount","newChannels","changeGroup","newCount","oldCount","newStart","oldStart","pickRandomPresetValue","ChangeAddChannel","addedChannelIndex","ChangeRemoveChannel","minIndex","maxIndex","ChangeChannelBar","newBar","silently","selection","scrollToSelectedPattern","ChangeUnison","ChangeChord","ChangeVibrato","ChangeSpectrum","ChangeHarmonics","ChangeDrumsetEnvelope","drumIndex","ChangeInstrumentSlider","_instrument","ChangePulseWidth","ChangeSupersawDynamism","ChangeSupersawSpread","ChangeSupersawShape","ChangePitchShift","ChangeDetune","ChangeDistortion","ChangeBitcrusherFreq","ChangeBitcrusherQuantization","ChangeStringSustain","ChangeStringSustainType","ChangeFilterAddPoint","isNoteFilter","deletion","_envelopeTargetsAdd","_envelopeIndicesAdd","_envelopeTargetsRemove","_envelopeIndicesRemove","_instrumentNextPreset","_instrumentPrevPreset","_filterSettings","_point","ChangeFilterMovePoint","oldFreq","newFreq","oldGain","newGain","_oldFreq","_newFreq","_oldGain","_newGain","ChangeFadeInOut","_oldFadeIn","_oldFadeOut","_newFadeIn","_newFadeOut","ChangeAlgorithm","ChangeFeedbackType","ChangeOperatorFrequency","operatorIndex","ChangeOperatorAmplitude","ChangeFeedbackAmplitude","ChangeAddChannelInstrument","viewedInstrument","ChangeRemoveChannelInstrument","removedIndex","ChangeViewInstrument","ChangeInstrumentsFlags","newLayeredInstruments","newPatternInstruments","oldLayeredInstruments","oldPatternInstruments","ChangeKey","ChangeLoop","oldLength","ChangePitchAdded","_pitch","ChangeOctave","ChangeRhythm","ChangePaste","selectionStart","selectionEnd","oldPartDuration","ChangeNoteTruncate","noteInsertionIndex","noteStart","noteEnd","ChangeNoteLength","ChangePasteInstrument","instrumentCopy","ChangeSetPatternInstruments","ChangePatternsPerChannel","channelBars","channelPatterns","ChangeEnsurePatternExists","_patternOldNotes","_oldPatternInstruments","_bar","_channelIndex","_oldPatternCount","_newPatternCount","_newPatternInstruments","recentPatternInstruments","firstEmptyUnusedIndex","firstUnusedIndex","used","barIndex","_patternIndex","ChangePinTime","shiftedTime","originalTime","skipStart","skipEnd","setPin","oldPin","ChangePitchBend","bendStart","bendEnd","bendTo","direction","stop","setStart","setEnd","prevInterval","prevSize","persist","ChangePatternRhythm","minDivision","changeRhythm","oldTime","thresholds","beatStart","newTime","threshold","ChangeNoteAdded","ChangeRhythmNote","ChangeMoveNotesSideways","beatsToMove","strategy","originalBarCount","originalLoopStart","originalLoopLength","firstBarIsEmpty","ChangeBeatsPerBar","noteIndex","ChangeTempo","ChangeScale","ChangeDetectKey","keyWeights","bestKey","bestKeyWeight","keyWeight","absoluteDiff","ChangeTranspose","eligiblePresetValues","setDefaultInstruments","ChangeSong","newHash","ChangePatternSelection","resetBoxSelection","prefs","defaultScale","ChangeValidateTrackSelection","removeExtraSparseChannels","maxLength","sparsestIndex","mostZeroes","zeroes","combinedChannels","comparePatternNotes","newPatterns","foundMatchingPattern","newPatternIndex","ChangeEchoDelay","ChangeEchoSustain","ChangeChorus","ChangeReverb","_pattern","truncStart","truncEnd","pushLastPin","skipNote","copy","ChangeSplitNotesAtSelection","patternSelectionStart","patternSelectionEnd","ChangeTransposeNote","upward","ignoreScale","foundMatch","patternSelectionActive","ChangeTrackSelection","newX0","newX1","newY0","newY1","boxSelectionX0","boxSelectionX1","boxSelectionY0","boxSelectionY1","newEnd","_oldActive","_newActive","ChangeDragSelectedNotes","parts","transpose","oldEnd","draggedNotes","notesOutsideScale","ChangeDuplicateSelectedReusedPatterns","barStart","barWidth","channelStart","channelHeight","reusablePatterns","currentPatternIndex","isUsedElsewhere","bar2","copiedPattern","ChangePatternScale","scaleMap","newPitches","newPins","transformedPitch","transformedInterval","ChangeVolume","ChangePan","ChangeSizeBend","bendPart","bendSize","bendInterval","uniformSize","inserted","ChangeChipWave","ChangeNoiseWave","ChangeAddEnvelope","ChangeRemoveEnvelope","ChangeSetEnvelopeTarget","oldTarget","oldIndex","ChangeSetEnvelopeType","PatternCursor","valid","curNote","curIndex","exactPart","nearPinIndex","PatternEditor","_interactive","_barOffset","_svgNoteBackground","id","patternUnits","_svgDrumBackground","_svgBackground","rect","_svgNoteContainer","svg","_svgPlayhead","_selectionRect","stroke","visibility","_svgPreview","path","_svg","defs","_backgroundPitchRows","_backgroundDrumRow","_pitchHeight","_mouseX","_mouseY","_mouseDown","_mouseOver","_mouseDragging","_mouseHorizontal","_usingTouch","_copiedPinChannels","_mouseXStart","_mouseYStart","_ctrlHeld","_shiftHeld","_touchTime","_draggingStartOfSelection","_draggingEndOfSelection","_draggingSelectionContents","_dragTime","_dragPitch","_dragSize","_dragVisible","_dragChange","_changePatternSelection","_lastChangeWasPatternSelection","_cursor","_playheadX","_octaveOffset","_renderedWidth","_renderedHeight","_renderedBeatWidth","_renderedPitchHeight","_renderedFifths","_renderedDrums","_renderedRhythm","_renderedPitchChannelCount","_renderedNoiseChannelCount","_followPlayheadBar","resetCopiedPins","maxDivision","_getMaxDivision","_animatePlayhead","timestamp","lastChangeWas","_whenCursorPressed","notifyWatchers","playheadBar","modPlayhead","_editorWidth","autoFollow","currentPatternIsDirty","_redrawNotePatterns","requestAnimationFrame","_whenMouseOver","event","_whenMouseOut","_whenMousePressed","preventDefault","boundingRect","getBoundingClientRect","clientX","pageX","left","right","clientY","pageY","top","_editorHeight","bottom","ctrlKey","metaKey","shiftKey","_whenTouchPressed","touches","_whenMouseMoved","_whenCursorMoved","_whenTouchMoved","_whenCursorReleased","continuousState","record","_setPatternSelection","_copyPins","enableNotePreview","setTemporaryPitches","_updateCursorStatus","_updatePreview","rectangle","display","_getMaxPitch","rhythmStepsPerBeat","_getMinDivision","_snapToMinDivision","input","_partWidth","mousePitch","_findMousePitch","error","leftSide","rightSide","intervalRatio","arc","bendHeight","minInterval","MAX_VALUE","maxInterval","bestDistance","pinDistance","_snapToPitch","nearest","distance","defaultLength","_copiedPins","fullBeats","modMouse","division","forceStart","forceEnd","_cursorIsInSelection","_cursorAtStartOfSelection","_cursorAtEndOfSelection","pixelY","_pitchCount","guess","topPitch","bottomPitch","topRange","bottomRange","movePlayheadToMouse","setProspectiveChange","getCurrentPattern","_updateSelection","dx","dy","notesInScale","pitchRatio","draggedParts","draggedTranspose","backwards","directLength","blessedLength","theNote","shiftedPin","sizeRatio","minPitch","hasRedoHistory","_pitchToPixelHeight","radius","pathString","sizeMax","center","_drawNote","render","clientHeight","getVisiblePitchCount","getBaseVisibleOctave","beatWidth","showFifth","node","cloneNode","parentNode","replaceChild","makeEmptyReplacementElement","showChannels","pattern2","notePath","displayNumberedChords","indicatorOffset","arrowHeight","arrowPath","arrow","oscillatorLabel","text","svgElement","showSize","totalWidth","endOffset","prevSide","nextSide","prevHeight","nextHeight","nextSize","EnvelopeEditor","_rows","_targetSelects","_envelopeSelects","_deleteButtons","_renderedEnvelopeCount","_renderedEqFilterCount","_renderedNoteFilterCount","_renderedEffects","_onChange","targetSelectIndex","envelopeSelectIndex","combinedValue","parseInt","selectedIndex","_onClick","_makeOption","option","_updateTargetOptionVisibility","menu","optionIndex","childElementCount","children","hidden","alwaysShowSettings","targetSelect","select","interleaved","envelopeSelect","deleteButton","row","_renderedInstrumentType","FadeInOutEditor","_fadeCurve","_dottedLinePath","_controlCurve","viewBox","preserveAspectRatio","_draggingFadeIn","_renderedFadeIn","_renderedFadeOut","offsetParent","_xToFadeIn","_xToFadeOut","dottedLineX","_fadeOutToX","_fadeInToX","fadeInX","fadeOutX","fadePath","FilterEditor","useNoteFilter","_responsePath","_controlPointPath","_highlight","circle","r","_label","_pointRadius","_useNoteFilter","_touchMode","_addingPoint","_deletingPoint","_addedType","_selectedIndex","_freqStart","_gainStart","_renderedSelectedIndex","_renderedPointCount","_renderedPointTypes","_renderedPointFreqs","_renderedPointGains","_updatePath","_updateCursor","_xToFreq","_freqToX","_yToGain","_gainToY","nearestDistance","POSITIVE_INFINITY","_findNearestFreqSlot","freqDelta","gainDelta","targetFreq","ignoreIndex","roundedFreq","lowerFreq","upperFreq","tryingLower","foundConflict","currentFreq","_circlePath","cx","cy","reverse","controlPointPath","dottedLinePath","pointX","pointY","responsePath","pointTypes","pointFreqs","pointGains","Box","color","_text","ChannelRow","patternHeight","_renderedIndex","background","setWidth","setIndex","selected","_renderedBarWidth","_boxes","getBarWidth","box","dim","colors","MuteEditor","_cornerFiller","_buttons","enableChannelMuting","muteButton","title","TrackEditor","_channelRowContainer","_playhead","_boxHighlight","_upHighlight","_downHighlight","_select","_channels","_mouseStartBar","_mouseStartChannel","_mouseBar","_mouseChannel","_mousePressed","_barWidth","_renderedEditorWidth","_renderedEditorHeight","_renderedPatternCount","_renderedPlayhead","_whenSelectChanged","setPattern","_whenSelectPressed","_updateSelectPos","_whenSelectMoved","_dragBoxSelection","_whenSelectReleased","_updateMousePos","setTrackSelection","selectionUpdated","setChannelBar","_whenMouseReleased","up","patternCount","determinedCursorType","middle","base","tip","lastChild","selectedPattern","channelRow","editorWidth","editorHeight","boxSelectionActive","boxSelectionBar","boxSelectionChannel","boxSelectionWidth","boxSelectionHeight","label","form","LayoutPrompt","_fileInput","accept","_okayButton","_cancelButton","_form","_confirm","_whenKeyPressed","keyCode","boxbeepLayout","elements","save","LoopEditor","_startMode","_endMode","_bothMode","_loop","_change","mode","_clientStartX","_clientStartY","_startedScrolling","_draggingHorizontally","_renderedLoopStart","_renderedLoopStop","_renderedBarCount","_whenTouchReleased","_render","_documentChanged","watch","_findEndPoints","endPoints","showHighlight","highlightStart","highlightStop","loopStop","SpectrumEditor","_spectrumIndex","_fill","_octaves","_fifths","_curve","_arrow","_freqPrev","_ampPrev","_renderedPath","_yToAmp","amp","controlPointToHeight","lastValue","nextValue","lastHeight","HarmonicsEditor","_lastControlPoints","_lastControlPointContainer","xPos","BarScrollBar","_notches","_handle","_handleHighlight","_leftHighlight","_rightHighlight","_dragging","_renderedNotchCount","_renderedScrollBarPos","_notchSpace","trackVisibleBars","_dragStart","showleftHighlight","showRightHighlight","showHandleHighlight","resized","lineHeight","OctaveScrollBar","_notchHeight","_octaveCount","_octaveHeight","_renderedBarBottom","_renderedVisibleOctaveCount","_barBottom","_barHeight","visibleOctaveCount","getVisibleOctaveCount","scrollableOctaves","canReplaceLastChange","currentOctave","showUpHighlight","showDownHighlight","defaultMidiPitchBend","analogousDrumMap","midiVolumeToVolumeMult","toString","MidiInputHandler","_takeMidiHandlerFocus","localStorage","setItem","_handleStateChange","port","state","_registerMidiInput","_unregisterMidiInput","midiInput","_onMidiMessage","clearAllPitches","enableMidi","getItem","isDrum","eventType","velocity","addPerformedPitch","removePerformedPitch","registerMidiAccessHandler","requestMIDIAccess","midiAccess","inputs","forEach","e","KeyboardLayout","_possiblyPlayingPitchesFromKeyboard","_onWindowBlur","keyPosToPitch","keyboardLayout","pitchOffset","forcedKey","scaleIndices","flag","_pianoAtC","_pianoAtA","keyOffset","handleKeyEvent","pressed","code","handleKey","Piano","_pianoContainer","_drumContainer","_preview","_pianoKeys","_pianoLabels","_playedPitch","_renderedScale","_renderedKey","_renderedPitchCount","_renderedLiveInputPitches","_updateCursorPitch","_playLiveInput","_releaseLiveInput","_onAnimationFrame","liveInputChanged","liveInputPitchCount","pitchesAreTemporary","showLetters","innerHTML","pianoLabel","pianoKey","pitchNameIndex","getPitchName","_cursorPitch","pitchHeight","child","scaleIndex","shiftDir","span","br","BeatsPerBarPrompt","_beatsStepper","step","_conversionStrategySelect","_saveChanges","_validateKey","_validateNumber","prompt","_validate","lastStrategy","charCode","which","MoveNotesSidewaysPrompt","SongDurationPrompt","_barsStepper","_positionSelect","group","lastPosition","SustainPrompt","_typeSelect","ChannelSettingsPrompt","_patternsStepper","_pitchChannelStepper","_drumChannelStepper","_layeredInstrumentsBox","_patternInstrumentsBox","checked","transfer","dest","ArrayBuffer","nextOffset","leftBytes","byteLength","wordSizes","wordSize","transferWith","ViewClass","Uint8Array","Float64Array","Uint16Array","view_source","view_dest","byteOffset","ArrayBufferWriter","initialCapacity","_writeIndex","_fileSize","_arrayBuffer","_data","DataView","_addBytes","numBytes","getWriteIndex","rewriteUint32","setUint32","writeUint32","writeUint24","setUint8","writeUint16","setUint16","writeUint8","writeInt8","setInt8","writeMidi7Bits","writeMidiVariableLength","startWriting","writeMidiAscii","toCompactArrayBuffer","lerp","low","high","blob","msSaveOrOpenBlob","anchor","download","url","URL","createObjectURL","revokeObjectURL","href","dispatchEvent","MouseEvent","open","location","ExportPrompt","_fileName","maxlength","autofocus","_enableIntro","_loopDropDown","_enableOutro","_formatSelect","_exportButton","_validateFileName","_export","_exportToWav","_exportToMp3","_exportToMidi","_exportToJson","_exportToHtml","disabled","lastExportFormat","deleteChars","cursorPos","setSelectionRange","_synthesize","introIter","sampleFrames","recordedSamplesL","recordedSamplesR","sampleCount","arrayBuffer","bytesPerSample","range","valL","valR","setInt16","Blob","trim","whenEncoderIsAvailable","sampleBlockSize","mp3encoder","Mp3Encoder","mp3Data","Int16Array","leftChunk","subarray","rightChunk","mp3buf","encodeBuffer","flush","script","src","onload","midiTicksPerBeat","midiTicksPerPart","microsecondsPerBeat","secondsPerMinute","midiTicksPerBar","pitchBendRange","unrolledBars","loopIndex","tracks","isMeta","midiChannel","isDrumset","midiChannelCounter","foundADrumset","writer","track","trackStartIndex","prevTime","barStartTime","writeEventTime","writeControlEvent","isMinor","numSharps","channelName","prevInstrumentIndex","writeInstrumentSettings","instrumentProgram","midiChipInstruments","instrumentPan","prevPitchBend","prevExpression","shouldResetExpressionAndPitchBend","channelRoot","usesArpeggio","polyphony","noteStartTime","pinTime","pinSize","pinInterval","prevPitches","nextPitches","maxPitchOffset","minPitchOffset","nextPinSize","nextPinInterval","midiTick","midiTickTime","linearSize","noteStarting","drumsetMap","midiTicksSinceBeat","midiTicksPerArpeggio","noteEndTime","jsonString","stringify","fileContents","ArrayBufferReader","getReadIndex","readUint32","getUint32","readUint24","readUint8","readUint16","getUint16","getUint8","readInt8","getInt8","peakUint8","readMidi7Bits","readMidiVariableLength","nextByte","skipBytes","hasMore","getReaderForNextBytes","ImportPrompt","_whenFileSelected","file","files","extension","lastIndexOf","reader","FileReader","goBackToStart","readAsText","_parseMidiFile","readAsArrayBuffer","headerReader","chunkType","chunkLength","trackReader","nextEventMidiTick","runningStatus","fileFormat","currentIndependentTrackIndex","currentTrackIndices","independentTracks","trackIndex","channelRPNMSB","channelRPNLSB","pitchBendRangeMSB","pitchBendRangeLSB","currentInstrumentProgram","currentInstrumentVolumes","currentInstrumentPans","noteEvents","pitchBendEvents","noteSizeEvents","currentMidiTick","anyTrackHasMore","eventStatus","eventChannel","foundTrackEndEvent","on","lsb","numerator","denominatorExponent","songTotalBars","quantizeMidiTickToPart","channelPresetValue","channelPreset","isDrumsetChannel","channelBasePitch","midiIntervalScale","channelMaxPitch","currentVelocity","currentProgram","currentInstrumentVolume","currentInstrumentPan","heldPitches","prevEventPart","setInstrumentVolume","noteEventIndex","noteEvent","nextEventPart","MAX_SAFE_INTEGER","drumFreqs","minDuration","maxDuration","heldPitch","currentMidiInterval","currentMidiNoteSize","pitchBendEventIndex","noteSizeEventIndex","updateCurrentMidiInterval","updateCurrentMidiNoteSize","instrumentByProgram","prevEventMidiTick","pitchSum","createdNote","barStartMidiTick","barEndMidiTick","noteStartMidiTick","noteEndMidiTick","shiftedHeldPitch","initialBeepBoxPitch","heldPitchOffset","firstPin","potentialPins","keyPitch","keySize","prevPinIndex","prevPartPitch","prevPartSize","noteRelativePart","lastPart","partPitch","partSize","nearestPitch","pitchIsNearInteger","pitchCrossedInteger","nearestSize","sizeIsNearInteger","sizeCrossedInteger","currentPin","addPin","addPinAtIndex","furthestIntervalDistance","addIntervalPin","addIntervalPinAtIndex","potentialIndex","potentialPin","interpolatedInterval","furthestSizeDistance","addSizePin","addSizePinAtIndex","interpolatedSize","toBePinned","lastToBePinned","notePin","shiftedPitch","averagePitch","compactChannels","bestChannelIndexA","bestChannelIndexB","fewestConflicts","fewestGaps","channelIndexA","channelIndexB","channelA","channelB","conflicts","gaps","channelAInstrumentCount","channelAPatternCount","some","versionPrefix","keyToVersion","versionToKey","generateUid","errorAlert","alert","compareSongs","versions","compareVersions","SongRecovery","_song","getAllRecoveredSongs","songs","songsByUid","itemKey","uid","sort","saveVersion","songData","Date","clearTimeout","_saveVersionTimeoutHandle","currentSong","newWork","mostRecentTime","work","newVersion","newKey","minSpan","spanMult","indexToDiscard","currentTime","newerTime","removeItem","leastImportantSong","leastImportance","maximumSongCount","timeScale","iframe","SongRecoveryPrompt","_songContainer","versionMenu","toLocaleString","player","contentWindow","Event","RecordingSetupPrompt","_keyboardMode","_keyboardLayout","_keyboardLayoutPreview","_enableMidi","_showRecordButton","_snapRecordedNotesToRhythm","_ignorePerformedNotesNotInScale","_metronomeCountIn","_metronomeWhileRecording","pressControlForShortcuts","showRecordButton","snapRecordedNotesToRhythm","ignorePerformedNotesNotInScale","metronomeCountIn","metronomeWhileRecording","_renderKeyboardLayoutPreview","rowLengths","rowIndex","spacer","colIndex","scalePitch","border","optgroup","buildOptions","items","buildPresetOptions","customTypeGroup","foundAny","setSelectedValue","stringValue","Slider","_getChange","_value","_oldValue","_whenInput","_whenChange","updateValue","SongEditor","_patternEditorPrev","_patternEditor","_patternEditorNext","_muteEditor","_trackEditor","_loopEditor","_octaveScrollBar","_piano","_playButton","_pauseButton","_recordButton","_stopButton","_prevBarButton","_nextBarButton","_volumeSlider","_fileMenu","_editMenu","_optionsMenu","_scaleSelect","_keySelect","_tempoSlider","_tempoStepper","_chorusSlider","_chorusRow","onclick","_openPrompt","_reverbSlider","_reverbRow","_echoSustainSlider","_echoSustainRow","_echoDelaySlider","_echoDelayRow","_rhythmSelect","_pitchedPresetSelect","_drumPresetSelect","_algorithmSelect","_algorithmSelectRow","_instrumentButtons","_instrumentAddButton","_instrumentRemoveButton","_instrumentsButtonBar","_instrumentsButtonRow","_instrumentCopyButton","_instrumentPasteButton","_instrumentCopyPasteRow","_instrumentVolumeSlider","_instrumentVolumeSliderRow","_panSlider","_panSliderRow","_chipWaveSelect","_chipNoiseSelect","_chipWaveSelectRow","_chipNoiseSelectRow","_fadeInOutEditor","_fadeInOutRow","_transitionSelect","_transitionRow","_effectsSelect","_eqFilterEditor","_eqFilterRow","_noteFilterEditor","_noteFilterRow","_supersawDynamismSlider","_supersawDynamismRow","_supersawSpreadSlider","_supersawSpreadRow","_supersawShapeSlider","_supersawShapeRow","_pulseWidthSlider","_pulseWidthRow","_pitchShiftSlider","_pitchShiftTonicMarkers","_pitchShiftFifthMarkers","_pitchShiftMarkerContainer","_pitchShiftRow","_detuneSlider","_detuneRow","_distortionSlider","_distortionRow","_bitcrusherQuantizationSlider","_bitcrusherQuantizationRow","_bitcrusherFreqSlider","_bitcrusherFreqRow","_stringSustainSlider","_stringSustainLabel","_stringSustainRow","_unisonSelect","_unisonSelectRow","_chordSelect","_chordSelectRow","_vibratoSelect","_vibratoSelectRow","_phaseModGroup","_feedbackTypeSelect","_feedbackRow1","_spectrumEditor","_spectrumRow","_harmonicsEditor","_harmonicsRow","_envelopeEditor","_drumsetGroup","_feedbackAmplitudeSlider","_feedbackRow2","_customizeInstrumentButton","_addEnvelopeButton","_customInstrumentSettingsGroup","_instrumentSettingsGroup","_promptContainer","_zoomInButton","_zoomOutButton","_patternEditorRow","_patternArea","_trackContainer","_trackVisibleArea","_trackAndMuteContainer","_barScrollBar","_trackArea","_menuArea","_songSettingsArea","_instrumentSettingsArea","_settingsArea","mainLayer","tabIndex","_wasPlaying","_currentPromptName","_highlightedInstrumentIndex","_renderedInstrumentCount","_renderedIsPlaying","_renderedIsRecording","_renderedShowRecordButton","_renderedCtrlHeld","_deactivatedInstruments","_operatorRows","_operatorAmplitudeSliders","_operatorFrequencySelects","_drumsetSpectrumEditors","_drumsetEnvelopeSelects","_refocusStage","preventScroll","_onFocusIn","whenUpdated","trackBounds","trackVisibleChannels","scrollLeft","scrollTop","channelScrollPos","showScrollBar","getFullScreen","targetBeatWidth","minBeatWidth","maxBeatWidth","patternEditorWidth","flexShrink","optionCommands","autoPlay","instrumentCopyPaste","displayBrowserUrl","boxbeepColorTheme","wasActive","contains","activeElement","effectFlag","isCarrier","operatorName","marker","chordIndex","hasAttribute","maxInstrumentsPerChannel","instrumentButton","insertBefore","oldButton","_setPrompt","addedEffect","envButtonRect","instSettingsRect","settingsRect","addedEnvelope","scrollHeight","updatePlayButton","pointerEvents","opacity","_onTrackAreaScroll","_disableCtrlContextMenu","_tempoStepperCaptureNumberKeys","stopPropagation","_toggleRecord","needControlForShortcuts","getModifierState","canPlayNotes","_togglePlay","_copyInstrument","insertChannel","insertBars","deleteChannel","deleteBars","selectChannel","selectAll","duplicatePatterns","muteChannels","soloChannels","pasteNumbers","_pasteInstrument","pasteNotes","panningEffectIndex","_copyTextToClipboard","_randomGenerated","_randomPreset","swapChannels","scrollToEndOfSelection","nextDigit","instrumentDigits","_whenKeyReleased","_whenPrevBarPressed","_whenNextBarPressed","_setVolumeSlider","setVolume","_whenSetTempo","_whenSetScale","forceScale","_whenSetKey","_whenSetRhythm","forceRhythm","_whenSetPitchedPreset","_setPreset","_whenSetDrumPreset","_whenSetFeedbackType","_whenSetAlgorithm","_whenSelectInstrument","selectInstrument","_whenCustomizePressed","_whenSetChipWave","_whenSetNoiseWave","_whenSetTransition","_whenSetEffects","_whenSetVibrato","_whenSetUnison","_whenSetChord","_addNewEnvelope","_zoomIn","visibleOctaves","_zoomOut","_fileMenuHandler","share","encodeURIComponent","_editMenuHandler","_optionsMenuHandler","toggleDisplayBrowserUrl","operatorNumber","frequencySelect","amplitudeSlider","spectrumEditor","capture","passive","autoPlayOption","screen","availWidth","availHeight","layoutOption","promptName","openPrompt","clipboard","writeText","catch","textField","succeeded","execCommand","SongPerformance","_channelIsDrum","_channelOctave","_songKey","_pitchesAreTemporary","_recentlyAddedPitches","_songLengthWhenRecordingStarted","_playheadPart","_playheadPattern","_pitchesChanged","_lastNote","_recordingChange","_updateRecordedNotes","_lastBarHasPatterns","_getCurrentPlayheadPart","abortRecording","oldPart","oldPlayheadPart","newPart","dirty","startPart","endPart","addedAlreadyReleasedPitch","erasePatternInBar","recentPitch","recentIndex","Selection","_changeTranspose","_changeReorder","_changeTrack","_changeInstrument","toJSON","x0","x1","y0","y1","fromJSON","json","digit","forInstrument","parsed","insertIndex","_eachSelectedChannel","_eachSelectedPattern","_eachSelectedBar","handledPatterns","_parseCopiedInstrumentArray","patternCopy","from","_patternIndexIsUnused","patternNumber","channelCopy","selectionCopy","partDuration","channelCopies","copiedPartDuration","fillSelection","pasteHeight","pasteChannel","patternCopies","copiedBars","pasteWidth","usedPatterns","pasteBar","copiedPatternIndex","reusedIndex","instrumentsCopy","existingPattern","removedPattern","allChannels","anyMuted","anyUnmuted","invert","alreadySoloed","shouldBeMuted","scaleFlags","oldScaleFlags","newScaleValue","newScaleFlags","oldScale","newScale","largerToSmaller","smallerScale","largerScale","roles","bestScore","bestIndexMap","stack","indexMap","score","sparsePitchMap","smallerScalePitch","largerScalePitch","sparseIndex","fullPitchMap","oldLow","newLow","oldHigh","newHigh","nearestPitchDistance","newPitch","generateScaleMap","possibleSectionBoundaries","channelSectionMin","channelSectionMax","nextBoundary","newSelectionMin","newSelectionMax","maxLayers","Preferences","defaultVisibleOctaves","reload","ChangeNotifier","_watchers","_dirty","watcher","unwatch","SongDocument","_recovery","_recentChange","_sequenceNumber","_lastSequenceNumber","_stateShouldBePushed","_recordedNewSong","_waitingToUpdateState","_whenHistoryStateChanged","history","_resetSongRecoveryUid","canUndo","sequenceNumber","recoveryUid","_recoveryUid","_replaceState","_pushState","forgetLastChange","_getHistoryState","_getHash","_cleanDocument","_validateDocState","highlightedPattern","_updateHistoryState","sessionStorage","songString","_calcVolume","eventName","replaceState","pathname","pushState","currentIndex","oldestIndex","_maximumUndoHistory","_forward","forward","_back","back","newSong","barOffset","getMobileLayout","innerWidth","editor","getElementById","autoplay","scrollRestoration","serviceWorker","updateViaCache","scope"],"sources":["../synth/SynthConfig.ts","../editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../editor/ColorConfig.ts","../editor/style.ts","../editor/Layout.ts","../synth/FFT.ts","../synth/Deque.ts","../synth/filtering.ts","../synth/synth.ts","../editor/TipPrompt.ts","../editor/Change.ts","../editor/changes.ts","../editor/PatternEditor.ts","../editor/EnvelopeEditor.ts","../editor/FadeInOutEditor.ts","../editor/FilterEditor.ts","../editor/ChannelRow.ts","../editor/MuteEditor.ts","../editor/TrackEditor.ts","../editor/LayoutPrompt.ts","../editor/LoopEditor.ts","../editor/SpectrumEditor.ts","../editor/HarmonicsEditor.ts","../editor/BarScrollBar.ts","../editor/OctaveScrollBar.ts","../editor/Midi.ts","../editor/MidiInput.ts","../editor/KeyboardLayout.ts","../editor/Piano.ts","../editor/BeatsPerBarPrompt.ts","../editor/MoveNotesSidewaysPrompt.ts","../editor/SongDurationPrompt.ts","../editor/SustainPrompt.ts","../editor/ChannelSettingsPrompt.ts","../editor/ArrayBufferWriter.ts","../editor/ExportPrompt.ts","../editor/ArrayBufferReader.ts","../editor/ImportPrompt.ts","../editor/SongRecovery.ts","../editor/SongRecoveryPrompt.ts","../editor/RecordingSetupPrompt.ts","../editor/SongEditor.ts","../editor/SongPerformance.ts","../editor/Selection.ts","../editor/Preferences.ts","../editor/ChangeNotifier.ts","../editor/SongDocument.ts","../editor/main.ts"],"sourcesContent":["/*!\nCopyright (c) 2012-2022 John Nesky and contributing authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\nexport interface Dictionary<T> {\n\t[K: string]: T;\n}\n\nexport interface DictionaryArray<T> extends ReadonlyArray<T> {\n\tdictionary: Dictionary<T>;\n}\n\nexport const enum FilterType {\n\tlowPass,\n\thighPass,\n\tpeak,\n\tlength,\n}\n\nexport const enum SustainType {\n\tbright,\n\tacoustic,\n\tlength,\n}\n\nexport const enum EnvelopeType {\n\tnoteSize,\n\tnone,\n\tpunch,\n\tflare,\n\ttwang,\n\tswell,\n\ttremolo,\n\ttremolo2,\n\tdecay,\n}\n\nexport const enum InstrumentType {\n\tchip,\n\tfm,\n\tnoise,\n\tspectrum,\n\tdrumset,\n\tharmonics,\n\tpwm,\n\tpickedString,\n\tsupersaw,\n\tlength,\n}\n\nexport const enum EffectType {\n\treverb,\n\tchorus,\n\tpanning,\n\tdistortion,\n\tbitcrusher,\n\tnoteFilter,\n\techo,\n\tpitchShift,\n\tdetune,\n\tvibrato,\n\ttransition,\n\tchord,\n\t// If you add more, you'll also have to extend the bitfield used in Base64 which currently uses two six-bit characters.\n\tlength,\n}\n\nexport const enum EnvelopeComputeIndex {\n\tnoteVolume,\n\tnoteFilterAllFreqs,\n\tpulseWidth,\n\tstringSustain,\n\tunison,\n\toperatorFrequency0, operatorFrequency1, operatorFrequency2, operatorFrequency3,\n\toperatorAmplitude0, operatorAmplitude1, operatorAmplitude2, operatorAmplitude3,\n\tfeedbackAmplitude,\n\tpitchShift,\n\tdetune,\n\tvibratoDepth,\n\tnoteFilterFreq0, noteFilterFreq1, noteFilterFreq2, noteFilterFreq3, noteFilterFreq4, noteFilterFreq5, noteFilterFreq6, noteFilterFreq7,\n\tnoteFilterGain0, noteFilterGain1, noteFilterGain2, noteFilterGain3, noteFilterGain4, noteFilterGain5, noteFilterGain6, noteFilterGain7,\n\tsupersawDynamism,\n\tsupersawSpread,\n\tsupersawShape,\n\tlength,\n}\n\n/*\nexport const enum InstrumentAutomationIndex {\n\tmixVolume,\n\teqFilterAllFreqs,\n\teqFilterFreq0, eqFilterFreq1, eqFilterFreq2, eqFilterFreq3, eqFilterFreq4, eqFilterFreq5, eqFilterFreq6, eqFilterFreq7,\n\teqFilterGain0, eqFilterGain1, eqFilterGain2, eqFilterGain3, eqFilterGain4, eqFilterGain5, eqFilterGain6, eqFilterGain7,\n\tdistortion,\n\tbitcrusherQuantization,\n\tbitcrusherFrequency,\n\tpanning,\n\tchorus,\n\techoSustain,\n\t//echoDelay, // Wait until tick settings can be computed once for multiple run lengths.\n\treverb,\n\tlength,\n}\n*/\n\nexport interface BeepBoxOption {\n\treadonly index: number;\n\treadonly name: string;\n}\n\nexport interface Scale extends BeepBoxOption {\n\treadonly flags: ReadonlyArray<boolean>;\n\treadonly realName: string;\n}\n\nexport interface Key extends BeepBoxOption {\n\treadonly isWhiteKey: boolean;\n\treadonly basePitch: number;\n}\n\nexport interface Rhythm extends BeepBoxOption {\n\treadonly stepsPerBeat: number;\n\treadonly ticksPerArpeggio: number;\n\treadonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>>;\n\treadonly roundUpThresholds: number[] | null;\n}\n\nexport interface ChipWave extends BeepBoxOption {\n\treadonly expression: number;\n\treadonly samples: Float32Array;\n}\n\nexport interface ChipNoise extends BeepBoxOption {\n\treadonly expression: number;\n\treadonly basePitch: number;\n\treadonly pitchFilterMult: number;\n\treadonly isSoft: boolean;\n\tsamples: Float32Array | null;\n}\n\nexport interface Transition extends BeepBoxOption {\n\treadonly isSeamless: boolean;\n\treadonly continues: boolean;\n\treadonly slides: boolean;\n\treadonly slideTicks: number;\n\treadonly includeAdjacentPatterns: boolean;\n}\n\nexport interface Vibrato extends BeepBoxOption {\n\treadonly amplitude: number;\n\treadonly periodsSeconds: ReadonlyArray<number>;\n\treadonly delayTicks: number;\n}\n\nexport interface Unison extends BeepBoxOption {\n\treadonly voices: number;\n\treadonly spread: number;\n\treadonly offset: number;\n\treadonly expression: number;\n\treadonly sign: number;\n}\n\nexport interface Chord extends BeepBoxOption {\n\treadonly customInterval: boolean;\n\treadonly arpeggiates: boolean;\n\treadonly strumParts: number;\n\treadonly singleTone: boolean;\n}\n\nexport interface Algorithm extends BeepBoxOption {\n\treadonly carrierCount: number;\n\treadonly associatedCarrier: ReadonlyArray<number>;\n\treadonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\n}\n\nexport interface OperatorFrequency extends BeepBoxOption {\n\treadonly mult: number;\n\treadonly hzOffset: number;\n\treadonly amplitudeSign: number;\n}\n\nexport interface Feedback extends BeepBoxOption {\n\treadonly indices: ReadonlyArray<ReadonlyArray<number>>;\n}\n\nexport interface Envelope extends BeepBoxOption {\n\treadonly type: EnvelopeType;\n\treadonly speed: number;\n}\n\nexport interface AutomationTarget extends BeepBoxOption {\n\treadonly computeIndex: EnvelopeComputeIndex /*| InstrumentAutomationIndex*/ | null;\n\treadonly displayName: string;\n\t//readonly perNote: boolean; // Whether to compute envelopes on a per-note basis.\n\treadonly interleave: boolean; // Whether to interleave this target with the next one in the menu (e.g. filter frequency and gain).\n\treadonly isFilter: boolean; // Filters are special because the maxCount depends on other instrument settings.\n\t//readonly range: number | null; // set if automation is allowed.\n\treadonly maxCount: number;\n\treadonly effect: EffectType | null;\n\treadonly compatibleInstruments: InstrumentType[] | null;\n}\n\nexport class Config {\n\tpublic static readonly scales: DictionaryArray<Scale> = toNameMap([\n\t\t{name: \"easy :)\",            realName: \"pentatonic major\",      flags: [true, false,  true, false,  true, false, false,  true, false,  true, false, false]},\n\t\t{name: \"easy :(\",            realName: \"pentatonic minor\",      flags: [true, false, false,  true, false,  true, false,  true, false, false,  true, false]},\n\t\t{name: \"island :)\",          realName: \"ryukyu\",                flags: [true, false, false, false,  true,  true, false,  true, false, false, false,  true]},\n\t\t{name: \"island :(\",          realName: \"pelog selisir\",         flags: [true,  true, false,  true, false, false, false,  true,  true, false, false, false]},\n\t\t{name: \"blues :)\",           realName: \"blues major\",           flags: [true, false,  true,  true,  true, false, false,  true, false,  true, false, false]},\n\t\t{name: \"blues :(\",           realName: \"blues\",                 flags: [true, false, false,  true, false,  true,  true,  true, false, false,  true, false]},\n\t\t{name: \"normal :)\",          realName: \"ionian\",                flags: [true, false,  true, false,  true,  true, false,  true, false,  true, false,  true]},\n\t\t{name: \"normal :(\",          realName: \"aeolian\",               flags: [true, false,  true,  true, false,  true, false,  true,  true, false,  true, false]},\n\t\t{name: \"double harmonic :)\", realName: \"double harmonic major\", flags: [true,  true, false, false,  true,  true, false,  true,  true, false, false,  true]},\n\t\t{name: \"double harmonic :(\", realName: \"double harmonic minor\", flags: [true, false,  true,  true, false, false,  true,  true,  true, false, false,  true]},\n\t\t{name: \"strange\",            realName: \"whole tone\",            flags: [true, false,  true, false,  true, false,  true, false,  true, false,  true, false]},\n\t\t{name: \"expert\",             realName: \"chromatic\",             flags: [true,  true,  true,  true,  true,  true,  true,  true,  true,  true,  true,  true]},\n\t]);\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\n\t\t{name: \"C\",  isWhiteKey:  true, basePitch: 12}, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\n\t\t{name: \"C♯\", isWhiteKey: false, basePitch: 13},\n\t\t{name: \"D\",  isWhiteKey:  true, basePitch: 14},\n\t\t{name: \"D♯\", isWhiteKey: false, basePitch: 15},\n\t\t{name: \"E\",  isWhiteKey:  true, basePitch: 16},\n\t\t{name: \"F\",  isWhiteKey:  true, basePitch: 17},\n\t\t{name: \"F♯\", isWhiteKey: false, basePitch: 18},\n\t\t{name: \"G\",  isWhiteKey:  true, basePitch: 19},\n\t\t{name: \"G♯\", isWhiteKey: false, basePitch: 20},\n\t\t{name: \"A\",  isWhiteKey:  true, basePitch: 21},\n\t\t{name: \"A♯\", isWhiteKey: false, basePitch: 22},\n\t\t{name: \"B\",  isWhiteKey:  true, basePitch: 23},\n\t]);\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\n\tpublic static readonly tempoMin: number = 30;\n\tpublic static readonly tempoMax: number = 300;\n\tpublic static readonly echoDelayRange: number = 24;\n\tpublic static readonly echoDelayStepTicks: number = 4;\n\tpublic static readonly echoSustainRange: number = 8;\n\tpublic static readonly echoShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay echoes.\n\tpublic static readonly echoShelfGain: number = Math.pow(2.0, -0.5);\n\tpublic static readonly reverbShelfHz: number = 8000.0; // The cutoff freq of the shelf filter that is used to decay reverb.\n\tpublic static readonly reverbShelfGain: number = Math.pow(2.0, -1.5);\n\tpublic static readonly reverbRange: number = 4;\n\tpublic static readonly reverbDelayBufferSize: number = 16384; // TODO: Compute a buffer size based on sample rate.\n\tpublic static readonly reverbDelayBufferMask: number = Config.reverbDelayBufferSize - 1; // TODO: Compute a buffer size based on sample rate.\n\tpublic static readonly beatsPerBarMin: number = 3;\n\tpublic static readonly beatsPerBarMax: number = 16;\n\tpublic static readonly barCountMin: number = 1;\n\tpublic static readonly barCountMax: number = 128;\n\tpublic static readonly instrumentCountMin: number = 1;\n\tpublic static readonly layeredInstrumentCountMax: number = 4;\n\tpublic static readonly patternInstrumentCountMax: number = 10;\n\tpublic static readonly partsPerBeat: number = 24;\n\tpublic static readonly ticksPerPart: number = 2;\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\n\t\t{name: \"÷3 (triplets)\", stepsPerBeat: 3, ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]], roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/]},\n\t\t{name: \"÷4 (standard)\", stepsPerBeat: 4, ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]], roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/]},\n\t\t{name: \"÷6\",            stepsPerBeat: 6, ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1],       [0, 1, 2, 1]], roundUpThresholds: null},\n\t\t{name: \"÷8\",            stepsPerBeat: 8, ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1],       [0, 1, 2, 1]], roundUpThresholds: null},\n\t\t{name: \"freehand\",      stepsPerBeat:24, ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1],       [0, 1, 2, 1]], roundUpThresholds: null},\n\t]);\n\t\n\tpublic static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"supersaw\"]; // See InstrumentType enum above.\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, false, false];\n\tpublic static readonly chipBaseExpression:      number = 0.03375; // Doubled by unison feature, but affected by expression adjustments per unison setting and wave shape.\n\tpublic static readonly fmBaseExpression:        number = 0.03;\n\tpublic static readonly noiseBaseExpression:     number = 0.19;\n\tpublic static readonly spectrumBaseExpression:  number = 0.3; // Spectrum can be in pitch or noise channels, the expression is doubled for noise.\n\tpublic static readonly drumsetBaseExpression:   number = 0.45; // Drums tend to be loud but brief!\n\tpublic static readonly harmonicsBaseExpression: number = 0.025;\n\tpublic static readonly pwmBaseExpression:       number = 0.04725; // It's actually closer to half of this, the synthesized pulse amplitude range is only .5 to -.5, but also note that the fundamental sine partial amplitude of a square wave is 4/π times the measured square wave amplitude.\n\tpublic static readonly supersawBaseExpression:  number = 0.061425; // It's actually closer to half of this, the synthesized sawtooth amplitude range is only .5 to -.5.\n\tpublic static readonly pickedStringBaseExpression: number = 0.025; // Same as harmonics.\n\tpublic static readonly distortionBaseVolume:    number = 0.011; // Distortion is not affected by pitchDamping, which otherwise approximately halves expression for notes around the middle of the range.\n\tpublic static readonly bitcrusherBaseVolume:    number = 0.010; // Also not affected by pitchDamping, used when bit crushing is maxed out (aka \"1-bit\" output).\n\t\n\tpublic static readonly chipWaves: DictionaryArray<ChipWave> = toNameMap([\n\t\t{name: \"rounded\",      expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2])},\n\t\t{name: \"triangle\",     expression: 1.0,  samples: centerWave([1.0/15.0, 3.0/15.0, 5.0/15.0, 7.0/15.0, 9.0/15.0, 11.0/15.0, 13.0/15.0, 15.0/15.0, 15.0/15.0, 13.0/15.0, 11.0/15.0, 9.0/15.0, 7.0/15.0, 5.0/15.0, 3.0/15.0, 1.0/15.0, -1.0/15.0, -3.0/15.0, -5.0/15.0, -7.0/15.0, -9.0/15.0, -11.0/15.0, -13.0/15.0, -15.0/15.0, -15.0/15.0, -13.0/15.0, -11.0/15.0, -9.0/15.0, -7.0/15.0, -5.0/15.0, -3.0/15.0, -1.0/15.0])},\n\t\t{name: \"square\",       expression: 0.5,  samples: centerWave([1.0, -1.0])},\n\t\t{name: \"1/4 pulse\",    expression: 0.5,  samples: centerWave([1.0, -1.0, -1.0, -1.0])},\n\t\t{name: \"1/8 pulse\",    expression: 0.5,  samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0])},\n\t\t{name: \"sawtooth\",     expression: 0.65, samples: centerWave([1.0/31.0, 3.0/31.0, 5.0/31.0, 7.0/31.0, 9.0/31.0, 11.0/31.0, 13.0/31.0, 15.0/31.0, 17.0/31.0, 19.0/31.0, 21.0/31.0, 23.0/31.0, 25.0/31.0, 27.0/31.0, 29.0/31.0, 31.0/31.0, -31.0/31.0, -29.0/31.0, -27.0/31.0, -25.0/31.0, -23.0/31.0, -21.0/31.0, -19.0/31.0, -17.0/31.0, -15.0/31.0, -13.0/31.0, -11.0/31.0, -9.0/31.0, -7.0/31.0, -5.0/31.0, -3.0/31.0, -1.0/31.0])},\n\t\t{name: \"double saw\",   expression: 0.5,  samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2])},\n\t\t{name: \"double pulse\", expression: 0.4,  samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0])},\n\t\t{name: \"spiky\",        expression: 0.4,  samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0])},\n\t]);\n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\n\t\t{name: \"retro\",   expression: 0.25, basePitch: 69,  pitchFilterMult: 1024.0, isSoft: false, samples: null},\n\t\t{name: \"white\",   expression: 1.0,  basePitch: 69,  pitchFilterMult:    8.0, isSoft: true,  samples: null},\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\n\t\t{name: \"clang\",   expression: 0.4,  basePitch: 69,  pitchFilterMult: 1024.0, isSoft: false, samples: null},\n\t\t{name: \"buzz\",    expression: 0.3,  basePitch: 69,  pitchFilterMult: 1024.0, isSoft: false, samples: null},\n\t\t{name: \"hollow\",  expression: 1.5,  basePitch: 96,  pitchFilterMult:    1.0, isSoft: true,  samples: null},\n\t]);\n\t\n\tpublic static readonly filterFreqStep: number = 1.0/4.0;\n\tpublic static readonly filterFreqRange: number = 34;\n\tpublic static readonly filterFreqReferenceSetting: number = 28;\n\tpublic static readonly filterFreqReferenceHz: number = 8000.0;\n\tpublic static readonly filterFreqMaxHz: number = Config.filterFreqReferenceHz * Math.pow(2.0, Config.filterFreqStep * (Config.filterFreqRange - 1 - Config.filterFreqReferenceSetting)); // ~19khz\n\tpublic static readonly filterFreqMinHz: number = 8.0;\n\tpublic static readonly filterGainRange: number = 15;\n\tpublic static readonly filterGainCenter: number = 7;\n\tpublic static readonly filterGainStep: number = 1.0/2.0;\n\tpublic static readonly filterMaxPoints: number = 8;\n\tpublic static readonly filterTypeNames: ReadonlyArray<string> = [\"low-pass\", \"high-pass\", \"peak\"]; // See FilterType enum above.\n\t\n\tpublic static readonly fadeInRange: number = 10;\n\tpublic static readonly fadeOutTicks: ReadonlyArray<number> = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\n\tpublic static readonly fadeOutNeutral: number = 4;\n\tpublic static readonly drumsetFadeOutTicks: number = 48;\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\n\t\t{name: \"normal\",        isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false},\n\t\t{name: \"interrupt\",     isSeamless: true,  continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true},\n\t\t{name: \"continue\",      isSeamless: true,  continues: true,  slides: false, slideTicks: 3, includeAdjacentPatterns: true},\n\t\t{name: \"slide\",         isSeamless: true,  continues: false, slides: true,  slideTicks: 3, includeAdjacentPatterns: true},\n\t\t{name: \"slide in pattern\", isSeamless: true,  continues: false, slides: true,  slideTicks: 3, includeAdjacentPatterns: false},\n\t]);\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\n\t\t{name: \"none\",    amplitude: 0.0,  periodsSeconds: [0.14], delayTicks: 0},\n\t\t{name: \"light\",   amplitude: 0.15, periodsSeconds: [0.14], delayTicks: 0},\n\t\t{name: \"delayed\", amplitude: 0.3,  periodsSeconds: [0.14], delayTicks: 37}, // It will fade in over the previous two ticks.\n\t\t{name: \"heavy\",   amplitude: 0.45, periodsSeconds: [0.14], delayTicks: 0},\n\t\t{name: \"shaky\",   amplitude: 0.1,  periodsSeconds: [0.11, 1.618*0.11, 3*0.11], delayTicks: 0},\n\t]);\n\tpublic static readonly unisons: DictionaryArray<Unison> = toNameMap([\n\t\t{name: \"none\",       voices: 1, spread: 0.0,  offset: 0.0, expression: 1.4, sign: 1.0},\n\t\t{name: \"shimmer\",    voices: 2, spread: 0.018,offset: 0.0, expression: 0.8, sign: 1.0},\n\t\t{name: \"hum\",        voices: 2, spread: 0.045,offset: 0.0, expression: 1.0, sign: 1.0},\n\t\t{name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0},\n\t\t{name: \"dissonant\",  voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0},\n\t\t{name: \"fifth\",      voices: 2, spread: 3.5,  offset: 3.5, expression: 0.9, sign: 1.0},\n\t\t{name: \"octave\",     voices: 2, spread: 6.0,  offset: 6.0, expression: 0.8, sign: 1.0},\n\t\t{name: \"bowed\",      voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign:-1.0},\n\t\t{name: \"piano\",      voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7},\n\t]);\n\tpublic static readonly effectNames: ReadonlyArray<string> = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"note filter\", \"echo\", \"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\"];\n\tpublic static readonly effectOrder: ReadonlyArray<EffectType> = [EffectType.transition, EffectType.chord, EffectType.pitchShift, EffectType.detune, EffectType.vibrato, EffectType.noteFilter, EffectType.distortion, EffectType.bitcrusher, EffectType.panning, EffectType.chorus, EffectType.echo, EffectType.reverb];\n\tpublic static readonly noteSizeMax: number = 3;\n\tpublic static readonly volumeRange: number = 8;\n\tpublic static readonly volumeLogScale: number = -0.5;\n\tpublic static readonly panCenter: number = 4;\n\tpublic static readonly panMax: number = Config.panCenter * 2;\n\tpublic static readonly panDelaySecondsMax: number = 0.0005;\n\tpublic static readonly chorusRange: number = 4;\n\tpublic static readonly chorusPeriodSeconds: number = 2.0;\n\tpublic static readonly chorusDelayRange: number = 0.0034;\n\tpublic static readonly chorusDelayOffsets: ReadonlyArray<ReadonlyArray<number>> = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\n\tpublic static readonly chorusPhaseOffsets: ReadonlyArray<ReadonlyArray<number>> = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\n\tpublic static readonly chorusMaxDelay: number = Config.chorusDelayRange * (1.0 + Config.chorusDelayOffsets[0].concat(Config.chorusDelayOffsets[1]).reduce((x,y)=>Math.max(x,y)));\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\n\t\t{name: \"simultaneous\",    customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false},\n\t\t{name: \"strum\",           customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false},\n\t\t{name: \"arpeggio\",        customInterval: false, arpeggiates:  true, strumParts: 0, singleTone:  true},\n\t\t{name: \"custom interval\", customInterval:  true, arpeggiates: false, strumParts: 0, singleTone:  true},\n\t]);\n\tpublic static readonly maxChordSize: number = 4;\n\tpublic static readonly operatorCount: number = 4;\n\tpublic static readonly maxPitchOrOperatorCount: number = Math.max(Config.maxChordSize, Config.operatorCount);\n\tpublic static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\n\t\t{name: \"1←(2 3 4)\",   carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [],     [],  []]},\n\t\t{name: \"1←(2 3←4)\",   carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3],    [],     [4], []]},\n\t\t{name: \"1←2←(3 4)\",   carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2],       [3, 4], [],  []]},\n\t\t{name: \"1←(2 3)←4\",   carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3],    [4],    [4], []]},\n\t\t{name: \"1←2←3←4\",     carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2],       [3],    [4], []]},\n\t\t{name: \"1←3 2←4\",     carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3],       [4],    [],  []]},\n\t\t{name: \"1 2←(3 4)\",   carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[],        [3, 4], [],  []]},\n\t\t{name: \"1 2←3←4\",     carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[],        [3],    [4], []]},\n\t\t{name: \"(1 2)←3←4\",   carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3],       [3],    [4], []]},\n\t\t{name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4],    [3, 4], [],  []]},\n\t\t{name: \"1 2 3←4\",     carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[],        [],     [4], []]},\n\t\t{name: \"(1 2 3)←4\",   carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4],       [4],    [4], []]},\n\t\t{name: \"1 2 3 4\",     carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[],        [],     [],  []]},\n\t]);\n\tpublic static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091];\n\tpublic static readonly operatorAmplitudeMax: number = 15;\n\tpublic static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\n\t\t{name:  \"1×\", mult:  1.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name: \"~1×\", mult:  1.0, hzOffset: 1.5, amplitudeSign:-1.0},\n\t\t{name:  \"2×\", mult:  2.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name: \"~2×\", mult:  2.0, hzOffset:-1.3, amplitudeSign:-1.0},\n\t\t{name:  \"3×\", mult:  3.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name:  \"4×\", mult:  4.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name:  \"5×\", mult:  5.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name:  \"6×\", mult:  6.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name:  \"7×\", mult:  7.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name:  \"8×\", mult:  8.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name:  \"9×\", mult:  9.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t\t{name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0},\n\t]);\n\tpublic static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\n\t\t{name: \"none\",     type: EnvelopeType.none,     speed:  0.0},\n\t\t{name: \"note size\",type: EnvelopeType.noteSize, speed:  0.0},\n\t\t{name: \"punch\",    type: EnvelopeType.punch,    speed:  0.0},\n\t\t{name: \"flare 1\",  type: EnvelopeType.flare,    speed: 32.0},\n\t\t{name: \"flare 2\",  type: EnvelopeType.flare,    speed:  8.0},\n\t\t{name: \"flare 3\",  type: EnvelopeType.flare,    speed:  2.0},\n\t\t{name: \"twang 1\",  type: EnvelopeType.twang,    speed: 32.0},\n\t\t{name: \"twang 2\",  type: EnvelopeType.twang,    speed:  8.0},\n\t\t{name: \"twang 3\",  type: EnvelopeType.twang,    speed:  2.0},\n\t\t{name: \"swell 1\",  type: EnvelopeType.swell,    speed: 32.0},\n\t\t{name: \"swell 2\",  type: EnvelopeType.swell,    speed:  8.0},\n\t\t{name: \"swell 3\",  type: EnvelopeType.swell,    speed:  2.0},\n\t\t{name: \"tremolo1\", type: EnvelopeType.tremolo,  speed:  4.0},\n\t\t{name: \"tremolo2\", type: EnvelopeType.tremolo,  speed:  2.0},\n\t\t{name: \"tremolo3\", type: EnvelopeType.tremolo,  speed:  1.0},\n\t\t{name: \"tremolo4\", type: EnvelopeType.tremolo2, speed:  4.0},\n\t\t{name: \"tremolo5\", type: EnvelopeType.tremolo2, speed:  2.0},\n\t\t{name: \"tremolo6\", type: EnvelopeType.tremolo2, speed:  1.0},\n\t\t{name: \"decay 1\",  type: EnvelopeType.decay,    speed: 10.0},\n\t\t{name: \"decay 2\",  type: EnvelopeType.decay,    speed:  7.0},\n\t\t{name: \"decay 3\",  type: EnvelopeType.decay,    speed:  4.0},\n\t]);\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\n\t\t{name: \"1⟲\",          indices: [[1],  [],  [],  []]},\n\t\t{name: \"2⟲\",          indices: [ [], [2],  [],  []]},\n\t\t{name: \"3⟲\",          indices: [ [],  [], [3],  []]},\n\t\t{name: \"4⟲\",          indices: [ [],  [],  [], [4]]},\n\t\t{name: \"1⟲ 2⟲\",       indices: [[1], [2],  [],  []]},\n\t\t{name: \"3⟲ 4⟲\",       indices: [ [],  [], [3], [4]]},\n\t\t{name: \"1⟲ 2⟲ 3⟲\",    indices: [[1], [2], [3],  []]},\n\t\t{name: \"2⟲ 3⟲ 4⟲\",    indices: [ [], [2], [3], [4]]},\n\t\t{name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]]},\n\t\t{name: \"1→2\",         indices: [ [], [1],  [],  []]},\n\t\t{name: \"1→3\",         indices: [ [],  [], [1],  []]},\n\t\t{name: \"1→4\",         indices: [ [],  [],  [], [1]]},\n\t\t{name: \"2→3\",         indices: [ [],  [], [2],  []]},\n\t\t{name: \"2→4\",         indices: [ [],  [],  [], [2]]},\n\t\t{name: \"3→4\",         indices: [ [],  [],  [], [3]]},\n\t\t{name: \"1→3 2→4\",     indices: [ [],  [], [1], [2]]},\n\t\t{name: \"1→4 2→3\",     indices: [ [],  [], [2], [1]]},\n\t\t{name: \"1→2→3→4\",     indices: [ [], [1], [2], [3]]},\n\t]);\n\tpublic static readonly chipNoiseLength: number = 1 << 15; // 32768\n\tpublic static readonly spectrumNoiseLength: number = 1 << 15; // 32768\n\tpublic static readonly spectrumBasePitch: number = 24;\n\tpublic static readonly spectrumControlPoints: number = 30;\n\tpublic static readonly spectrumControlPointsPerOctave: number = 7;\n\tpublic static readonly spectrumControlPointBits: number = 3;\n\tpublic static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\n\tpublic static readonly harmonicsControlPoints: number = 28;\n\tpublic static readonly harmonicsRendered: number = 64;\n\tpublic static readonly harmonicsRenderedForPickedString: number = 1 << 8; // 256\n\tpublic static readonly harmonicsControlPointBits: number = 3;\n\tpublic static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\n\tpublic static readonly harmonicsWavelength: number = 1 << 11; // 2048\n\tpublic static readonly pulseWidthRange: number = 8;\n\tpublic static readonly pulseWidthStepPower: number = 0.5;\n\tpublic static readonly supersawVoiceCount: number = 7;\n\tpublic static readonly supersawDynamismMax: number = 6;\n\tpublic static readonly supersawSpreadMax: number = 12;\n\tpublic static readonly supersawShapeMax: number = 6;\n\tpublic static readonly pitchChannelCountMin: number = 1;\n\tpublic static readonly pitchChannelCountMax: number = 10;\n\tpublic static readonly noiseChannelCountMin: number = 0;\n\tpublic static readonly noiseChannelCountMax: number = 5;\n\tpublic static readonly noiseInterval: number = 6;\n\tpublic static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\n\tpublic static readonly drumCount: number = 12;\n\tpublic static readonly pitchOctaves: number = 7;\n\tpublic static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\n\tpublic static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\n\tpublic static readonly justIntonationSemitones: number[] = [1.0/2.0, 8.0/15.0, 9.0/16.0, 3.0/5.0, 5.0/8.0, 2.0/3.0, 32.0/45.0, 3.0/4.0, 4.0/5.0, 5.0/6.0, 8.0/9.0, 15.0/16.0, 1.0, 16.0/15.0, 9.0/8.0, 6.0/5.0, 5.0/4.0, 4.0/3.0, 45.0/32.0, 3.0/2.0, 8.0/5.0, 5.0/3.0, 16.0/9.0, 15.0/8.0, 2.0].map(x=>Math.log2(x) * Config.pitchesPerOctave);\n\tpublic static readonly pitchShiftRange: number = Config.justIntonationSemitones.length;\n\tpublic static readonly pitchShiftCenter: number = Config.pitchShiftRange >> 1;\n\tpublic static readonly detuneCenter: number = 9;\n\tpublic static readonly detuneMax: number = Config.detuneCenter * 2;\n\tpublic static readonly sineWaveLength: number = 1 << 8; // 256\n\tpublic static readonly sineWaveMask: number = Config.sineWaveLength - 1;\n\tpublic static readonly sineWave: Float32Array = generateSineWave();\n\t\n\t// Picked strings have an all-pass filter with a corner frequency based on the tone fundamental frequency, in order to add a slight inharmonicity. (Which is important for distortion.)\n\tpublic static readonly pickedStringDispersionCenterFreq: number = 6000.0; // The tone fundamental freq is pulled toward this freq for computing the all-pass corner freq.\n\tpublic static readonly pickedStringDispersionFreqScale: number = 0.3; // The tone fundamental freq freq moves this much toward the center freq for computing the all-pass corner freq.\n\tpublic static readonly pickedStringDispersionFreqMult: number = 4.0; // The all-pass corner freq is based on this times the adjusted tone fundamental freq.\n\tpublic static readonly pickedStringShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay the high frequency energy in the picked string.\n\tpublic static readonly stringSustainRange: number = 15;\n\tpublic static readonly stringDecayRate: number = 0.12;\n\tpublic static readonly enableAcousticSustain: boolean = false;\n\tpublic static readonly sustainTypeNames: ReadonlyArray<string> = [\"bright\", \"acoustic\"]; // See SustainType enum above.\n\t\n\tpublic static readonly distortionRange: number = 8;\n\tpublic static readonly bitcrusherFreqRange: number = 14;\n\tpublic static readonly bitcrusherOctaveStep: number = 0.5;\n\tpublic static readonly bitcrusherQuantizationRange: number = 8;\n\t\n\tpublic static readonly maxEnvelopeCount: number = 12;\n\tpublic static readonly defaultAutomationRange: number = 13;\n\tpublic static readonly instrumentAutomationTargets: DictionaryArray<AutomationTarget> = toNameMap([\n\t\t{name: \"none\",                   computeIndex:                           null,                   displayName: \"none\",             /*perNote: false,*/ interleave: false, isFilter: false, /*range: 0,                              */    maxCount: 1,    effect: null,                    compatibleInstruments: null},\n\t\t{name: \"noteVolume\",             computeIndex:       EnvelopeComputeIndex.noteVolume,             displayName: \"note volume\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.volumeRange,             */    maxCount: 1,    effect: null,                    compatibleInstruments: null},\n\t\t{name: \"pulseWidth\",             computeIndex:       EnvelopeComputeIndex.pulseWidth,             displayName: \"pulse width\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pulseWidthRange,         */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.pwm, InstrumentType.supersaw]},\n\t\t{name: \"stringSustain\",          computeIndex:       EnvelopeComputeIndex.stringSustain,          displayName: \"sustain\",          /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.stringSustainRange,      */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.pickedString]},\n\t\t{name: \"unison\",                 computeIndex:       EnvelopeComputeIndex.unison,                 displayName: \"unison\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.chip, InstrumentType.harmonics, InstrumentType.pickedString]},\n\t\t{name: \"operatorFrequency\",      computeIndex:       EnvelopeComputeIndex.operatorFrequency0,     displayName: \"fm# freq\",         /*perNote:  true,*/ interleave:  true, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: Config.operatorCount, effect: null,    compatibleInstruments: [InstrumentType.fm]},\n\t\t{name: \"operatorAmplitude\",      computeIndex:       EnvelopeComputeIndex.operatorAmplitude0,     displayName: \"fm# volume\",       /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: Config.operatorCount, effect: null,    compatibleInstruments: [InstrumentType.fm]},\n\t\t{name: \"feedbackAmplitude\",      computeIndex:       EnvelopeComputeIndex.feedbackAmplitude,      displayName: \"fm feedback\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.fm]},\n\t\t{name: \"pitchShift\",             computeIndex:       EnvelopeComputeIndex.pitchShift,             displayName: \"pitch shift\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pitchShiftRange,         */    maxCount: 1,    effect: EffectType.pitchShift,   compatibleInstruments: null},\n\t\t{name: \"detune\",                 computeIndex:       EnvelopeComputeIndex.detune,                 displayName: \"detune\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.detuneMax + 1,           */    maxCount: 1,    effect: EffectType.detune,       compatibleInstruments: null},\n\t\t{name: \"vibratoDepth\",           computeIndex:       EnvelopeComputeIndex.vibratoDepth,           displayName: \"vibrato range\",    /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1,    effect: EffectType.vibrato,      compatibleInstruments: null},\n\t\t{name: \"noteFilterAllFreqs\",     computeIndex:       EnvelopeComputeIndex.noteFilterAllFreqs,     displayName: \"n. filter freqs\",  /*perNote:  true,*/ interleave: false, isFilter:  true, /*range: null,                           */    maxCount: 1,    effect: EffectType.noteFilter,   compatibleInstruments: null},\n\t\t{name: \"noteFilterFreq\",         computeIndex:       EnvelopeComputeIndex.noteFilterFreq0,        displayName: \"n. filter # freq\", /*perNote:  true,*/ interleave: false/*true*/, isFilter:  true, /*range: Config.filterFreqRange, */    maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\n\t\t// Controlling filter gain is less obvious and intuitive than controlling filter freq, so to avoid confusion I've disabled it for envelopes.\n\t\t{name: \"noteFilterGain\",         computeIndex:                           null,                    displayName: \"n. filter # vol\",  /*perNote:  true,*/ interleave: false, isFilter:  true, /*range: Config.filterGainRange,         */    maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\n\t\t{name: \"supersawDynamism\",       computeIndex:       EnvelopeComputeIndex.supersawDynamism,       displayName: \"dynamism\",         /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawDynamismMax + 1, */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\n\t\t{name: \"supersawSpread\",         computeIndex:       EnvelopeComputeIndex.supersawSpread,         displayName: \"spread\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawSpreadMax + 1,   */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\n\t\t{name: \"supersawShape\",          computeIndex:       EnvelopeComputeIndex.supersawShape,          displayName: \"saw↔pulse\",        /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawShapeMax + 1,    */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\n\t\t/*\n\t\t{name: \"distortion\",             computeIndex: InstrumentAutomationIndex.distortion,             displayName: \"distortion\",       perNote: false, interleave: false, isFilter: false, range: Config.distortionRange,             maxCount: 1,    effect: EffectType.distortion,   compatibleInstruments: null},\n\t\t{name: \"bitcrusherQuantization\", computeIndex: InstrumentAutomationIndex.bitcrusherQuantization, displayName: \"bit crush\",        perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherQuantizationRange, maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\n\t\t{name: \"bitcrusherFrequency\",    computeIndex: InstrumentAutomationIndex.bitcrusherFrequency,    displayName: \"freq crush\",       perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherFreqRange,         maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\n\t\t{name: \"eqFilterAllFreqs\",       computeIndex: InstrumentAutomationIndex.eqFilterAllFreqs,       displayName: \"eq filter freqs\",  perNote: false, interleave: false, isFilter:  true, range: null,                               maxCount: 1,    effect: null,                    compatibleInstruments: null},\n\t\t{name: \"eqFilterFreq\",           computeIndex: InstrumentAutomationIndex.eqFilterFreq0,          displayName: \"eq filter # freq\", perNote: false, interleave:  true, isFilter:  true, range: Config.filterFreqRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\n\t\t{name: \"eqFilterGain\",           computeIndex: InstrumentAutomationIndex.eqFilterGain0,          displayName: \"eq filter # vol\",  perNote: false, interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\n\t\t{name: \"panning\",                computeIndex: InstrumentAutomationIndex.panning,                displayName: \"panning\",          perNote: false, interleave: false, isFilter: false, range: Config.panMax + 1,                  maxCount: 1,    effect: EffectType.panning,      compatibleInstruments: null},\n\t\t{name: \"chorus\",                 computeIndex: InstrumentAutomationIndex.chorus,                 displayName: \"chorus\",           perNote: false, interleave: false, isFilter: false, range: Config.chorusRange,                 maxCount: 1,    effect: EffectType.chorus,       compatibleInstruments: null},\n\t\t{name: \"echoSustain\",            computeIndex: InstrumentAutomationIndex.echoSustain,            displayName: \"echo\",             perNote: false, interleave: false, isFilter: false, range: Config.echoSustainRange,            maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null},\n\t\t{name: \"echoDelay\",              computeIndex: InstrumentAutomationIndex.echoDelay,              displayName: \"echo delay\",       perNote: false, interleave: false, isFilter: false, range: Config.echoDelayRange,              maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null}, // wait until after we're computing a tick's settings for multiple run lengths.\n\t\t{name: \"reverb\",                 computeIndex: InstrumentAutomationIndex.reverb,                 displayName: \"reverb\",           perNote: false, interleave: false, isFilter: false, range: Config.reverbRange,                 maxCount: 1,    effect: EffectType.reverb,       compatibleInstruments: null},\n\t\t{name: \"mixVolume\",              computeIndex: InstrumentAutomationIndex.mixVolume,              displayName: \"mix volume\",       perNote: false, interleave: false, isFilter: false, range: Config.volumeRange,                 maxCount: 1,    effect: null,                    compatibleInstruments: null},\n\t\t{name: \"envelope#\",              computeIndex: null,                                             displayName: \"envelope\",         perNote: false, interleave: false, isFilter: false, range: Config.defaultAutomationRange,      maxCount: Config.maxEnvelopeCount, effect: null, compatibleInstruments: null}, // maxCount special case for envelopes to be allowed to target earlier ones.\n\t\t*/\n\t]);\n}\n\nfunction centerWave(wave: Array<number>): Float32Array {\n\tlet sum: number = 0.0;\n\tfor (let i: number = 0; i < wave.length; i++) sum += wave[i];\n\tconst average: number = sum / wave.length;\n\tfor (let i: number = 0; i < wave.length; i++) wave[i] -= average;\n\tperformIntegral(wave);\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\n\twave.push(0);\n\treturn new Float32Array(wave);\n}\n\nexport function performIntegral(wave: {length: number, [index: number]: number}): void {\n\t// Perform the integral on the wave. The synth function will perform the derivative to get the original wave back but with antialiasing.\n\tlet cumulative: number = 0.0;\n\tfor (let i: number = 0; i < wave.length; i++) {\n\t\tconst temp = wave[i];\n\t\twave[i] = cumulative;\n\t\tcumulative += temp;\n\t}\n}\n\nexport function getPulseWidthRatio(pulseWidth: number): number {\n\treturn Math.pow(0.5, (Config.pulseWidthRange - 1 - pulseWidth) * Config.pulseWidthStepPower) * 0.5;\n}\n\n// The function arguments will be defined in FFT.ts, but I want\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null, scaleElementsByFactor: Function | null): Float32Array {\n\tlet wave: Float32Array | null = Config.chipNoises[index].samples;\n\tif (wave == null) {\n\t\twave = new Float32Array(Config.chipNoiseLength + 1);\n\t\tConfig.chipNoises[index].samples = wave;\n\t\t\n\t\tif (index == 0) {\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 1 << 14;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 1) {\n\t\t\t// White noise is just random values for each sample.\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\n\t\t\t}\n\t\t} else if (index == 2) {\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 2 << 14;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 3) {\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 10 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 4) {\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n\t\t} else {\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\n\t\t}\n\t\t\n\t\twave[Config.chipNoiseLength] = wave[0];\n\t}\n\t\n\treturn wave;\n}\n\nexport function drawNoiseSpectrum(wave: Float32Array, waveLength: number, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\n\tconst referenceOctave: number = 11;\n\tconst referenceIndex: number = 1 << referenceOctave;\n\tconst lowIndex: number = Math.pow(2, lowOctave) | 0;\n\tconst highIndex: number = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\n\tconst retroWave: Float32Array = getDrumWave(0, null, null);\n\tlet combinedAmplitude: number = 0.0;\n\tfor (let i: number = lowIndex; i < highIndex; i++) {\n\t\t\n\t\tlet lerped: number = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\n\t\tlet amplitude: number = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\n\t\t\n\t\tamplitude *= Math.pow(i / referenceIndex, overallSlope);\n\t\t\n\t\tcombinedAmplitude += amplitude;\n\t\t\n\t\t// Add two different sources of psuedo-randomness to the noise\n\t\t// (individually they aren't random enough) but in a deterministic\n\t\t// way so that live spectrum editing doesn't result in audible pops.\n\t\t// Multiply all the sine wave amplitudes by 1 or -1 based on the\n\t\t// LFSR retro wave (effectively random), and also rotate the phase\n\t\t// of each sine wave based on the golden angle to disrupt the symmetry.\n\t\tamplitude *= retroWave[i];\n\t\tconst radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\n\t\t\n\t\twave[i] = Math.cos(radians) * amplitude;\n\t\twave[waveLength - i] = Math.sin(radians) * amplitude;\n\t}\n\t\n\treturn combinedAmplitude;\n}\n\nfunction generateSineWave(): Float32Array {\n\tconst wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n\tfor (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n\t\twave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\n\t}\n\treturn wave;\n}\n\nexport function getArpeggioPitchIndex(pitchCount: number, rhythm: number, arpeggio: number): number {\n\tconst arpeggioPattern: ReadonlyArray<number> = Config.rhythms[rhythm].arpeggioPatterns[pitchCount - 1];\n\tif (arpeggioPattern != null) {\n\t\treturn arpeggioPattern[arpeggio % arpeggioPattern.length];\n\t} else {\n\t\treturn arpeggio % pitchCount;\n\t}\n}\n\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\n\tconst dictionary: Dictionary<T> = {};\n\tfor (let i: number = 0; i < array.length; i++) {\n\t\tconst value: any = array[i];\n\t\tvalue.index = i;\n\t\tdictionary[value.name] = <T> value;\n\t}\n\tconst result: DictionaryArray<T> = <DictionaryArray<T>> <any> array;\n\tresult.dictionary = dictionary;\n\treturn result;\n}\n\nexport function effectsIncludeTransition(effects: number): boolean {\n\treturn (effects & (1 << EffectType.transition)) != 0;\n}\nexport function effectsIncludeChord(effects: number): boolean {\n\treturn (effects & (1 << EffectType.chord)) != 0;\n}\nexport function effectsIncludePitchShift(effects: number): boolean {\n\treturn (effects & (1 << EffectType.pitchShift)) != 0;\n}\nexport function effectsIncludeDetune(effects: number): boolean {\n\treturn (effects & (1 << EffectType.detune)) != 0;\n}\nexport function effectsIncludeVibrato(effects: number): boolean {\n\treturn (effects & (1 << EffectType.vibrato)) != 0;\n}\nexport function effectsIncludeNoteFilter(effects: number): boolean {\n\treturn (effects & (1 << EffectType.noteFilter)) != 0;\n}\nexport function effectsIncludeDistortion(effects: number): boolean {\n\treturn (effects & (1 << EffectType.distortion)) != 0;\n}\nexport function effectsIncludeBitcrusher(effects: number): boolean {\n\treturn (effects & (1 << EffectType.bitcrusher)) != 0;\n}\nexport function effectsIncludePanning(effects: number): boolean {\n\treturn (effects & (1 << EffectType.panning)) != 0;\n}\nexport function effectsIncludeChorus(effects: number): boolean {\n\treturn (effects & (1 << EffectType.chorus)) != 0;\n}\nexport function effectsIncludeEcho(effects: number): boolean {\n\treturn (effects & (1 << EffectType.echo)) != 0;\n}\nexport function effectsIncludeReverb(effects: number): boolean {\n\treturn (effects & (1 << EffectType.reverb)) != 0;\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {DictionaryArray, BeepBoxOption, InstrumentType, toNameMap} from \"../synth/SynthConfig\";\n\nexport interface PresetCategory extends BeepBoxOption {\n\treadonly presets: DictionaryArray<Preset>;\n}\n\nexport interface Preset extends BeepBoxOption {\n\treadonly isNoise?: boolean;\n\treadonly generalMidi?: boolean;\n\treadonly midiProgram?: number;\n\treadonly midiSubharmonicOctaves?: number;\n\treadonly customType?: InstrumentType;\n\treadonly settings?: any;\n}\n\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\n\nexport function prettyNumber(value: number): string {\n\treturn value.toFixed(2).replace(/\\.?0*$/, \"\");\n}\n\nexport class EditorConfig {\n\tpublic static readonly version: string = \"1.0\";\n\t\n\tpublic static readonly versionDisplayName: string = EditorConfig.version+\" BoxBeep\";\n\tpublic static readonly releaseNotesURL: string = \"\";\n\t\n\tpublic static readonly isOnMac: boolean = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\n\tpublic static readonly ctrlSymbol: string = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\n\tpublic static readonly ctrlName: string = EditorConfig.isOnMac ? \"command\" : \"control\";\n\t\n\tpublic static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\n\t\t{name: \"Custom Instruments\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"chip wave\",        customType: InstrumentType.chip},\n\t\t\t{name: \"FM (expert)\",      customType: InstrumentType.fm},\n\t\t\t{name: \"basic noise\",      customType: InstrumentType.noise},\n\t\t\t{name: \"spectrum\",         customType: InstrumentType.spectrum},\n\t\t\t{name: \"drumset\",          customType: InstrumentType.drumset},\n\t\t\t{name: \"harmonics\",        customType: InstrumentType.harmonics},\n\t\t\t{name: \"pulse width\",      customType: InstrumentType.pwm},\n\t\t\t{name: \"picked string\",    customType: InstrumentType.pickedString},\n\t\t\t{name: \"supersaw\",         customType: InstrumentType.supersaw},\n\t\t])},\n\t\t{name: \"Retro Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"square wave\",      midiProgram:  80, settings: {\"type\":\"chip\",\"eqFilter\":[],\"effects\":[],\"transition\":\"interrupt\",\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"chord\":\"arpeggio\",\"wave\":\"square\",\"unison\":\"none\",\"envelopes\":[]}},\n\t\t\t{name: \"triangle wave\",    midiProgram:  71, settings: {\"type\":\"chip\",\"eqFilter\":[],\"effects\":[],\"transition\":\"interrupt\",\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"chord\":\"arpeggio\",\"wave\":\"triangle\",\"unison\":\"none\",\"envelopes\":[]}},\n\t\t\t{name: \"square lead\",      midiProgram:  80, generalMidi: true, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.3536}],\"effects\":[],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"simultaneous\",\"wave\":\"square\",\"unison\":\"hum\",\"envelopes\":[]}},\n\t\t\t{name: \"sawtooth lead 1\",  midiProgram:  81, generalMidi: true, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.5}],\"effects\":[],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"simultaneous\",\"wave\":\"sawtooth\",\"unison\":\"shimmer\",\"envelopes\":[]}},\n\t\t\t{name: \"sawtooth lead 2\",  midiProgram:  81, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":1}],\"effects\":[\"vibrato\"],\"vibrato\":\"light\",\"transition\":\"normal\",\"fadeInSeconds\":0.0125,\"fadeOutTicks\":72,\"chord\":\"simultaneous\",\"wave\":\"sawtooth\",\"unison\":\"hum\",\"envelopes\":[]}},\n\t\t\t{name: \"chip noise\",       midiProgram: 116, isNoise: true, settings: {\"type\":\"noise\",\"transition\":\"hard\",\"effects\":\"none\",\"chord\":\"arpeggio\",\"filterCutoffHz\":4000,\"filterResonance\":0,\"filterEnvelope\":\"steady\",\"wave\":\"retro\"}},\n\t\t\t{name: \"FM twang\",         midiProgram:  32, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"simultaneous\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":0},{\"frequency\":\"1×\",\"amplitude\":0}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 2\",\"index\":1}]}},\n\t\t\t{name: \"FM bass\",          midiProgram:  36, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"custom interval\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"2×\",\"amplitude\":11},{\"frequency\":\"1×\",\"amplitude\":7},{\"frequency\":\"1×\",\"amplitude\":9},{\"frequency\":\"20×\",\"amplitude\":3}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 2\",\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 3\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 2\",\"index\":3}]}},\n\t\t\t{name: \"FM flute\",         midiProgram:  73, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[],\"transition\":\"normal\",\"fadeInSeconds\":0.0263,\"fadeOutTicks\":-3,\"chord\":\"simultaneous\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":6},{\"frequency\":\"1×\",\"amplitude\":0},{\"frequency\":\"1×\",\"amplitude\":0}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 2\",\"index\":1}]}},\n\t\t\t{name: \"FM organ\",         midiProgram:  16, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"vibrato\"],\"vibrato\":\"delayed\",\"transition\":\"normal\",\"fadeInSeconds\":0.0263,\"fadeOutTicks\":-3,\"chord\":\"custom interval\",\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":14},{\"frequency\":\"2×\",\"amplitude\":14},{\"frequency\":\"1×\",\"amplitude\":11},{\"frequency\":\"2×\",\"amplitude\":11}],\"envelopes\":[]}},\n\t\t\t{name: \"supersaw lead\",    midiProgram:  81, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":2}],\"effects\":[\"reverb\"],\"reverb\":67,\"fadeInSeconds\":0,\"fadeOutTicks\":-6,\"pulseWidth\":50,\"dynamism\":100,\"spread\":58,\"shape\":0,\"envelopes\":[]}},\n\t\t])},\n\t\t{name: \"Keyboard Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"grand piano\",      midiProgram:   0, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":4},{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":4},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":0.25}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.0884}],\"reverb\":67,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"harmonics\":[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],\"unison\":\"piano\",\"stringSustain\":86,\"stringSustainType\":\"acoustic\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1}]}},\n\t\t\t{name: \"bright piano\",     midiProgram:   1, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1681.79,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":1.4142}],\"effects\":[\"reverb\"],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"chord\":\"simultaneous\",\"harmonics\":[100,100,86,86,71,71,0,71,71,71,71,71,71,14,57,57,57,57,57,57,29,57,57,57,57,57,57,57],\"unison\":\"piano\",\"stringSustain\":86,\"envelopes\":[]}},\n\t\t\t{name: \"electric grand\",   midiProgram:   2, generalMidi: true, settings: {\"type\":\"chip\",\"eqFilter\":[],\"effects\":[\"note filter\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5}],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"wave\":\"1/8 pulse\",\"unison\":\"shimmer\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"}]}},\n\t\t\t{name: \"honky-tonk piano\", midiProgram:   3, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.3536}],\"effects\":[\"reverb\"],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"harmonics\":[100,100,86,71,86,71,43,71,43,43,57,57,57,29,57,57,57,57,57,57,43,57,57,57,43,43,43,43],\"unison\":\"honky tonk\",\"stringSustain\":71,\"envelopes\":[]}},\n\t\t\t{name: \"electric piano 1\", midiProgram:   4, generalMidi: true, settings: {\"type\":\"harmonics\",\"eqFilter\":[],\"effects\":[\"note filter\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.5}],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"simultaneous\",\"harmonics\":[86,100,100,71,71,57,57,43,43,43,29,29,29,14,14,14,0,0,0,0,0,57,0,0,0,0,0,0],\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 2\"}]}},\n\t\t\t{name: \"electric piano 2\", midiProgram:   5, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"note filter\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":0.25}],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":12},{\"frequency\":\"1×\",\"amplitude\":6},{\"frequency\":\"1×\",\"amplitude\":9},{\"frequency\":\"16×\",\"amplitude\":6}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 3\",\"index\":3}]}},\n\t\t\t{name: \"harpsichord\",      midiProgram:   6, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":11313.71,\"linearGain\":2.8284}],\"effects\":[\"reverb\"],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"chord\":\"simultaneous\",\"harmonics\":[100,100,100,86,57,86,86,86,86,57,57,71,71,86,86,71,71,86,86,71,71,71,71,71,71,71,71,71],\"unison\":\"none\",\"stringSustain\":79,\"envelopes\":[]}},\n\t\t\t{name: \"clavinet\",         midiProgram:   7, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"note filter\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.3536}],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"simultaneous\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"3⟲\",\"feedbackAmplitude\":6,\"operators\":[{\"frequency\":\"3×\",\"amplitude\":15},{\"frequency\":\"~1×\",\"amplitude\":6},{\"frequency\":\"8×\",\"amplitude\":4},{\"frequency\":\"1×\",\"amplitude\":0}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 2\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 2\"}]}},\n\t\t\t{name: \"dulcimer\",         midiProgram:  15, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.3536}],\"effects\":[\"reverb\"],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"strum\",\"harmonics\":[100,100,100,86,100,86,57,100,100,86,100,86,100,86,100,71,57,71,71,100,86,71,86,86,100,86,86,86],\"unison\":\"piano\",\"stringSustain\":79,\"envelopes\":[]}},\n\t\t])},\n\t\t{name: \"Idiophone Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"celesta\",          midiProgram:   8, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":5657,\"filterResonance\":14,\"filterEnvelope\":\"twang 2\",\"vibrato\":\"none\",\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":0,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"~1×\",\"amplitude\":11,\"envelope\":\"custom\"},{\"frequency\":\"8×\",\"amplitude\":6,\"envelope\":\"custom\"},{\"frequency\":\"20×\",\"amplitude\":3,\"envelope\":\"twang 1\"},{\"frequency\":\"3×\",\"amplitude\":1,\"envelope\":\"twang 2\"}]}},\n\t\t\t{name: \"glockenspiel\",     midiProgram:   9, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":5657,\"filterResonance\":14,\"filterEnvelope\":\"twang 2\",\"vibrato\":\"none\",\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲\",\"feedbackAmplitude\":2,\"feedbackEnvelope\":\"decay 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":7,\"envelope\":\"custom\"},{\"frequency\":\"5×\",\"amplitude\":11,\"envelope\":\"custom\"},{\"frequency\":\"8×\",\"amplitude\":7,\"envelope\":\"custom\"},{\"frequency\":\"20×\",\"amplitude\":2,\"envelope\":\"twang 1\"}]}},\n\t\t\t{name: \"music box 1\",      midiProgram:  10, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.5}],\"effects\":[\"reverb\"],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"strum\",\"harmonics\":[100,0,0,100,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,71,0],\"unison\":\"none\",\"stringSustain\":64,\"envelopes\":[]}},\n\t\t\t{name: \"music box 2\",      midiProgram:  10, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":0.7071}],\"effects\":[\"reverb\"],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"strum\",\"harmonics\":[100,57,57,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0],\"unison\":\"none\",\"stringSustain\":29,\"envelopes\":[]}},\n\t\t\t{name: \"vibraphone\",       midiProgram:  11, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"twang 2\",\"vibrato\":\"none\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1→2→3→4\",\"feedbackAmplitude\":3,\"feedbackEnvelope\":\"twang 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"~1×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"9×\",\"amplitude\":3,\"envelope\":\"custom\"},{\"frequency\":\"4×\",\"amplitude\":9,\"envelope\":\"custom\"}]}},\n\t\t\t{name: \"marimba\",          midiProgram:  12, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":2000,\"filterResonance\":29,\"filterEnvelope\":\"decay 1\",\"vibrato\":\"none\",\"algorithm\":\"1 2←(3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"4×\",\"amplitude\":6,\"envelope\":\"custom\"},{\"frequency\":\"13×\",\"amplitude\":6,\"envelope\":\"twang 1\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"kalimba\",          midiProgram: 108, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"decay 1\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":11,\"envelope\":\"custom\"},{\"frequency\":\"5×\",\"amplitude\":3,\"envelope\":\"twang 2\"},{\"frequency\":\"20×\",\"amplitude\":3,\"envelope\":\"twang 1\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"xylophone\",        midiProgram:  13, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"strum\",\"filterCutoffHz\":2000,\"filterResonance\":14,\"filterEnvelope\":\"twang 1\",\"vibrato\":\"none\",\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲\",\"feedbackAmplitude\":0,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"6×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"11×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"20×\",\"amplitude\":6,\"envelope\":\"twang 1\"}]}},\n\t\t\t{name: \"tubular bell\",     midiProgram:  14, generalMidi: true, midiSubharmonicOctaves: 1, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.3536}],\"effects\":[\"reverb\"],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"chord\":\"strum\",\"harmonics\":[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],\"unison\":\"shimmer\",\"stringSustain\":86,\"envelopes\":[]}},\n\t\t\t{name: \"bell synth\",       midiProgram:  14, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":2000,\"filterResonance\":29,\"filterEnvelope\":\"twang 3\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"~2×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"7×\",\"amplitude\":6,\"envelope\":\"twang 3\"},{\"frequency\":\"20×\",\"amplitude\":1,\"envelope\":\"twang 1\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"rain drop\",        midiProgram:  96, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":4000,\"filterResonance\":14,\"filterEnvelope\":\"twang 1\",\"vibrato\":\"none\",\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":0,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":12,\"envelope\":\"custom\"},{\"frequency\":\"6×\",\"amplitude\":4,\"envelope\":\"custom\"},{\"frequency\":\"20×\",\"amplitude\":3,\"envelope\":\"twang 1\"},{\"frequency\":\"1×\",\"amplitude\":6,\"envelope\":\"tremolo1\"}]}},\n\t\t\t{name: \"crystal\",          midiProgram:  98, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"twang 2\",\"vibrato\":\"delayed\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":4,\"feedbackEnvelope\":\"twang 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"3×\",\"amplitude\":7,\"envelope\":\"custom\"},{\"frequency\":\"6×\",\"amplitude\":4,\"envelope\":\"custom\"},{\"frequency\":\"13×\",\"amplitude\":4,\"envelope\":\"custom\"}]}},\n\t\t\t{name: \"tinkle bell\",      midiProgram: 112, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"strum\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"twang 2\",\"vibrato\":\"none\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1→2→3→4\",\"feedbackAmplitude\":5,\"feedbackEnvelope\":\"twang 3\",\"operators\":[{\"frequency\":\"~2×\",\"amplitude\":7,\"envelope\":\"custom\"},{\"frequency\":\"5×\",\"amplitude\":7,\"envelope\":\"custom\"},{\"frequency\":\"7×\",\"amplitude\":7,\"envelope\":\"custom\"},{\"frequency\":\"16×\",\"amplitude\":7,\"envelope\":\"custom\"}]}},\n\t\t\t{name: \"agogo\",            midiProgram: 113, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":4000,\"filterResonance\":14,\"filterEnvelope\":\"decay 1\",\"vibrato\":\"none\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1→4\",\"feedbackAmplitude\":15,\"feedbackEnvelope\":\"decay 1\",\"operators\":[{\"frequency\":\"2×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"5×\",\"amplitude\":6,\"envelope\":\"custom\"},{\"frequency\":\"8×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"13×\",\"amplitude\":11,\"envelope\":\"custom\"}]}},\n\t\t])},\n\t\t{name: \"Guitar Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"nylon guitar\",     midiProgram:  24, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":5657,\"filterResonance\":14,\"filterEnvelope\":\"twang 1\",\"vibrato\":\"none\",\"algorithm\":\"1←2←3←4\",\"feedbackType\":\"3⟲\",\"feedbackAmplitude\":6,\"feedbackEnvelope\":\"twang 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":6,\"envelope\":\"steady\"},{\"frequency\":\"5×\",\"amplitude\":2,\"envelope\":\"steady\"},{\"frequency\":\"7×\",\"amplitude\":4,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"steel guitar\",     midiProgram:  25, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[],\"effects\":[\"reverb\"],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"strum\",\"harmonics\":[100,100,86,71,71,71,86,86,71,57,43,43,43,57,57,57,57,57,43,43,43,43,43,43,43,43,43,43],\"unison\":\"none\",\"stringSustain\":71,\"envelopes\":[]}},\n\t\t\t{name: \"jazz guitar\",      midiProgram:  26, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"strum\",\"filterCutoffHz\":2000,\"filterResonance\":14,\"filterEnvelope\":\"twang 2\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[100,100,86,71,57,71,71,43,57,71,57,43,29,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},\n\t\t\t{name: \"clean guitar\",     midiProgram:  27, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"strum\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"twang 2\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43]}},\n\t\t\t{name: \"muted guitar\",     midiProgram:  28, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"strum\",\"filterCutoffHz\":2000,\"filterResonance\":14,\"filterEnvelope\":\"twang 1\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":7,\"feedbackEnvelope\":\"twang 2\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":13,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":4,\"envelope\":\"twang 3\"},{\"frequency\":\"4×\",\"amplitude\":4,\"envelope\":\"twang 2\"},{\"frequency\":\"16×\",\"amplitude\":4,\"envelope\":\"twang 1\"}]}},\n\t\t])},\n\t\t{name: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"acoustic bass\",    midiProgram:  32, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":4000,\"filterResonance\":14,\"filterEnvelope\":\"twang 1\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[100,86,71,71,71,71,57,57,57,57,43,43,43,43,43,29,29,29,29,29,29,14,14,14,14,14,14,14]}},\n\t\t\t{name: \"fingered bass\",    midiProgram:  33, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"twang 1\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[100,86,71,57,71,43,57,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0]}},\n\t\t\t{name: \"picked bass\",      midiProgram:  34, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":2828,\"filterResonance\":0,\"filterEnvelope\":\"twang 1\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"3⟲\",\"feedbackAmplitude\":4,\"feedbackEnvelope\":\"twang 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":5,\"envelope\":\"steady\"},{\"frequency\":\"11×\",\"amplitude\":1,\"envelope\":\"twang 3\"},{\"frequency\":\"1×\",\"amplitude\":9,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"fretless bass\",    midiProgram:  35, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"strum\",\"filterCutoffHz\":1000,\"filterResonance\":14,\"filterEnvelope\":\"flare 2\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[100,100,86,71,71,57,57,71,71,71,57,57,57,57,57,57,57,43,43,43,43,43,43,43,43,29,29,14]}},\n\t\t\t{name: \"slap bass 1\",      midiProgram:  36, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"strum\",\"filterCutoffHz\":4000,\"filterResonance\":0,\"filterEnvelope\":\"twang 1\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[100,100,100,100,86,71,57,29,29,43,43,57,71,57,29,29,43,57,57,57,43,43,43,57,71,71,71,71]}},\n\t\t\t{name: \"slap bass 2\",      midiProgram:  37, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"strum\",\"filterCutoffHz\":5657,\"filterResonance\":0,\"filterEnvelope\":\"twang 1\",\"vibrato\":\"none\",\"algorithm\":\"1←2←3←4\",\"feedbackType\":\"3⟲\",\"feedbackAmplitude\":4,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"3×\",\"amplitude\":13,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":7,\"envelope\":\"steady\"},{\"frequency\":\"13×\",\"amplitude\":3,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":11,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"bass synth 1\",     midiProgram:  38, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"strum\",\"filterCutoffHz\":4000,\"filterResonance\":43,\"filterEnvelope\":\"twang 2\",\"vibrato\":\"none\",\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"3⟲ 4⟲\",\"feedbackAmplitude\":9,\"feedbackEnvelope\":\"twang 2\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":14,\"envelope\":\"twang 1\"},{\"frequency\":\"~1×\",\"amplitude\":13,\"envelope\":\"twang 2\"}]}},\n\t\t\t{name: \"bass synth 2\",     midiProgram:  39, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":1000,\"filterResonance\":57,\"filterEnvelope\":\"punch\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1→2\",\"feedbackAmplitude\":4,\"feedbackEnvelope\":\"twang 3\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":9,\"envelope\":\"steady\"},{\"frequency\":\"3×\",\"amplitude\":0,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"bass & lead\",      midiProgram:  87, generalMidi: true, settings: {\"type\":\"chip\",\"transition\":\"hard\",\"effects\":\"reverb\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":86,\"filterEnvelope\":\"twang 2\",\"wave\":\"sawtooth\",\"interval\":\"shimmer\",\"vibrato\":\"none\"}},\n\t\t\t{name: \"dubstep yoi yoi\",  midiProgram:  87, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.7071}],\"effects\":[\"note filter\",\"bitcrusher\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":594.6,\"linearGain\":11.3137}],\"bitcrusherOctave\":1.5,\"bitcrusherQuantization\":0,\"transition\":\"slide\",\"fadeInSeconds\":0.0263,\"fadeOutTicks\":-3,\"chord\":\"arpeggio\",\"wave\":\"sawtooth\",\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"flare 2\",\"index\":0}]}},\n\t\t])},\n\t\t{name: \"Picked String Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"pizzicato strings\",midiProgram:  45, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"medium fade\",\"chord\":\"harmony\",\"filterCutoffHz\":1000,\"filterResonance\":14,\"filterEnvelope\":\"twang 1\",\"vibrato\":\"none\",\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":7,\"feedbackEnvelope\":\"twang 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":14,\"envelope\":\"custom\"},{\"frequency\":\"3×\",\"amplitude\":11,\"envelope\":\"custom\"},{\"frequency\":\"6×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"~1×\",\"amplitude\":10,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"harp\",             midiProgram:  46, generalMidi: true, settings: {\"type\":\"FM\",\"transition\":\"hard fade\",\"effects\":\"reverb\",\"chord\":\"strum\",\"filterCutoffHz\":2828,\"filterResonance\":0,\"filterEnvelope\":\"twang 1\",\"vibrato\":\"none\",\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"3⟲\",\"feedbackAmplitude\":6,\"feedbackEnvelope\":\"twang 2\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"4×\",\"amplitude\":6,\"envelope\":\"custom\"},{\"frequency\":\"~2×\",\"amplitude\":3,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":6,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"sitar\",            midiProgram: 104, generalMidi: true, settings: {\"type\":\"FM\",\"transition\":\"hard fade\",\"effects\":\"reverb\",\"chord\":\"strum\",\"filterCutoffHz\":8000,\"filterResonance\":57,\"filterEnvelope\":\"twang 2\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":14,\"envelope\":\"twang 3\"},{\"frequency\":\"9×\",\"amplitude\":3,\"envelope\":\"twang 3\"},{\"frequency\":\"16×\",\"amplitude\":9,\"envelope\":\"swell 3\"}]}},\n\t\t\t{name: \"banjo\",            midiProgram: 105, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"twang 2\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"2⟲\",\"feedbackAmplitude\":4,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"4×\",\"amplitude\":14,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":10,\"envelope\":\"steady\"},{\"frequency\":\"11×\",\"amplitude\":3,\"envelope\":\"twang 3\"},{\"frequency\":\"1×\",\"amplitude\":11,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"ukulele\",          midiProgram: 105, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":2000,\"filterResonance\":0,\"filterEnvelope\":\"twang 1\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"3⟲\",\"feedbackAmplitude\":5,\"feedbackEnvelope\":\"twang 1\",\"operators\":[{\"frequency\":\"2×\",\"amplitude\":14,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":6,\"envelope\":\"steady\"},{\"frequency\":\"9×\",\"amplitude\":4,\"envelope\":\"twang 2\"},{\"frequency\":\"1×\",\"amplitude\":11,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"shamisen\",         midiProgram: 106, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"harmony\",\"filterCutoffHz\":8000,\"filterResonance\":14,\"filterEnvelope\":\"twang 1\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"3⟲\",\"feedbackAmplitude\":9,\"feedbackEnvelope\":\"twang 3\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":12,\"envelope\":\"steady\"},{\"frequency\":\"16×\",\"amplitude\":4,\"envelope\":\"twang 3\"},{\"frequency\":\"1×\",\"amplitude\":7,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"koto\",             midiProgram: 107, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":14,\"filterEnvelope\":\"twang 2\",\"vibrato\":\"none\",\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":5,\"feedbackEnvelope\":\"twang 2\",\"operators\":[{\"frequency\":\"~1×\",\"amplitude\":12,\"envelope\":\"custom\"},{\"frequency\":\"6×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"4×\",\"amplitude\":8,\"envelope\":\"twang 3\"},{\"frequency\":\"~2×\",\"amplitude\":8,\"envelope\":\"twang 3\"}]}},\n\t\t])},\n\t\t{name: \"Distortion Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"overdrive guitar\", midiProgram:  29, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.5}],\"effects\":[\"note filter\",\"distortion\"],\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":2},{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.7071}],\"distortion\":71,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"chord\":\"strum\",\"harmonics\":[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],\"unison\":\"none\",\"stringSustain\":71,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":1}]}},\n\t\t\t{name: \"distortion guitar\",midiProgram:  30, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":1000,\"linearGain\":0.25}],\"effects\":[\"note filter\",\"distortion\",\"reverb\"],\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":2},{\"type\":\"low-pass\",\"cutoffHz\":2000,\"linearGain\":1}],\"distortion\":86,\"reverb\":67,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"chord\":\"strum\",\"harmonics\":[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],\"unison\":\"none\",\"stringSustain\":71,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":1}]}},\n\t\t\t{name: \"charango synth\",   midiProgram:  84, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":1}],\"effects\":[],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"strum\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1→2→3→4\",\"feedbackAmplitude\":8,\"operators\":[{\"frequency\":\"3×\",\"amplitude\":13},{\"frequency\":\"~1×\",\"amplitude\":5},{\"frequency\":\"4×\",\"amplitude\":6},{\"frequency\":\"3×\",\"amplitude\":7}],\"envelopes\":[{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 3\"}]}},\n\t\t\t{name: \"guitar harmonics\", midiProgram:  31, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":2}],\"effects\":[\"reverb\"],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"strum\",\"algorithm\":\"1←(2 3)←4\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":2,\"operators\":[{\"frequency\":\"4×\",\"amplitude\":12},{\"frequency\":\"16×\",\"amplitude\":5},{\"frequency\":\"1×\",\"amplitude\":2},{\"frequency\":\"~1×\",\"amplitude\":12}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 1\",\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"punch\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":3}]}},\n\t\t\t{name: \"PWM overdrive\",    midiProgram:  29, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":1.4142}],\"effects\":[],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"strum\",\"pulseWidth\":17.67767,\"envelopes\":[{\"target\":\"pulseWidth\",\"envelope\":\"punch\"}]}},\n\t\t\t{name: \"PWM distortion\",   midiProgram:  30, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":2}],\"effects\":[\"vibrato\"],\"vibrato\":\"delayed\",\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"strum\",\"pulseWidth\":50,\"envelopes\":[{\"target\":\"pulseWidth\",\"envelope\":\"swell 1\"}]}},\n\t\t\t{name: \"FM overdrive\",     midiProgram:  29, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":1}],\"effects\":[\"reverb\"],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"strum\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1→2\",\"feedbackAmplitude\":2,\"operators\":[{\"frequency\":\"~1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":12},{\"frequency\":\"~2×\",\"amplitude\":6},{\"frequency\":\"1×\",\"amplitude\":12}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 3\",\"index\":3},{\"target\":\"feedbackAmplitude\",\"envelope\":\"punch\"}]}},\n\t\t\t{name: \"FM distortion\",    midiProgram:  30, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":2}],\"effects\":[\"reverb\"],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"strum\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1→2\",\"feedbackAmplitude\":4,\"operators\":[{\"frequency\":\"~1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":11},{\"frequency\":\"1×\",\"amplitude\":9},{\"frequency\":\"~2×\",\"amplitude\":4}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 1\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 3\",\"index\":3}]}},\n\t\t])},\n\t\t{name: \"Bellows Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"drawbar organ 1\",  midiProgram:  16, generalMidi: true, midiSubharmonicOctaves: 1, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"steady\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[86,86,0,86,0,0,0,86,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0]}},\n\t\t\t{name: \"drawbar organ 2\",  midiProgram:  16, midiSubharmonicOctaves: 1, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"steady\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[86,29,71,86,71,14,0,100,0,0,0,86,0,0,0,71,0,0,0,57,0,0,0,29,0,0,0,0]}},\n\t\t\t{name: \"percussive organ\", midiProgram:  17, generalMidi: true, midiSubharmonicOctaves: 1, settings: {\"type\":\"FM\",\"transition\":\"hard\",\"effects\":\"reverb\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":14,\"filterEnvelope\":\"punch\",\"vibrato\":\"light\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1→3 2→4\",\"feedbackAmplitude\":7,\"feedbackEnvelope\":\"decay 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":7,\"envelope\":\"custom\"},{\"frequency\":\"2×\",\"amplitude\":7,\"envelope\":\"custom\"},{\"frequency\":\"3×\",\"amplitude\":8,\"envelope\":\"custom\"},{\"frequency\":\"4×\",\"amplitude\":8,\"envelope\":\"custom\"}]}},\n\t\t\t{name: \"rock organ\",       midiProgram:  18, generalMidi: true, midiSubharmonicOctaves: 1, settings: {\"type\":\"FM\",\"effects\":\"chorus & reverb\",\"transition\":\"hard\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":14,\"filterEnvelope\":\"punch\",\"vibrato\":\"delayed\",\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲\",\"feedbackAmplitude\":2,\"feedbackEnvelope\":\"flare 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"4×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"6×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"2×\",\"amplitude\":5,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"pipe organ\",       midiProgram:  19, generalMidi: true, midiSubharmonicOctaves: 1, settings: {\"type\":\"FM\",\"transition\":\"cross fade\",\"effects\":\"reverb\",\"chord\":\"harmony\",\"filterCutoffHz\":5657,\"filterResonance\":43,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":5,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":8,\"envelope\":\"custom\"},{\"frequency\":\"2×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"4×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"8×\",\"amplitude\":8,\"envelope\":\"custom\"}]}},\n\t\t\t{name: \"reed organ\",       midiProgram:  20, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":29,\"filterEnvelope\":\"steady\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[71,86,100,86,71,100,57,71,71,71,43,43,43,71,43,71,57,57,57,57,57,57,57,29,43,29,29,14]}},\n\t\t\t{name: \"accordion\",        midiProgram:  21, generalMidi: true, settings: {\"type\":\"chip\",\"effects\":\"reverb\",\"transition\":\"cross fade\",\"chord\":\"harmony\",\"filterCutoffHz\":5657,\"filterResonance\":0,\"filterEnvelope\":\"swell 1\",\"wave\":\"double saw\",\"interval\":\"honky tonk\",\"vibrato\":\"none\"}},\n\t\t\t{name: \"bandoneon\",        midiProgram:  23, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":29,\"filterEnvelope\":\"swell 1\",\"interval\":\"hum\",\"vibrato\":\"none\",\"harmonics\":[86,86,86,57,71,86,57,71,71,71,57,43,57,43,71,43,71,57,57,43,43,43,57,43,43,29,29,29]}},\n\t\t\t{name: \"bagpipe\",          midiProgram: 109, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"cross fade\",\"chord\":\"harmony\",\"filterCutoffHz\":5657,\"filterResonance\":43,\"filterEnvelope\":\"punch\",\"interval\":\"hum\",\"vibrato\":\"none\",\"harmonics\":[71,86,86,100,100,86,57,100,86,71,71,71,57,57,57,71,57,71,57,71,43,57,57,43,43,43,43,43]}},\n\t\t])},\n\t\t{name: \"String Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"violin\",           midiProgram:  40, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":1.4142},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.3536}],\"effects\":[\"vibrato\",\"reverb\"],\"vibrato\":\"delayed\",\"reverb\":67,\"transition\":\"normal\",\"fadeInSeconds\":0.0413,\"fadeOutTicks\":6,\"chord\":\"simultaneous\",\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"1→2\",\"feedbackAmplitude\":5,\"operators\":[{\"frequency\":\"4×\",\"amplitude\":9},{\"frequency\":\"3×\",\"amplitude\":9},{\"frequency\":\"2×\",\"amplitude\":7},{\"frequency\":\"7×\",\"amplitude\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 1\",\"index\":3},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 3\"}]}},\n\t\t\t{name: \"viola\",            midiProgram:  41, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"cross fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":29,\"filterEnvelope\":\"steady\",\"vibrato\":\"delayed\",\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲\",\"feedbackAmplitude\":8,\"feedbackEnvelope\":\"swell 1\",\"operators\":[{\"frequency\":\"2×\",\"amplitude\":11,\"envelope\":\"custom\"},{\"frequency\":\"7×\",\"amplitude\":7,\"envelope\":\"custom\"},{\"frequency\":\"13×\",\"amplitude\":4,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":5,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"cello\",            midiProgram:  42, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.1768},{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":4756.83,\"linearGain\":5.6569}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.0884}],\"reverb\":67,\"transition\":\"normal\",\"fadeInSeconds\":0.0125,\"fadeOutTicks\":12,\"chord\":\"simultaneous\",\"algorithm\":\"(1 2)←3←4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":3,\"operators\":[{\"frequency\":\"16×\",\"amplitude\":5},{\"frequency\":\"~1×\",\"amplitude\":10},{\"frequency\":\"1×\",\"amplitude\":9},{\"frequency\":\"6×\",\"amplitude\":3}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 1\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 1\",\"index\":3}]}},\n\t\t\t{name: \"contrabass\",       midiProgram:  43, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"cross fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":29,\"filterEnvelope\":\"steady\",\"vibrato\":\"delayed\",\"algorithm\":\"(1 2)←3←4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":0,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"16×\",\"amplitude\":5,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":10,\"envelope\":\"steady\"},{\"frequency\":\"6×\",\"amplitude\":3,\"envelope\":\"swell 1\"}]}},\n\t\t\t{name: \"fiddle\",           midiProgram: 110, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":29,\"filterEnvelope\":\"steady\",\"vibrato\":\"delayed\",\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"3⟲ 4⟲\",\"feedbackAmplitude\":5,\"feedbackEnvelope\":\"twang 1\",\"operators\":[{\"frequency\":\"2×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"8×\",\"amplitude\":8,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":8,\"envelope\":\"steady\"},{\"frequency\":\"16×\",\"amplitude\":3,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"tremolo strings\",  midiProgram:  44, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"chorus & reverb\",\"transition\":\"medium fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":0,\"filterEnvelope\":\"tremolo4\",\"vibrato\":\"none\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1→2→3→4\",\"feedbackAmplitude\":12,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":8,\"envelope\":\"custom\"},{\"frequency\":\"~2×\",\"amplitude\":8,\"envelope\":\"custom\"},{\"frequency\":\"4×\",\"amplitude\":8,\"envelope\":\"custom\"},{\"frequency\":\"7×\",\"amplitude\":8,\"envelope\":\"custom\"}]}},\n\t\t\t{name: \"strings\",          midiProgram:  48, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"chorus & reverb\",\"transition\":\"cross fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":43,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"4⟲\",\"feedbackAmplitude\":5,\"feedbackEnvelope\":\"twang 3\",\"operators\":[{\"frequency\":\"4×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"3×\",\"amplitude\":9,\"envelope\":\"custom\"},{\"frequency\":\"2×\",\"amplitude\":7,\"envelope\":\"steady\"},{\"frequency\":\"7×\",\"amplitude\":3,\"envelope\":\"swell 1\"}]}},\n\t\t\t{name: \"slow strings\",     midiProgram:  49, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"chorus & reverb\",\"transition\":\"soft fade\",\"chord\":\"harmony\",\"filterCutoffHz\":1414,\"filterResonance\":0,\"filterEnvelope\":\"swell 2\",\"vibrato\":\"none\",\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"4⟲\",\"feedbackAmplitude\":6,\"feedbackEnvelope\":\"flare 3\",\"operators\":[{\"frequency\":\"4×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"3×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"2×\",\"amplitude\":7,\"envelope\":\"steady\"},{\"frequency\":\"7×\",\"amplitude\":4,\"envelope\":\"swell 1\"}]}},\n\t\t\t{name: \"strings synth 1\",  midiProgram:  50, generalMidi: true, settings: {\"type\":\"chip\",\"transition\":\"soft fade\",\"effects\":\"chorus & reverb\",\"chord\":\"harmony\",\"filterCutoffHz\":1414,\"filterResonance\":43,\"filterEnvelope\":\"steady\",\"wave\":\"sawtooth\",\"interval\":\"hum\",\"vibrato\":\"delayed\"}},\n\t\t\t{name: \"strings synth 2\",  midiProgram:  51, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"chorus & reverb\",\"transition\":\"soft fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":43,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":12,\"feedbackEnvelope\":\"swell 1\",\"operators\":[{\"frequency\":\"3×\",\"amplitude\":6,\"envelope\":\"custom\"},{\"frequency\":\"2×\",\"amplitude\":7,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":8,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":9,\"envelope\":\"custom\"}]}},\n\t\t\t{name: \"orchestra hit 1\",  midiProgram:  55, generalMidi: true, midiSubharmonicOctaves: 1, settings: {\"type\":\"FM\",\"effects\":\"chorus & reverb\",\"transition\":\"hard fade\",\"chord\":\"harmony\",\"filterCutoffHz\":8000,\"filterResonance\":14,\"filterEnvelope\":\"custom\",\"vibrato\":\"none\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":14,\"feedbackEnvelope\":\"twang 3\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"twang 3\"},{\"frequency\":\"2×\",\"amplitude\":15,\"envelope\":\"flare 3\"},{\"frequency\":\"4×\",\"amplitude\":15,\"envelope\":\"flare 2\"},{\"frequency\":\"8×\",\"amplitude\":15,\"envelope\":\"flare 1\"}]}},\n\t\t\t{name: \"orchestra hit 2\",  midiProgram:  55, midiSubharmonicOctaves: 1, settings: {\"type\":\"FM\",\"effects\":\"chorus & reverb\",\"transition\":\"medium fade\",\"chord\":\"harmony\",\"filterCutoffHz\":8000,\"filterResonance\":0,\"filterEnvelope\":\"decay 1\",\"vibrato\":\"delayed\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":14,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":12,\"envelope\":\"custom\"},{\"frequency\":\"2×\",\"amplitude\":14,\"envelope\":\"custom\"},{\"frequency\":\"3×\",\"amplitude\":12,\"envelope\":\"custom\"},{\"frequency\":\"4×\",\"amplitude\":14,\"envelope\":\"custom\"}]}},\n\t\t\t{name: \"supersaw string\",  midiProgram:  41, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.1768}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":500,\"linearGain\":0.1768}],\"reverb\":33,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":6,\"pulseWidth\":35.35534,\"dynamism\":83,\"spread\":8,\"shape\":50,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0}]}},\n\t\t])},\n\t\t{name: \"Vocal Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"choir soprano\",    midiProgram:  94, generalMidi: true, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":5.6569},{\"type\":\"high-pass\",\"cutoffHz\":707.11,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.25},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":11.3137}],\"effects\":[\"vibrato\",\"chorus\",\"reverb\"],\"vibrato\":\"shaky\",\"chorus\":100,\"reverb\":33,\"fadeInSeconds\":0.0413,\"fadeOutTicks\":24,\"harmonics\":[100,100,86,57,29,29,57,71,57,29,14,14,14,29,43,57,43,29,14,14,14,14,14,14,0,0,0,0],\"unison\":\"none\",\"envelopes\":[]}},\n\t\t\t{name: \"choir tenor\",      midiProgram:  52, generalMidi: true, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":1000,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":5.6569},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.0884},{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":0.7071},{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":11.3137}],\"effects\":[\"vibrato\",\"chorus\",\"reverb\"],\"vibrato\":\"shaky\",\"chorus\":100,\"reverb\":67,\"transition\":\"normal\",\"fadeInSeconds\":0.0413,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"harmonics\":[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],\"unison\":\"none\",\"envelopes\":[]}},\n\t\t\t{name: \"choir bass\",       midiProgram:  52, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":5.6569},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":11.3137}],\"effects\":[\"vibrato\",\"chorus\",\"reverb\"],\"vibrato\":\"shaky\",\"chorus\":100,\"reverb\":67,\"transition\":\"normal\",\"fadeInSeconds\":0.0413,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"harmonics\":[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],\"unison\":\"none\",\"envelopes\":[]}},\n\t\t\t{name: \"solo soprano\",     midiProgram:  85, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":5.6569},{\"type\":\"high-pass\",\"cutoffHz\":707.11,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.25}],\"effects\":[\"vibrato\",\"reverb\"],\"vibrato\":\"shaky\",\"reverb\":33,\"fadeInSeconds\":0.0413,\"fadeOutTicks\":12,\"harmonics\":[86,100,86,43,14,14,57,71,57,14,14,14,14,14,43,57,43,14,14,14,14,14,14,14,0,0,0,0],\"unison\":\"none\",\"envelopes\":[]}},\n\t\t\t{name: \"solo tenor\",       midiProgram:  85, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":1000,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":5.6569},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.0884},{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":0.7071},{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":11.3137}],\"effects\":[\"vibrato\",\"reverb\"],\"vibrato\":\"shaky\",\"reverb\":33,\"fadeInSeconds\":0.0413,\"fadeOutTicks\":12,\"harmonics\":[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],\"unison\":\"none\",\"envelopes\":[]}},\n\t\t\t{name: \"solo bass\",        midiProgram:  85, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":5.6569},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":8},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":8},{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":1.4142}],\"effects\":[\"vibrato\",\"reverb\"],\"vibrato\":\"shaky\",\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0.0263,\"fadeOutTicks\":12,\"chord\":\"simultaneous\",\"harmonics\":[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],\"unison\":\"none\",\"envelopes\":[]}},\n\t\t\t{name: \"voice ooh\",        midiProgram:  53, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":1414,\"filterResonance\":57,\"filterEnvelope\":\"steady\",\"interval\":\"union\",\"vibrato\":\"shaky\",\"harmonics\":[100,57,43,43,14,14,0,0,0,14,29,29,14,0,14,29,29,14,0,0,0,0,0,0,0,0,0,0]}},\n\t\t\t{name: \"voice synth\",      midiProgram:  54, generalMidi: true, settings: {\"type\":\"chip\",\"transition\":\"medium fade\",\"effects\":\"chorus & reverb\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":57,\"filterEnvelope\":\"steady\",\"wave\":\"rounded\",\"interval\":\"union\",\"vibrato\":\"light\"}},\n\t\t\t{name: \"vox synth lead\",   midiProgram:  85, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"chorus & reverb\",\"transition\":\"cross fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"steady\",\"vibrato\":\"light\",\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1→2→3→4\",\"feedbackAmplitude\":2,\"feedbackEnvelope\":\"punch\",\"operators\":[{\"frequency\":\"2×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"9×\",\"amplitude\":5,\"envelope\":\"custom\"},{\"frequency\":\"20×\",\"amplitude\":1,\"envelope\":\"custom\"},{\"frequency\":\"~1×\",\"amplitude\":4,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"tiny robot\",       midiProgram:  85, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"vibrato\",\"reverb\"],\"vibrato\":\"delayed\",\"reverb\":33,\"transition\":\"slide\",\"fadeInSeconds\":0.0263,\"fadeOutTicks\":-3,\"chord\":\"simultaneous\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":2,\"operators\":[{\"frequency\":\"2×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":7},{\"frequency\":\"~1×\",\"amplitude\":7},{\"frequency\":\"1×\",\"amplitude\":0}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"punch\",\"index\":1},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 3\"}]}},\n\t\t\t{name: \"yowie\",            midiProgram:  85, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"cross fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":86,\"filterEnvelope\":\"tremolo5\",\"vibrato\":\"none\",\"algorithm\":\"1←2←(3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":12,\"feedbackEnvelope\":\"tremolo3\",\"operators\":[{\"frequency\":\"2×\",\"amplitude\":12,\"envelope\":\"custom\"},{\"frequency\":\"16×\",\"amplitude\":5,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":5,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"mouse\",            midiProgram:  85, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"vibrato\",\"reverb\"],\"vibrato\":\"light\",\"reverb\":33,\"transition\":\"slide in pattern\",\"fadeInSeconds\":0.0263,\"fadeOutTicks\":-3,\"chord\":\"simultaneous\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":5,\"operators\":[{\"frequency\":\"2×\",\"amplitude\":13},{\"frequency\":\"5×\",\"amplitude\":12},{\"frequency\":\"1×\",\"amplitude\":0},{\"frequency\":\"1×\",\"amplitude\":0}],\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"note size\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"flare 2\"}]}},\n\t\t\t{name: \"gumdrop\",          midiProgram:  85, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"harmony\",\"filterCutoffHz\":8000,\"filterResonance\":0,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲\",\"feedbackAmplitude\":0,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"2×\",\"amplitude\":15,\"envelope\":\"punch\"},{\"frequency\":\"4×\",\"amplitude\":15,\"envelope\":\"punch\"},{\"frequency\":\"7×\",\"amplitude\":15,\"envelope\":\"punch\"},{\"frequency\":\"1×\",\"amplitude\":10,\"envelope\":\"twang 1\"}]}},\n\t\t\t{name: \"echo drop\",        midiProgram: 102, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"chorus & reverb\",\"transition\":\"hard\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"punch\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":2,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"~2×\",\"amplitude\":11,\"envelope\":\"custom\"},{\"frequency\":\"~1×\",\"amplitude\":5,\"envelope\":\"steady\"},{\"frequency\":\"11×\",\"amplitude\":2,\"envelope\":\"steady\"},{\"frequency\":\"16×\",\"amplitude\":5,\"envelope\":\"swell 3\"}]}},\n\t\t\t{name: \"dark choir\",       midiProgram:  85, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":29,\"filterEnvelope\":\"swell 1\",\"spectrum\":[43,14,14,14,14,14,14,100,14,14,14,57,14,14,100,14,43,14,43,14,14,43,14,29,14,29,14,14,29,0]}},\n\t\t])},\n\t\t{name: \"Brass Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"trumpet\",          midiProgram:  56, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":43,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":9,\"feedbackEnvelope\":\"swell 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":14,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":8,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":5,\"envelope\":\"flare 2\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"trombone\",         midiProgram:  57, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":43,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"2⟲\",\"feedbackAmplitude\":7,\"feedbackEnvelope\":\"swell 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":14,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":8,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"tuba\",             midiProgram:  58, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":43,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"2⟲\",\"feedbackAmplitude\":8,\"feedbackEnvelope\":\"swell 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":14,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":6,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"muted trumpet\",    midiProgram:  59, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":4000,\"linearGain\":2.8284}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":1}],\"reverb\":33,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":-3,\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":5,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":13},{\"frequency\":\"1×\",\"amplitude\":5},{\"frequency\":\"9×\",\"amplitude\":5},{\"frequency\":\"13×\",\"amplitude\":7}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 1\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 1\",\"index\":3},{\"target\":\"feedbackAmplitude\",\"envelope\":\"flare 2\"}]}},\n\t\t\t{name: \"french horn\",      midiProgram:  60, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":2.8284}],\"effects\":[\"reverb\"],\"reverb\":33,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":-3,\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":3,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":12},{\"frequency\":\"1×\",\"amplitude\":10},{\"frequency\":\"~1×\",\"amplitude\":8}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 1\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"flare 2\",\"index\":3},{\"target\":\"feedbackAmplitude\",\"envelope\":\"swell 1\"}]}},\n\t\t\t{name: \"brass section\",    midiProgram:  61, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"punch\",\"vibrato\":\"none\",\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":6,\"feedbackEnvelope\":\"swell 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":14,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":12,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":10,\"envelope\":\"swell 1\"},{\"frequency\":\"~1×\",\"amplitude\":10,\"envelope\":\"swell 1\"}]}},\n\t\t\t{name: \"brass synth 1\",    midiProgram:  62, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":29,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":11,\"feedbackEnvelope\":\"swell 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":14,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":14,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":12,\"envelope\":\"flare 1\"},{\"frequency\":\"~1×\",\"amplitude\":8,\"envelope\":\"flare 2\"}]}},\n\t\t\t{name: \"brass synth 2\",    midiProgram:  63, generalMidi: true, settings: {\"type\":\"FM\",\"transition\":\"soft\",\"effects\":\"reverb\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":43,\"filterEnvelope\":\"twang 3\",\"vibrato\":\"none\",\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":9,\"feedbackEnvelope\":\"swell 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":10,\"envelope\":\"flare 1\"},{\"frequency\":\"~1×\",\"amplitude\":7,\"envelope\":\"flare 1\"}]}},\n\t\t\t{name: \"pulse brass\",      midiProgram:  62, settings: {\"type\":\"PWM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":29,\"filterEnvelope\":\"swell 1\",\"pulseWidth\":50,\"pulseEnvelope\":\"flare 3\",\"vibrato\":\"none\"}},\n\t\t])},\n\t\t{name: \"Reed Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"soprano sax\",      midiProgram:  64, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":29,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1←2←3←4\",\"feedbackType\":\"4⟲\",\"feedbackAmplitude\":5,\"feedbackEnvelope\":\"swell 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":13,\"envelope\":\"custom\"},{\"frequency\":\"4×\",\"amplitude\":4,\"envelope\":\"swell 1\"},{\"frequency\":\"1×\",\"amplitude\":7,\"envelope\":\"steady\"},{\"frequency\":\"5×\",\"amplitude\":4,\"envelope\":\"punch\"}]}},\n\t\t\t{name: \"alto sax\",         midiProgram:  65, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":43,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":4,\"feedbackEnvelope\":\"punch\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":13,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":6,\"envelope\":\"steady\"},{\"frequency\":\"4×\",\"amplitude\":6,\"envelope\":\"swell 1\"},{\"frequency\":\"1×\",\"amplitude\":12,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"tenor sax\",        midiProgram:  66, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":29,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1←2←3←4\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":6,\"feedbackEnvelope\":\"swell 1\",\"operators\":[{\"frequency\":\"2×\",\"amplitude\":12,\"envelope\":\"custom\"},{\"frequency\":\"3×\",\"amplitude\":7,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":3,\"envelope\":\"steady\"},{\"frequency\":\"8×\",\"amplitude\":3,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"baritone sax\",     midiProgram:  67, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":0,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":2,\"feedbackEnvelope\":\"swell 2\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":12,\"envelope\":\"custom\"},{\"frequency\":\"8×\",\"amplitude\":4,\"envelope\":\"steady\"},{\"frequency\":\"4×\",\"amplitude\":5,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":4,\"envelope\":\"punch\"}]}},\n\t\t\t{name: \"sax synth\",        midiProgram:  64, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":8000,\"filterResonance\":0,\"filterEnvelope\":\"steady\",\"vibrato\":\"light\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":4,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"4×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"shehnai\",          midiProgram: 111, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":8000,\"filterResonance\":0,\"filterEnvelope\":\"steady\",\"vibrato\":\"light\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":3,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"4×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":8,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"oboe\",             midiProgram:  68, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"cross fade\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":14,\"filterEnvelope\":\"swell 1\",\"vibrato\":\"none\",\"algorithm\":\"1 2←(3 4)\",\"feedbackType\":\"2⟲\",\"feedbackAmplitude\":2,\"feedbackEnvelope\":\"tremolo5\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":7,\"envelope\":\"custom\"},{\"frequency\":\"4×\",\"amplitude\":12,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":6,\"envelope\":\"steady\"},{\"frequency\":\"6×\",\"amplitude\":2,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"english horn\",     midiProgram:  69, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"cross fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":14,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1 2←(3 4)\",\"feedbackType\":\"2⟲\",\"feedbackAmplitude\":2,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"4×\",\"amplitude\":12,\"envelope\":\"custom\"},{\"frequency\":\"2×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":8,\"envelope\":\"punch\"},{\"frequency\":\"8×\",\"amplitude\":4,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"bassoon\",          midiProgram:  70, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":707,\"filterResonance\":57,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":2,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"2×\",\"amplitude\":11,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":6,\"envelope\":\"steady\"},{\"frequency\":\"6×\",\"amplitude\":6,\"envelope\":\"swell 1\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"clarinet\",         midiProgram:  71, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":1414,\"filterResonance\":14,\"filterEnvelope\":\"steady\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}},\n\t\t\t{name: \"harmonica\",        midiProgram:  22, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":5657,\"filterResonance\":29,\"filterEnvelope\":\"swell 1\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":9,\"feedbackEnvelope\":\"tremolo5\",\"operators\":[{\"frequency\":\"2×\",\"amplitude\":14,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"steady\"},{\"frequency\":\"~2×\",\"amplitude\":2,\"envelope\":\"twang 3\"},{\"frequency\":\"1×\",\"amplitude\":0,\"envelope\":\"steady\"}]}},\n\t\t])},\n\t\t{name: \"Flute Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"flute\",            midiProgram:  73, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":5657,\"filterResonance\":14,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"4⟲\",\"feedbackAmplitude\":7,\"feedbackEnvelope\":\"decay 2\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"2×\",\"amplitude\":4,\"envelope\":\"steady\"},{\"frequency\":\"1×\",\"amplitude\":3,\"envelope\":\"steady\"},{\"frequency\":\"~1×\",\"amplitude\":1,\"envelope\":\"punch\"}]}},\n\t\t\t{name: \"recorder\",         midiProgram:  74, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":29,\"filterEnvelope\":\"swell 2\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[100,43,57,43,57,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},\n\t\t\t{name: \"whistle\",          midiProgram:  78, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"chorus & reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":43,\"filterEnvelope\":\"steady\",\"interval\":\"union\",\"vibrato\":\"delayed\",\"harmonics\":[100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},\n\t\t\t{name: \"ocarina\",          midiProgram:  79, generalMidi: true, settings: {\"type\":\"harmonics\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":43,\"filterEnvelope\":\"steady\",\"interval\":\"union\",\"vibrato\":\"none\",\"harmonics\":[100,14,57,14,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},\n\t\t\t{name: \"piccolo\",          midiProgram:  72, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":5657,\"filterResonance\":43,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"4⟲\",\"feedbackAmplitude\":15,\"feedbackEnvelope\":\"twang 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"1×\",\"amplitude\":10,\"envelope\":\"custom\"},{\"frequency\":\"~2×\",\"amplitude\":3,\"envelope\":\"punch\"},{\"frequency\":\"~1×\",\"amplitude\":5,\"envelope\":\"punch\"}]}},\n\t\t\t{name: \"shakuhachi\",       midiProgram:  77, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"chorus & reverb\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":14,\"filterEnvelope\":\"steady\",\"vibrato\":\"delayed\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"3→4\",\"feedbackAmplitude\":15,\"feedbackEnvelope\":\"steady\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"2×\",\"amplitude\":3,\"envelope\":\"punch\"},{\"frequency\":\"~1×\",\"amplitude\":4,\"envelope\":\"twang 1\"},{\"frequency\":\"20×\",\"amplitude\":15,\"envelope\":\"steady\"}]}},\n\t\t\t{name: \"pan flute\",        midiProgram:  75, generalMidi: true, settings: {\"type\":\"spectrum\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":5.6569}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.7071}],\"reverb\":33,\"fadeInSeconds\":0.0125,\"fadeOutTicks\":-3,\"spectrum\":[100,0,0,0,0,0,0,14,0,0,0,71,0,0,14,0,57,0,29,14,29,14,14,29,14,29,14,14,29,14],\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteVolume\",\"envelope\":\"punch\"}]}},\n\t\t\t{name: \"blown bottle\",     midiProgram:  76, generalMidi: true, settings: {\"type\":\"FM\",\"effects\":\"chorus & reverb\",\"transition\":\"cross fade\",\"chord\":\"harmony\",\"filterCutoffHz\":5657,\"filterResonance\":57,\"filterEnvelope\":\"steady\",\"vibrato\":\"none\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":7,\"feedbackEnvelope\":\"twang 1\",\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"envelope\":\"custom\"},{\"frequency\":\"3×\",\"amplitude\":4,\"envelope\":\"custom\"},{\"frequency\":\"6×\",\"amplitude\":2,\"envelope\":\"custom\"},{\"frequency\":\"11×\",\"amplitude\":2,\"envelope\":\"custom\"}]}},\n\t\t\t{name: \"calliope\",         midiProgram:  82, generalMidi: true, settings: {\"type\":\"spectrum\",\"transition\":\"cross fade\",\"effects\":\"reverb\",\"chord\":\"harmony\",\"filterCutoffHz\":5657,\"filterResonance\":14,\"filterEnvelope\":\"steady\",\"spectrum\":[100,0,0,0,0,0,0,86,0,0,0,71,0,0,57,0,43,0,29,14,14,29,14,14,14,14,14,14,14,14]}},\n\t\t\t{name: \"chiffer\",          midiProgram:  83, generalMidi: true, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"hard\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":14,\"filterEnvelope\":\"punch\",\"spectrum\":[86,0,0,0,0,0,0,71,0,0,0,71,0,0,57,0,57,0,43,14,14,43,14,29,14,29,29,29,29,14]}},\n\t\t\t{name: \"breath noise\",     midiProgram: 121, generalMidi: true, settings: {\"type\":\"spectrum\",\"eqFilter\":[],\"effects\":[\"chord type\",\"note filter\",\"reverb\"],\"chord\":\"strum\",\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":840.9,\"linearGain\":0.3536},{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.3536}],\"reverb\":33,\"fadeInSeconds\":0.0413,\"fadeOutTicks\":12,\"spectrum\":[71,0,0,0,0,0,0,29,0,0,0,71,0,0,29,0,100,29,14,29,100,29,100,14,14,71,0,29,0,0],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 1\"}]}},\n\t\t])},\n\t\t{name: \"Pad Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"new age pad\",      midiProgram:  88, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"chorus\"],\"chorus\":100,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":3,\"operators\":[{\"frequency\":\"2×\",\"amplitude\":14},{\"frequency\":\"~1×\",\"amplitude\":4},{\"frequency\":\"6×\",\"amplitude\":3},{\"frequency\":\"13×\",\"amplitude\":3}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 2\",\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 3\",\"index\":2},{\"target\":\"feedbackAmplitude\",\"envelope\":\"swell 3\"}]}},\n\t\t\t{name: \"warm pad\",         midiProgram:  89, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"note filter\",\"chorus\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":1}],\"chorus\":100,\"transition\":\"normal\",\"fadeInSeconds\":0.0575,\"fadeOutTicks\":96,\"chord\":\"simultaneous\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":7,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":14},{\"frequency\":\"1×\",\"amplitude\":6},{\"frequency\":\"1×\",\"amplitude\":0},{\"frequency\":\"1×\",\"amplitude\":0}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 3\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 1\",\"index\":1}]}},\n\t\t\t{name: \"polysynth pad\",    midiProgram:  90, generalMidi: true, settings: {\"type\":\"chip\",\"eqFilter\":[],\"effects\":[\"vibrato\",\"note filter\",\"chorus\"],\"vibrato\":\"delayed\",\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1}],\"chorus\":100,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"wave\":\"sawtooth\",\"unison\":\"honky tonk\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"}]}},\n\t\t\t{name: \"space voice pad\",  midiProgram:  91, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":5.6569},{\"type\":\"peak\",\"cutoffHz\":2828.43,\"linearGain\":5.6569},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.1768}],\"effects\":[\"chorus\"],\"chorus\":100,\"transition\":\"normal\",\"fadeInSeconds\":0.0125,\"fadeOutTicks\":72,\"chord\":\"simultaneous\",\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":5,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":10},{\"frequency\":\"2×\",\"amplitude\":8},{\"frequency\":\"3×\",\"amplitude\":7},{\"frequency\":\"11×\",\"amplitude\":2}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"punch\",\"index\":3},{\"target\":\"feedbackAmplitude\",\"envelope\":\"swell 2\"}]}},\n\t\t\t{name: \"bowed glass pad\",  midiProgram:  92, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"note filter\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.5}],\"transition\":\"normal\",\"fadeInSeconds\":0.0575,\"fadeOutTicks\":96,\"chord\":\"simultaneous\",\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":10},{\"frequency\":\"2×\",\"amplitude\":12},{\"frequency\":\"3×\",\"amplitude\":7},{\"frequency\":\"7×\",\"amplitude\":4}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 3\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"flare 3\",\"index\":3}]}},\n\t\t\t{name: \"metallic pad\",     midiProgram:  93, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"note filter\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.5}],\"transition\":\"normal\",\"fadeInSeconds\":0.0125,\"fadeOutTicks\":72,\"chord\":\"simultaneous\",\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"1⟲ 2⟲\",\"feedbackAmplitude\":13,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"~1×\",\"amplitude\":9},{\"frequency\":\"1×\",\"amplitude\":7},{\"frequency\":\"11×\",\"amplitude\":7}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 2\",\"index\":2},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 3\"}]}},\n\t\t\t{name: \"sweep pad\",        midiProgram:  95, generalMidi: true, settings: {\"type\":\"chip\",\"eqFilter\":[],\"effects\":[\"note filter\",\"chorus\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":4}],\"chorus\":100,\"transition\":\"normal\",\"fadeInSeconds\":0.0575,\"fadeOutTicks\":96,\"chord\":\"simultaneous\",\"wave\":\"sawtooth\",\"unison\":\"hum\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"flare 3\"}]}},\n\t\t\t{name: \"atmosphere\",       midiProgram:  99, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":1}],\"effects\":[\"chorus\",\"reverb\"],\"chorus\":100,\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"strum\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"3⟲ 4⟲\",\"feedbackAmplitude\":3,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":14},{\"frequency\":\"~1×\",\"amplitude\":10},{\"frequency\":\"3×\",\"amplitude\":7},{\"frequency\":\"1×\",\"amplitude\":7}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 3\",\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 2\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 3\",\"index\":3}]}},\n\t\t\t{name: \"brightness\",       midiProgram: 100, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":2}],\"effects\":[\"chorus\"],\"chorus\":100,\"transition\":\"normal\",\"fadeInSeconds\":0.0125,\"fadeOutTicks\":72,\"chord\":\"simultaneous\",\"harmonics\":[100,86,86,86,43,57,43,71,43,43,43,57,43,43,57,71,57,43,29,43,57,57,43,29,29,29,29,14],\"unison\":\"octave\",\"stringSustain\":86,\"envelopes\":[]}},\n\t\t\t{name: \"goblins\",          midiProgram: 101, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":2828.43,\"linearGain\":11.3137}],\"effects\":[\"note filter\",\"chorus\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1681.79,\"linearGain\":0.5}],\"chorus\":100,\"transition\":\"normal\",\"fadeInSeconds\":0.0575,\"fadeOutTicks\":96,\"chord\":\"simultaneous\",\"algorithm\":\"1←2←3←4\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":10,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"4×\",\"amplitude\":5},{\"frequency\":\"1×\",\"amplitude\":10},{\"frequency\":\"1×\",\"amplitude\":0}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 2\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 3\",\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"tremolo1\",\"index\":2},{\"target\":\"feedbackAmplitude\",\"envelope\":\"flare 3\"}]}},\n\t\t\t{name: \"sci-fi\",           midiProgram: 103, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":9513.66,\"linearGain\":2.8284}],\"effects\":[\"note filter\",\"chorus\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.5}],\"chorus\":100,\"transition\":\"normal\",\"fadeInSeconds\":0.0125,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"algorithm\":\"(1 2)←3←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":8,\"operators\":[{\"frequency\":\"~1×\",\"amplitude\":13},{\"frequency\":\"2×\",\"amplitude\":10},{\"frequency\":\"5×\",\"amplitude\":5},{\"frequency\":\"11×\",\"amplitude\":8}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 3\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"tremolo5\",\"index\":3},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 3\"}]}},\n\t\t\t{name: \"flutter pad\",      midiProgram:  90, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"vibrato\",\"note filter\",\"chorus\"],\"vibrato\":\"delayed\",\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":4}],\"chorus\":100,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"1⟲ 2⟲ 3⟲\",\"feedbackAmplitude\":9,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":13},{\"frequency\":\"5×\",\"amplitude\":7},{\"frequency\":\"7×\",\"amplitude\":5},{\"frequency\":\"~1×\",\"amplitude\":6}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"tremolo1\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"punch\",\"index\":3}]}},\n\t\t\t{name: \"feedback pad\",     midiProgram:  89, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":8}],\"effects\":[],\"transition\":\"normal\",\"fadeInSeconds\":0.0575,\"fadeOutTicks\":96,\"chord\":\"custom interval\",\"algorithm\":\"1 2 3 4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":8,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"~1×\",\"amplitude\":15}],\"envelopes\":[{\"target\":\"feedbackAmplitude\",\"envelope\":\"swell 2\"}]}},\n\t\t\t{name: \"supersaw pad\",     midiProgram:  93, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768}],\"effects\":[\"reverb\"],\"reverb\":100,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":24,\"pulseWidth\":50,\"dynamism\":100,\"spread\":58,\"shape\":0,\"envelopes\":[]}},\n\t\t])},\n\t\t{name: \"Drum Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: {\"type\":\"drumset\",\"effects\":\"reverb\",\"drums\":[{\"filterEnvelope\":\"twang 1\",\"spectrum\":[57,71,71,86,86,86,71,71,71,71,57,57,57,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29,29]},{\"filterEnvelope\":\"twang 1\",\"spectrum\":[0,0,0,100,71,71,57,86,57,57,57,71,43,43,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]},{\"filterEnvelope\":\"twang 1\",\"spectrum\":[0,0,0,0,100,57,43,43,29,57,43,29,71,43,43,43,43,57,43,43,43,43,43,43,43,43,29,43,43,43]},{\"filterEnvelope\":\"twang 1\",\"spectrum\":[0,0,0,0,0,71,57,43,43,43,57,57,43,29,57,43,43,43,29,43,57,43,43,43,43,43,43,29,43,43]},{\"filterEnvelope\":\"decay 2\",\"spectrum\":[0,14,29,43,86,71,29,43,43,43,43,29,71,29,71,29,43,43,43,43,57,43,43,57,43,43,43,57,57,57]},{\"filterEnvelope\":\"decay 1\",\"spectrum\":[0,0,14,14,14,14,29,29,29,43,43,43,57,57,57,71,71,71,71,71,71,71,71,57,57,57,57,43,43,43]},{\"filterEnvelope\":\"twang 3\",\"spectrum\":[43,43,43,71,29,29,43,43,43,29,43,43,43,29,29,43,43,29,29,29,57,14,57,43,43,57,43,43,57,57]},{\"filterEnvelope\":\"decay 3\",\"spectrum\":[29,43,43,43,43,29,29,43,29,29,43,29,14,29,43,29,43,29,57,29,43,57,43,71,43,71,57,57,71,71]},{\"filterEnvelope\":\"twang 3\",\"spectrum\":[43,29,29,43,29,29,29,57,29,29,29,57,43,43,29,29,57,43,43,43,71,43,43,71,57,71,71,71,71,71]},{\"filterEnvelope\":\"decay 3\",\"spectrum\":[57,57,57,43,57,57,43,43,57,43,43,43,71,57,43,57,86,71,57,86,71,57,86,100,71,86,86,86,86,86]},{\"filterEnvelope\":\"flare 1\",\"spectrum\":[0,0,14,14,14,14,29,29,29,43,43,43,57,57,71,71,86,86,100,100,100,100,100,100,100,100,86,57,29,0]},{\"filterEnvelope\":\"decay 2\",\"spectrum\":[14,14,14,14,29,14,14,29,14,43,14,43,57,86,57,57,100,57,43,43,57,100,57,43,29,14,0,0,0,0]}]}},\n\t\t\t{name: \"steel pan\",        midiProgram: 114, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":62.5,\"linearGain\":0.1768}],\"effects\":[\"note filter\",\"chorus\",\"reverb\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":0.25}],\"chorus\":67,\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"chord\":\"simultaneous\",\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"~1×\",\"amplitude\":14},{\"frequency\":\"7×\",\"amplitude\":3},{\"frequency\":\"3×\",\"amplitude\":5},{\"frequency\":\"4×\",\"amplitude\":4}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"decay 2\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"flare 1\",\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"flare 2\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 2\",\"index\":3}]}},\n\t\t\t{name: \"steel pan synth\",  midiProgram: 114, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"note filter\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":0.25}],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"chord\":\"simultaneous\",\"algorithm\":\"1 2 3←4\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":5,\"operators\":[{\"frequency\":\"~1×\",\"amplitude\":12},{\"frequency\":\"2×\",\"amplitude\":15},{\"frequency\":\"4×\",\"amplitude\":14},{\"frequency\":\"~1×\",\"amplitude\":3}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 1\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"note size\",\"index\":0},{\"target\":\"operatorAmplitude\",\"envelope\":\"note size\",\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"flare 1\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"flare 2\",\"index\":3},{\"target\":\"feedbackAmplitude\",\"envelope\":\"flare 1\"}]}},\n\t\t\t{name: \"timpani\",          midiProgram:  47, generalMidi: true, settings: {\"type\":\"spectrum\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":6727.17,\"linearGain\":5.6569}],\"effects\":[\"pitch shift\",\"note filter\",\"reverb\"],\"pitchShiftSemitones\":15,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.5}],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"spectrum\":[100,0,0,0,86,0,0,71,0,14,43,14,43,43,0,29,43,29,29,29,43,29,43,29,43,43,43,43,43,43],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"}]}},\n\t\t\t{name: \"dark strike\",      midiProgram:  47, settings: {\"type\":\"spectrum\",\"eqFilter\":[],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.7071}],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"spectrum\":[0,0,14,14,14,29,29,43,43,86,43,43,43,29,86,29,29,29,86,29,14,14,14,14,0,0,0,0,0,0],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 2\"}]}},\n\t\t\t{name: \"woodblock\",        midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":2828,\"filterResonance\":14,\"filterEnvelope\":\"twang 1\",\"spectrum\":[0,14,29,43,43,57,86,86,71,57,57,43,43,57,86,86,43,43,71,57,57,57,57,57,86,86,71,71,71,71]}},\n\t\t\t{name: \"taiko drum\",       midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":2828,\"filterResonance\":29,\"filterEnvelope\":\"twang 1\",\"spectrum\":[71,100,100,43,43,71,71,43,43,43,43,43,43,57,29,57,43,57,43,43,57,43,43,43,43,43,43,43,43,43]}},\n\t\t\t{name: \"melodic drum\",     midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":2828,\"filterResonance\":43,\"filterEnvelope\":\"twang 1\",\"spectrum\":[100,71,71,57,57,43,43,71,43,43,43,57,43,43,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29]}},\n\t\t\t{name: \"drum synth\",       midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":43,\"filterEnvelope\":\"decay 1\",\"spectrum\":[100,86,71,57,43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29]}},\n\t\t\t{name: \"tom-tom\",          midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":2000,\"filterResonance\":14,\"filterEnvelope\":\"twang 1\",\"spectrum\":[100,29,14,0,0,86,14,43,29,86,29,14,29,57,43,43,43,43,57,43,43,43,29,57,43,43,43,43,43,43]}},\n\t\t\t{name: \"metal pipe\",       midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":8000,\"filterResonance\":14,\"filterEnvelope\":\"twang 2\",\"spectrum\":[29,43,86,43,43,43,43,43,100,29,14,14,100,14,14,0,0,0,0,0,14,29,29,14,0,0,14,29,0,0]}},\n\t\t\t{name: \"synth kick\",       midiProgram:  47, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[],\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":-6,\"chord\":\"simultaneous\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"8×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":0},{\"frequency\":\"1×\",\"amplitude\":0},{\"frequency\":\"1×\",\"amplitude\":0}],\"envelopes\":[{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"}]}},\n\t\t])},\n\t\t{name: \"Novelty Presets\", presets: <DictionaryArray<Preset>> toNameMap([\n\t\t\t{name: \"guitar fret noise\",midiProgram: 120, generalMidi: true, settings: {\"type\":\"spectrum\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":1000,\"linearGain\":0.1768}],\"effects\":[\"note filter\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":5.6569}],\"transition\":\"normal\",\"fadeInSeconds\":0.0125,\"fadeOutTicks\":-3,\"chord\":\"simultaneous\",\"spectrum\":[0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,29,14,0,0,43,0,43,0,71,43,0,57,0],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"flare 1\"},{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"}]}},\n\t\t\t{name: \"fifth saw lead\",   midiProgram:  86, generalMidi: true, midiSubharmonicOctaves: 1, settings: {\"type\":\"chip\",\"eqFilter\":[],\"effects\":[\"note filter\",\"chorus\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1.4142}],\"chorus\":67,\"transition\":\"normal\",\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"chord\":\"simultaneous\",\"wave\":\"sawtooth\",\"unison\":\"fifth\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"}]}},\n\t\t\t{name: \"fifth swell\",      midiProgram:  86, midiSubharmonicOctaves: 1, settings: {\"type\":\"chip\",\"eqFilter\":[],\"effects\":[\"note filter\",\"chorus\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2000,\"linearGain\":2}],\"chorus\":100,\"transition\":\"normal\",\"fadeInSeconds\":0.0125,\"fadeOutTicks\":72,\"chord\":\"simultaneous\",\"wave\":\"sawtooth\",\"unison\":\"fifth\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 3\"}]}},\n\t\t\t{name: \"soundtrack\",       midiProgram:  97, generalMidi: true, settings: {\"type\":\"chip\",\"eqFilter\":[],\"effects\":[\"note filter\",\"chorus\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5}],\"chorus\":67,\"transition\":\"normal\",\"fadeInSeconds\":0.0413,\"fadeOutTicks\":72,\"chord\":\"simultaneous\",\"wave\":\"sawtooth\",\"unison\":\"fifth\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"flare 3\"}]}},\n\t\t\t{name: \"reverse cymbal\",   midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: {\"type\":\"spectrum\",\"effects\":\"none\",\"transition\":\"soft\",\"chord\":\"harmony\",\"filterCutoffHz\":4000,\"filterResonance\":14,\"filterEnvelope\":\"swell 3\",\"spectrum\":[29,57,57,29,57,57,29,29,43,29,29,43,29,29,57,57,14,57,14,57,71,71,57,86,57,100,86,86,86,86]}},\n\t\t\t{name: \"seashore\",         midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: {\"type\":\"spectrum\",\"transition\":\"soft fade\",\"effects\":\"reverb\",\"chord\":\"harmony\",\"filterCutoffHz\":2828,\"filterResonance\":0,\"filterEnvelope\":\"swell 3\",\"spectrum\":[14,14,29,29,43,43,43,57,57,57,57,57,57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,57]}},\n\t\t\t{name: \"bird tweet\",       midiProgram: 123, generalMidi: true, settings: {\"type\":\"harmonics\",\"eqFilter\":[],\"effects\":[\"chord type\",\"vibrato\",\"reverb\"],\"chord\":\"strum\",\"vibrato\":\"heavy\",\"reverb\":67,\"fadeInSeconds\":0.0575,\"fadeOutTicks\":-6,\"harmonics\":[0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"unison\":\"hum\",\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"decay 1\"}]}},\n\t\t\t{name: \"telephone ring\",   midiProgram: 124, generalMidi: true, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"note filter\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":1}],\"transition\":\"normal\",\"fadeInSeconds\":0.0125,\"fadeOutTicks\":-3,\"chord\":\"arpeggio\",\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"2×\",\"amplitude\":12},{\"frequency\":\"1×\",\"amplitude\":4},{\"frequency\":\"20×\",\"amplitude\":1},{\"frequency\":\"1×\",\"amplitude\":0}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"tremolo4\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"tremolo1\",\"index\":1}]}},\n\t\t\t{name: \"helicopter\",       midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"seamless\",\"chord\":\"arpeggio\",\"filterCutoffHz\":1414,\"filterResonance\":14,\"filterEnvelope\":\"tremolo4\",\"spectrum\":[14,43,43,57,57,57,71,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,71,71,71,57,57]}},\n\t\t\t{name: \"applause\",         midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"soft fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":14,\"filterEnvelope\":\"swell 3\",\"spectrum\":[14,14,29,29,29,43,43,57,71,71,86,86,86,71,71,57,57,57,71,86,86,86,86,86,71,71,57,57,57,57]}},\n\t\t\t{name: \"gunshot\",          midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"strum\",\"filterCutoffHz\":1414,\"filterResonance\":29,\"filterEnvelope\":\"twang 1\",\"spectrum\":[14,29,43,43,57,57,57,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,57,57,57,57,43]}},\n\t\t\t{name: \"scoot\",            midiProgram:  92, settings: {\"type\":\"chip\",\"eqFilter\":[],\"effects\":[\"note filter\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":707.11,\"linearGain\":4}],\"transition\":\"normal\",\"fadeInSeconds\":0.0125,\"fadeOutTicks\":-3,\"chord\":\"simultaneous\",\"wave\":\"double saw\",\"unison\":\"shimmer\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"flare 1\"}]}},\n\t\t\t{name: \"buzz saw\",         midiProgram:  30, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.5}],\"effects\":[],\"transition\":\"normal\",\"fadeInSeconds\":0.0263,\"fadeOutTicks\":-3,\"chord\":\"custom interval\",\"algorithm\":\"1←2←3←4\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":4,\"operators\":[{\"frequency\":\"5×\",\"amplitude\":13},{\"frequency\":\"1×\",\"amplitude\":10},{\"frequency\":\"~1×\",\"amplitude\":6},{\"frequency\":\"11×\",\"amplitude\":12}],\"envelopes\":[]}},\n\t\t\t{name: \"mosquito\",         midiProgram:  93, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":2}],\"effects\":[\"vibrato\"],\"vibrato\":\"shaky\",\"transition\":\"normal\",\"fadeInSeconds\":0.0575,\"fadeOutTicks\":-6,\"chord\":\"simultaneous\",\"pulseWidth\":4.41942,\"envelopes\":[{\"target\":\"pulseWidth\",\"envelope\":\"tremolo6\"}]}},\n\t\t\t{name: \"breathing\",        midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: {\"type\":\"spectrum\",\"effects\":\"reverb\",\"transition\":\"hard fade\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":14,\"filterEnvelope\":\"swell 2\",\"spectrum\":[14,14,14,29,29,29,29,29,43,29,29,43,43,43,29,29,71,43,86,86,57,100,86,86,86,86,71,86,71,57]}},\n\t\t\t{name: \"klaxon synth\",     midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: {\"type\":\"noise\",\"effects\":\"reverb\",\"transition\":\"slide\",\"chord\":\"harmony\",\"filterCutoffHz\":2000,\"filterResonance\":86,\"filterEnvelope\":\"steady\",\"wave\":\"buzz\"}},\n\t\t\t{name: \"theremin\",         midiProgram:  40, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.7071}],\"effects\":[\"vibrato\",\"reverb\"],\"vibrato\":\"heavy\",\"reverb\":33,\"transition\":\"slide in pattern\",\"fadeInSeconds\":0.0263,\"fadeOutTicks\":-6,\"chord\":\"simultaneous\",\"harmonics\":[100,71,57,43,29,29,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"unison\":\"none\",\"envelopes\":[]}},\n\t\t\t{name: \"sonar ping\",       midiProgram: 121, settings: {\"type\":\"spectrum\",\"eqFilter\":[],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1681.79,\"linearGain\":0.5}],\"reverb\":33,\"transition\":\"normal\",\"fadeInSeconds\":0.0125,\"fadeOutTicks\":72,\"chord\":\"simultaneous\",\"spectrum\":[100,43,29,29,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 2\"}]}},\n\t\t])},\n\t]);\n\t\n\tpublic static valueToPreset(presetValue: number): Preset | null {\n\t\tconst categoryIndex: number = presetValue >> 6;\n\t\tconst presetIndex: number = presetValue & 0x3F;\n\t\treturn EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\n\t}\n\t\n\tpublic static midiProgramToPresetValue(program: number): number | null {\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\n\t\t\t\tif (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tpublic static nameToPresetValue(presetName: string): number | null {\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\n\t\t\t\tif (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {BeepBoxOption, DictionaryArray, toNameMap} from \"../synth/SynthConfig\";\nimport {Song} from \"../synth/synth\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\n\nexport interface ChannelColors extends BeepBoxOption {\n\treadonly secondaryChannel: string;\n\treadonly primaryChannel:   string;\n\treadonly secondaryNote: string;\n\treadonly primaryNote: string;\n}\n\nexport class ColorConfig {\n\tpublic static readonly themes: {[name: string]: string} = {\n\t\t\"dark classic\": `\n\t\t:root {\n\t\t\t--page-margin: #97a277;\n\t\t\t--editor-background: black;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: rgba(255,255,255,255.5);\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #888;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(55, 85, 0, 0.99);\n\t\t\t--box-selection-fill: rgba(225,255,255,0.1);\n\t\t\t--loop-accent: #670;\n\t\t\t--link-accent: #8b0;\n\t\t\t--ui-widget-background: #131313;\n\t\t\t--ui-widget-focus: #111;\n\t\t\t--pitch-background: #131313;\n\t\t\t--tonic: #0f2949;\n\t\t\t--fifth-note: #44220f;\n\t\t\t--white-piano-key: #111111;\n\t\t\t--black-piano-key: #999999;\n\t\t\t--white-piano-key-text: #fff;\n\t\t\t--black-piano-key-text: #000;\n\n\t\t\t--pitch1-secondary-channel: #932612;\n\t\t\t--pitch1-primary-channel:   #ff5f42;\n\t\t\t--pitch1-secondary-note:    #cb3d23;\n\t\t\t--pitch1-primary-note:      #ff8a75;\n\n\t\t\t--pitch2-secondary-channel: #1c36be;\n\t\t\t--pitch2-primary-channel:   #4b68ff;\n\t\t\t--pitch2-secondary-note:    #2e49d7;\n\t\t\t--pitch2-primary-note:      #7c91ff;\n\n\t\t\t--pitch3-secondary-channel: #00629e;\n\t\t\t--pitch3-primary-channel:   #1eb1ff;\n\t\t\t--pitch3-secondary-note:    #0982c3;\n\t\t\t--pitch3-primary-note:      #49bfff;\n\n\t\t\t--pitch4-secondary-channel: #b41db4;\n\t\t\t--pitch4-primary-channel:   #ff57ff;\n\t\t\t--pitch4-secondary-note:    #d237d2;\n\t\t\t--pitch4-primary-note:      #ff7fff;\n\n\t\t\t--pitch5-secondary-channel: #006f00;\n\t\t\t--pitch5-primary-channel:   #1ed120;\n\t\t\t--pitch5-secondary-note:    #139113;\n\t\t\t--pitch5-primary-note:      #59ff5a;\n\n\t\t\t--pitch6-secondary-channel: #4a4a01;\n\t\t\t--pitch6-primary-channel:   #969602;\n\t\t\t--pitch6-secondary-note:    #6c6c01;\n\t\t\t--pitch6-primary-note:      #b5b528;\n\n\t\t\t--pitch7-secondary-channel: #3d27b7;\n\t\t\t--pitch7-primary-channel:   #7157ff;\n\t\t\t--pitch7-secondary-note:    #4f37d2;\n\t\t\t--pitch7-primary-note:      #937fff;\n\n\t\t\t--pitch8-secondary-channel: #006f5b;\n\t\t\t--pitch8-primary-channel:   #1ed1b2;\n\t\t\t--pitch8-secondary-note:    #13917a;\n\t\t\t--pitch8-primary-note:      #59ffe2;\n\n\t\t\t--pitch9-secondary-channel: #be1c4a;\n\t\t\t--pitch9-primary-channel:   #ff4b7e;\n\t\t\t--pitch9-secondary-note:    #d72e5e;\n\t\t\t--pitch9-primary-note:      #ff7ca1;\n\n\t\t\t--pitch10-secondary-channel:#358800;\n\t\t\t--pitch10-primary-channel:  #69f600;\n\t\t\t--pitch10-secondary-note:   #4ab000;\n\t\t\t--pitch10-primary-note:     #7bff1c;\n\n\t\t\t--noise1-secondary-channel: #3e3e3e;\n\t\t\t--noise1-primary-channel:   #767676;\n\t\t\t--noise1-secondary-note:    #525252;\n\t\t\t--noise1-primary-note:      #939393;\n\n\t\t\t--noise2-secondary-channel: #174473;\n\t\t\t--noise2-primary-channel:   #4282c5;\n\t\t\t--noise2-secondary-note:    #2e5c8b;\n\t\t\t--noise2-primary-note:      #7c9cbd;\n\n\t\t\t--noise3-secondary-channel: #643b14;\n\t\t\t--noise3-primary-channel:   #bb7e41;\n\t\t\t--noise3-secondary-note:    #83582c;\n\t\t\t--noise3-primary-note:      #b8997a;\n\n\t\t\t--noise4-secondary-channel: #3a5a1f;\n\t\t\t--noise4-primary-channel:   #7aac51;\n\t\t\t--noise4-secondary-note:    #4d6f33;\n\t\t\t--noise4-primary-note:      #97b082;\n\n\t\t\t--noise5-secondary-channel: #47316c;\n\t\t\t--noise5-primary-channel:   #87A74F;\n\t\t\t--noise5-secondary-note:    #7858b0;\n\t\t\t--noise5-primary-note:      #9787b3;\n\t\t}\n\t\t\n\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t}\n\t\t\n\t\ta.tip {\n\t\t\tdisplay:none;\n\t\t}\n\n\t\t`,\n\t\t\"light classic\": `\n\t\t:root {\n\t\t\t--page-margin: white;\n\t\t\t--editor-background: white;\n\t\t\t--hover-preview: black;\n\t\t\t--playhead: black;\n\t\t\t--primary-text: black;\n\t\t\t--secondary-text: #666666;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: rgba(136, 187, 0,0.99);\n\t\t\t--box-selection-fill: rgba(0,0,0,0.2);\n\t\t\t--loop-accent: #88bb00;\n\t\t\t--link-accent: #667700;\n\t\t\t--ui-widget-background: #bbbbbb;\n\t\t\t--ui-widget-focus: #888888;\n\t\t\t--pitch-background: #bbbbbb;\n\t\t\t--tonic: #7799bb;\n\t\t\t--fifth-note: #bb9977;\n\t\t\t--white-piano-key: #444444;\n\t\t\t--black-piano-key: #bbbbbb;\n\t\t\t--white-piano-key-text: #fff;\n\t\t\t--black-piano-key-text: #000;\n\n\t\t\t--pitch1-secondary-channel: #ff665e;\n\t\t\t--pitch1-primary-channel:   #da0c00;\n\t\t\t--pitch1-secondary-note:    #ff4238;\n\t\t\t--pitch1-primary-note:      #6d0600;\n\n\t\t\t--pitch2-secondary-channel: #5e5eff;\n\t\t\t--pitch2-primary-channel:   #0000da;\n\t\t\t--pitch2-secondary-note:   \t#3838ff;\n\t\t\t--pitch2-primary-note:      #00006d;\n\n\t\t\t--pitch3-secondary-channel: #38afff;\n\t\t\t--pitch3-primary-channel:   #0068ad;\n\t\t\t--pitch3-secondary-note:    #0088e3;\n\t\t\t--pitch3-primary-note:      #003254;\n\n\t\t\t--pitch4-secondary-channel: #ff5eff;\n\t\t\t--pitch4-primary-channel:   #af00af;\n\t\t\t--pitch4-secondary-note:    #ff38ff;\n\t\t\t--pitch4-primary-note:      #5f005f;\n\n\t\t\t--pitch5-secondary-channel: #2fdf2f;\n\t\t\t--pitch5-primary-channel:   #006f00;\n\t\t\t--pitch5-secondary-note:    #1fbf1f;\n\t\t\t--pitch5-primary-note:      #003f00;\n\n\t\t\t--pitch6-secondary-channel: #88884f;\n\t\t\t--pitch6-primary-channel:   #5f5f00;\n\t\t\t--pitch6-secondary-note:    #77772f;\n\t\t\t--pitch6-primary-note:      #2f2f00;\n\n\t\t\t--pitch7-secondary-channel: #755eff;\n\t\t\t--pitch7-primary-channel:   #2100da;\n\t\t\t--pitch7-secondary-note:    #5538ff;\n\t\t\t--pitch7-primary-note:      #19006d;\n\n\t\t\t--pitch8-secondary-channel: #20ffe6;\n\t\t\t--pitch8-primary-channel:   #00675b;\n\t\t\t--pitch8-secondary-note:    #00b19c;\n\t\t\t--pitch8-primary-note:      #004d44;\n\n\t\t\t--pitch9-secondary-channel: #ff5e8f;\n\t\t\t--pitch9-primary-channel:   #af0036;\n\t\t\t--pitch9-secondary-note:    #ff3875;\n\t\t\t--pitch9-primary-note:      #7c0026;\n\n\t\t\t--pitch10-secondary-channel:#5ee000;\n\t\t\t--pitch10-primary-channel:  #317400;\n\t\t\t--pitch10-secondary-note:   #48a800;\n\t\t\t--pitch10-primary-note:     #205300;\n\n\t\t\t--noise1-secondary-channel: #909090;\n\t\t\t--noise1-primary-channel:   #555555;\n\t\t\t--noise1-secondary-note:    #585858;\n\t\t\t--noise1-primary-note:      #1f1f1f;\n\n\t\t\t--noise2-secondary-channel: #6699cc;\n\t\t\t--noise2-primary-channel:   #225588;\n\t\t\t--noise2-secondary-note:    #336699;\n\t\t\t--noise2-primary-note:      #0f2f44;\n\n\t\t\t--noise3-secondary-channel: #b59270;\n\t\t\t--noise3-primary-channel:   #885522;\n\t\t\t--noise3-secondary-note:    #906030;\n\t\t\t--noise3-primary-note:      #442800;\n\n\t\t\t--noise4-secondary-channel: #85b065;\n\t\t\t--noise4-primary-channel:   #507d2d;\n\t\t\t--noise4-secondary-note:    #618e3e;\n\t\t\t--noise4-primary-note:      #2b3e15;\n\n\t\t\t--noise5-secondary-channel: #9f87c8;\n\t\t\t--noise5-primary-channel:   #5d4488;\n\t\t\t--noise5-secondary-note:    #6e5599;\n\t\t\t--noise5-primary-note:      #3a1d4d;\n\t\t}\n\n\t\ta.tip {\n\t\t\tdisplay:none;\n\t\t}\n\t\t`,\n\t};\n\t\n\tpublic static readonly pageMargin: string = \"var(--page-margin)\";\n\tpublic static readonly editorBackground: string = \"var(--editor-background)\";\n\tpublic static readonly hoverPreview: string = \"var(--hover-preview)\";\n\tpublic static readonly playhead: string = \"var(--playhead)\";\n\tpublic static readonly primaryText: string = \"var(--primary-text)\";\n\tpublic static readonly secondaryText: string = \"var(--secondary-text)\";\n\tpublic static readonly invertedText: string = \"var(--inverted-text)\";\n\tpublic static readonly textSelection: string = \"var(--text-selection)\";\n\tpublic static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\n\tpublic static readonly loopAccent: string = \"var(--loop-accent)\";\n\tpublic static readonly linkAccent: string = \"var(--link-accent)\";\n\tpublic static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\n\tpublic static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\n\tpublic static readonly pitchBackground: string = \"var(--pitch-background)\";\n\tpublic static readonly tonic: string = \"var(--tonic)\";\n\tpublic static readonly fifthNote: string = \"var(--fifth-note)\";\n\tpublic static readonly whitePianoKey: string = \"var(--white-piano-key)\";\n\tpublic static readonly blackPianoKey: string = \"var(--black-piano-key)\";\n\tpublic static readonly whitePianoKeyText: string = \"var(--white-piano-key-text)\";\n\tpublic static readonly blackPianoKeyText: string = \"var(--black-piano-key-text)\";\n\t\n\tpublic static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\n\t\t{\n\t\t\tname: \"pitch1\", // cyan\n\t\t\tsecondaryChannel: \"var(--pitch1-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--pitch1-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--pitch1-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--pitch1-primary-note)\",\n\t\t}, {\n\t\t\tname: \"pitch2\", // yellow\n\t\t\tsecondaryChannel: \"var(--pitch2-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--pitch2-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--pitch2-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--pitch2-primary-note)\",\n\t\t}, {\n\t\t\tname: \"pitch3\", // orange\n\t\t\tsecondaryChannel: \"var(--pitch3-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--pitch3-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--pitch3-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--pitch3-primary-note)\",\n\t\t}, {\n\t\t\tname: \"pitch4\", // green\n\t\t\tsecondaryChannel: \"var(--pitch4-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--pitch4-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--pitch4-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--pitch4-primary-note)\",\n\t\t}, {\n\t\t\tname: \"pitch5\", // magenta\n\t\t\tsecondaryChannel: \"var(--pitch5-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--pitch5-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--pitch5-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--pitch5-primary-note)\",\n\t\t}, {\n\t\t\tname: \"pitch6\", // blue\n\t\t\tsecondaryChannel: \"var(--pitch6-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--pitch6-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--pitch6-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--pitch6-primary-note)\",\n\t\t}, {\n\t\t\tname: \"pitch7\", // olive\n\t\t\tsecondaryChannel: \"var(--pitch7-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--pitch7-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--pitch7-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--pitch7-primary-note)\",\n\t\t}, {\n\t\t\tname: \"pitch8\", // red\n\t\t\tsecondaryChannel: \"var(--pitch8-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--pitch8-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--pitch8-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--pitch8-primary-note)\",\n\t\t}, {\n\t\t\tname: \"pitch9\", // teal\n\t\t\tsecondaryChannel: \"var(--pitch9-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--pitch9-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--pitch9-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--pitch9-primary-note)\",\n\t\t}, {\n\t\t\tname: \"pitch10\", // purple\n\t\t\tsecondaryChannel: \"var(--pitch10-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--pitch10-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--pitch10-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--pitch10-primary-note)\",\n\t\t},\n\t]);\n\tpublic static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\n\t\t{\n\t\t\tname: \"noise1\", // gray\n\t\t\tsecondaryChannel: \"var(--noise1-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--noise1-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--noise1-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--noise1-primary-note)\",\n\t\t}, {\n\t\t\tname: \"noise2\", // brown\n\t\t\tsecondaryChannel: \"var(--noise2-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--noise2-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--noise2-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--noise2-primary-note)\",\n\t\t}, {\n\t\t\tname: \"noise3\", // azure\n\t\t\tsecondaryChannel: \"var(--noise3-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--noise3-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--noise3-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--noise3-primary-note)\",\n\t\t}, {\n\t\t\tname: \"noise4\", // purple\n\t\t\tsecondaryChannel: \"var(--noise4-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--noise4-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--noise4-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--noise4-primary-note)\",\n\t\t}, {\n\t\t\tname: \"noise5\", // sage\n\t\t\tsecondaryChannel: \"var(--noise5-secondary-channel)\",\n\t\t\tprimaryChannel:   \"var(--noise5-primary-channel)\",\n\t\t\tsecondaryNote:    \"var(--noise5-secondary-note)\",\n\t\t\tprimaryNote:      \"var(--noise5-primary-note)\",\n\t\t},\n\t]);\n\t\n\tpublic static getChannelColor(song: Song, channel: number): ChannelColors {\n\t\treturn channel < song.pitchChannelCount\n\t\t\t? ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length]\n\t\t\t: ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length];\n\t}\n\t\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({type: \"text/css\"}));\n\t\n\tpublic static setTheme(name: string): void {\n\t\tlet theme: string = this.themes[name];\n\t\tif (theme == undefined) theme = this.themes[\"dark classic\"];\n\t\tthis._styleElement.textContent = theme;\n\t\t\n\t\tconst themeColor = <HTMLMetaElement> document.querySelector(\"meta[name='theme-color']\");\n\t\tif (themeColor != null) {\n\t\t\tthemeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {ColorConfig} from \"./ColorConfig\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\n\n\n// Determine if the user's browser/OS adds scrollbars that occupy space.\n// See: https://www.filamentgroup.com/lab/scrollbars/\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({style: \"width:30px; height:30px; overflow: auto;\"}, \n\tHTML.div({style: \"width:100%;height:40px\"}),\n));\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\n}\ndocument.body.removeChild(scrollBarTest);\n\n\ndocument.head.appendChild(HTML.style({type: \"text/css\"}, `\n\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\n:root {\n\t--button-size: 26px;\n\t--settings-area-width: 192px;\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -5 -8 L -5 8 L 8 0 z\" fill=\"gray\"/></svg>');\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-5\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/><rect x=\"3\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/></svg>');\n\t--record-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"gray\"/></svg>');\n\t--stop-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"12\" height=\"12\" fill=\"gray\"/></svg>');\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\n\t\t\t</g> \\\n\t\t</svg>');\n\t--instrument-copy-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\" fill=\"currentColor\"></path></svg>');\n\t--instrument-paste-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\" stroke=\"currentColor\" fill=\"none\"></path><path d=\"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\" fill=\"currentColor\"></path></svg>');\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -7.07 -5.66 L -5.66 -7.07 L 0 -1.4 L 5.66 -7.07 L 7.07 -5.66 L 1.4 0 L 7.07 5.66 L 5.66 7.07 L 0 1.4 L -5.66 7.07 L -7.07 5.66 L -1.4 0 z\"/></svg>');\n\t--add-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -1 L -1 -1 L -1 -8  L 1 -8 L 1 -1 L 8 -1 L 8 1 L 1 1 L 1 8 L -1 8 L -1 1 L -8 1 z\"/></svg>');\n\t--zoom-in-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -1 -4 L -1 2 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\n\t--zoom-out-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\n\t\t\t<defs> \\\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t</radialGradient> \\\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t\t<radialGradient id=\"membrane\"> \\\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\n\t\t\t\t</radialGradient> \\\n\t\t\t</defs> \\\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\n\t\t</svg>');\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\n\t\t\t<defs> \\\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t</defs> \\\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\n\t\t</svg>');\n}\n\n\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\n\tscrollbar-width: thin;\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\n}\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\n\twidth: 12px;\n}\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\n\tbackground: ${ColorConfig.editorBackground};\n}\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\n\tborder: 3px solid ${ColorConfig.editorBackground};\n}\n\n\n.beepboxEditor {\n\tdisplay: grid;\n    grid-template-columns: max-content minmax(0, 1fr);\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); */\n    grid-template-areas: \"settings-area pattern-area \" \"settings-area track-area\";\n\tgrid-column-gap: 6px;\n\tgrid-row-gap: 6px;\n\tposition: relative;\n\ttouch-action: manipulation;\n\tcursor: default;\n\tfont-size: 13px;\n\toverflow: hidden;\n\tcolor: ${ColorConfig.primaryText};\n\tbackground: ${ColorConfig.editorBackground};\n}\n\n.beepboxEditor .noSelection {\n\t-webkit-touch-callout: none;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n}\n\n.beepboxEditor div {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.beepboxEditor .pattern-area {\n\tgrid-area: pattern-area;\n\theight: 481px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tposition: relative;\n}\n\n.beepboxEditor .track-area {\n\tgrid-area: track-area;\n}\n\n.beepboxEditor .loopEditor {\n\theight: 20px;\n\tposition: sticky;\n\tbottom: 0;\n\tpadding: 5px 0;\n\tbackground-color: ${ColorConfig.editorBackground};\n}\n\n.beepboxEditor .settings-area {\n\tgrid-area: settings-area;\n\tdisplay: grid;\n    grid-template-columns: auto;\n    grid-template-rows: min-content min-content min-content min-content min-content;\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\n\tgrid-column-gap: 6px;\n}\n\n.beepboxEditor .version-area{ grid-area: version-area; }\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\n.beepboxEditor .menu-area{ grid-area: menu-area; }\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\n\n.beepboxEditor .tip {\n\tcursor: help;\n\tcolor: ${ColorConfig.secondaryText};\n\ttext-decoration: none;\n}\n\n.beepboxEditor .tip:hover {\n\tcolor: ${ColorConfig.linkAccent};\n\ttext-decoration: underline;\n}\n.beepboxEditor .tip:active {\n\tcolor: ${ColorConfig.primaryText};\n}\n\n.beepboxEditor .volume-speaker {\n\tflex-shrink: 0;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: ${ColorConfig.secondaryText};\n\t-webkit-mask-image: var(--volume-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--volume-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .drum-button {\n\tflex: 1;\n\tbackground-color: transparent;\n\tbackground-image: var(--drum-symbol);\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n}\n\n.beepboxEditor .piano-button {\n\tflex: 1;\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n}\n.beepboxEditor .piano-button::before {\n\tcontent: \"\";\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\tpointer-events: none;\n\tbackground-image: var(--piano-key-symbol);\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tbackground-size: 100% 115.38%;\n}\n.beepboxEditor .piano-button.disabled::after {\n\tcontent: \"\";\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\twidth: 70%;\n\theight: 100%;\n\tpointer-events: none;\n\tbackground: ${ColorConfig.editorBackground};\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .piano-button.pressed, .beepboxEditor .drum-button.pressed {\n\tfilter: brightness(0.5);\n}\n\n.beepboxEditor .customize-instrument {\n\tmargin: 2px 0;\n}\n.beepboxEditor .customize-instrument::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--customize-dial-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--customize-dial-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .instrumentCopyPasteRow {\n\tgap: 2px;\n}\n\n.beepboxEditor .copy-instrument {\n\tmargin: 2px 0;\n\tflex-grow: 1;\n}\n.beepboxEditor .copy-instrument::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--instrument-copy-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--instrument-copy-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .paste-instrument {\n\tmargin: 2px 0;\n\tflex-grow: 1;\n}\n.beepboxEditor .paste-instrument::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--instrument-paste-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--instrument-paste-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .envelopeEditor {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .envelope-row {\n\tdisplay: flex;\n\tmargin: 2px 0;\n\tgap: 2px;\n}\n\n.beepboxEditor .add-envelope {\n\twidth: var(--button-size);\n}\n.beepboxEditor .add-envelope::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--add-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--add-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n.beepboxEditor .add-envelope:disabled {\n\tvisibility: hidden;\n}\n\n.beepboxEditor .effects-menu {\n\twidth: var(--button-size);\n\tposition: relative;\n}\n.beepboxEditor .effects-menu::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--menu-down-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--menu-down-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .zoomInButton, .beepboxEditor .zoomOutButton {\n\twidth: var(--button-size);\n\tposition: absolute;\n\tright: 10px;\n}\n.beepboxEditor .zoomInButton {\n\ttop: 10px;\n}\n.beepboxEditor .zoomOutButton {\n\ttop: 50px;\n}\n.beepboxEditor .zoomInButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--zoom-in-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--zoom-in-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n.beepboxEditor .zoomOutButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--zoom-out-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--zoom-out-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .delete-envelope {\n\twidth: var(--button-size);\n\tflex-shrink: 0;\n\tflex-grow: 0;\n}\n.beepboxEditor .delete-envelope::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--close-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--close-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n.beepboxEditor .delete-envelope:disabled {\n\tvisibility: hidden;\n}\n\n.beepboxEditor .menu.file::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--file-page-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--file-page-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .menu.edit::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--edit-pencil-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--edit-pencil-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .menu.preferences::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--preferences-gear-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--preferences-gear-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .mute-button::before {\n\tcontent: \"\";\n\tpointer-events: none;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: ${ColorConfig.primaryText};\n\tdisplay: inline-block;\n\t-webkit-mask-image: var(--unmuted-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\t-webkit-mask-size: contain;\n\tmask-image: var(--unmuted-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\tmask-size: contain;\n}\n\n.beepboxEditor .mute-button.muted::before {\n\tbackground: ${ColorConfig.editorBackground};\n\t-webkit-mask-image: var(--muted-symbol);\n\tmask-image: var(--muted-symbol);\n}\n\n.beepboxEditor .promptContainer {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tz-index: 100;\n}\n\n.beepboxEditor .promptContainer::before {\n\tcontent: \"\";\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: ${ColorConfig.editorBackground};\n\topacity: 0.5;\n\tdisplay: flex;\n}\n\n.beepboxEditor .prompt {\n\tmargin: auto;\n\ttext-align: center;\n\tbackground: ${ColorConfig.editorBackground};\n\tborder-radius: 15px;\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\n\tcolor: ${ColorConfig.primaryText};\n\tpadding: 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\n}\n\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\n\tmargin-top: 1.5em;\n}\n\n.beepboxEditor .prompt h2 {\n\tfont-size: 2em;\n\tmargin: 0 16px;\n\tfont-weight: normal;\n}\n\n.beepboxEditor .prompt p {\n\ttext-align: left;\n\tmargin: 1em 0;\n}\n\n.beepboxEditor .prompt label {\n\tcursor: pointer;\n}\n\n.beepboxEditor .prompt.recordingSetupPrompt p {\n\tmargin-top: 0.75em;\n\tmargin-bottom: 0;\n}\n\n.beepboxEditor .prompt.recordingSetupPrompt > label:not(:first-child):not(.cancelButton) {\n\tmargin: 2px 0;\n}\n\n.beepboxEditor .layout-option {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\tcursor: pointer;\n\tcolor: ${ColorConfig.secondaryText};\n}\n\n.beepboxEditor .layout-option input {\n\tdisplay: none;\n}\n\n.beepboxEditor .layout-option input:checked ~ * {\n\tcolor: ${ColorConfig.primaryText};\n}\n\n.beepboxEditor .selectContainer {\n\tposition: relative;\n}\n.beepboxEditor .selectContainer:not(.menu)::after {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tright: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: 14px;\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--select-arrows-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--select-arrows-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor .selectContainer.menu::after {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tright: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--menu-down-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--menu-down-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor select {\n\tmargin: 0;\n\tpadding: 0 4px;\n\tdisplay: block;\n\theight: var(--button-size);\n\tborder: none;\n\tborder-radius: 5px;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n\tcolor: inherit;\n\tfont-size: inherit;\n\tcursor: pointer;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\n\t-webkit-appearance:none;\n\t-moz-appearance: none;\n\tappearance: none;\n}\n.beepboxEditor .menu select {\n\tpadding: 0 var(--button-size);\n}\n.beepboxEditor select:focus {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n\toutline: none;\n}\n.beepboxEditor .menu select {\n\ttext-align: center;\n\ttext-align-last: center;\n}\n.beepboxEditor .settings-area select {\n       width: 100%;\n}\n\n/* This makes it look better in firefox on my computer... What about others?\n@-moz-document url-prefix() {\n\t.beepboxEditor select { padding: 0 2px; }\n}\n*/\n.beepboxEditor button {\n\tmargin: 0;\n\tposition: relative;\n\theight: var(--button-size);\n\tborder: none;\n\tborder-radius: 5px;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n\tcolor: inherit;\n\tfont-size: inherit;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tcursor: pointer;\n}\n.beepboxEditor button:focus {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n\toutline: none;\n}\n\n.beepboxEditor button.cancelButton {\n\tfloat: right;\n\twidth: var(--button-size);\n\tposition: absolute;\n\ttop: 8px;\n\tright: 8px;\n}\n\n.beepboxEditor .playback-bar-controls {\n\tdisplay: grid;\n\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);\n\tgrid-template-rows: min-content;\n\tgrid-column-gap: 4px;\n}\n\n.beepboxEditor button.playButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--play-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--play-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor button.pauseButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--pause-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--pause-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor button.recordButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--record-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--record-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor button.stopButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--stop-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--stop-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.prevBarButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--prev-bar-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--prev-bar-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.nextBarButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--next-bar-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--next-bar-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.recordButton, .beepboxEditor button.stopButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\n\tpadding-left: var(--button-size);\n}\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.recordButton {\n\tgrid-column-start: 1;\n\tgrid-column-end: 3;\n}\n.beepboxEditor button.stopButton {\n\tgrid-column-start: 1;\n\tgrid-column-end: 5;\n}\n.beepboxEditor button.prevBarButton {\n\tgrid-column-start: 3;\n\tgrid-column-end: 4;\n}\n.beepboxEditor button.nextBarButton {\n\tgrid-column-start: 4;\n\tgrid-column-end: 5;\n}\n\n.beepboxEditor button.playButton.shrunk, .beepboxEditor button.recordButton.shrunk {\n\tpadding: 0;\n}\n.beepboxEditor button.playButton.shrunk::before, .beepboxEditor button.recordButton.shrunk::before {\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n}\n.beepboxEditor button.playButton.shrunk span, .beepboxEditor button.recordButton.shrunk span {\n\tdisplay: none;\n}\n.beepboxEditor button.playButton.shrunk {\n\tgrid-column-start: 1;\n\tgrid-column-end: 2;\n}\n.beepboxEditor button.recordButton.shrunk {\n\tgrid-column-start: 2;\n\tgrid-column-end: 3;\n}\n\n.beepboxEditor button.cancelButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--close-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--close-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor button.okayButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--checkmark-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--checkmark-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.exportButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--export-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--export-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .instrument-bar {\n\tdisplay: flex;\n\tgap: 2px;\n}\n\n.beepboxEditor .instrument-bar button {\n\tflex-grow: 1;\n\tmin-width: 0;\n\tpadding: 0;\n\tflex-basis: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tcolor: var(--text-color-lit);\n}\n\n.beepboxEditor .instrument-bar .remove-instrument, .beepboxEditor .instrument-bar .add-instrument {\n\tmax-width: var(--button-size);\n}\n\n.beepboxEditor .instrument-bar > :not(:first-child) {\n\tborder-top-left-radius: 0;\n\tborder-bottom-left-radius: 0;\n}\n\n.beepboxEditor .instrument-bar > :not(.last-button) {\n\tborder-top-right-radius: 0;\n\tborder-bottom-right-radius: 0;\n}\n\n.beepboxEditor .instrument-bar .selected-instrument {\n\tbackground: var(--background-color-lit);\n\tcolor: ${ColorConfig.invertedText};\n}\n\n.beepboxEditor .instrument-bar .deactivated {\n\tbackground: ${ColorConfig.editorBackground};\n\tcolor: var(--text-color-dim);\n}\n\n.beepboxEditor .instrument-bar .deactivated.selected-instrument {\n\tbackground: var(--background-color-dim);\n\tcolor: ${ColorConfig.invertedText};\n}\n\n.beepboxEditor .instrument-bar .remove-instrument::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: 100%;\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--close-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--close-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .instrument-bar .add-instrument::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: 100%;\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--add-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--add-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor canvas {\n\toverflow: hidden;\n\tposition: absolute;\n\tdisplay: block;\n}\n\n.beepboxEditor .trackContainer {\n\tflex-grow: 1;\n}\n\n.beepboxEditor .trackAndMuteContainer {\n\tdisplay: flex;\n\talign-items: flex-start;\n\twidth: 100%;\n\tmin-height: 0;\n\tflex: 1;\n\toverflow-x: hidden;\n\tposition: relative;\n}\n\n.beepboxEditor .channelRow {\n\tdisplay: flex;\n}\n\n.beepboxEditor .channelBox {\n\tdisplay: flex;\n\ttext-align: center;\n\talign-items: center;\n\tjustify-content: center;\n\tbox-sizing: border-box;\n\tpadding-top: 1px;\n}\n\n.beepboxEditor .channelBoxLabel {\n\tfont-size: 20px;\n\tfont-family: sans-serif;\n\tfont-weight: bold;\n}\n\n.beepboxEditor .muteEditor {\n\twidth: 32px;\n\tflex-shrink: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n\tposition: sticky;\n\tleft: 0;\n\tz-index: 1;\n\tbackground: ${ColorConfig.editorBackground};\n}\n\n.beepboxEditor .selectRow, .beepboxEditor .instrumentCopyPasteRow {\n\tmargin: 2px 0;\n\theight: var(--button-size);\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n\n.beepboxEditor .selectRow > :last-child {\n\twidth: 62.5%;\n\tflex-shrink: 0;\n}\n\n.beepboxEditor .menu-area {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n.beepboxEditor .menu-area > * {\n\tmargin: 2px 0;\n}\n.beepboxEditor .menu-area > button {\n\tpadding: 0 var(--button-size);\n\twhite-space: nowrap;\n}\n\n.beepboxEditor .song-settings-area {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .editor-controls {\n\tflex-shrink: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .instrument-settings-area {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\n\tflex-shrink: 0;\n}\n\n.beepboxEditor .pitchShiftMarkerContainer {\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\theight: 100%;\n\tleft: 3px;\n\tright: 3px;\n\tposition: absolute;\n\talign-items: center;\n\tpointer-events: none;\n}\n\n.beepboxEditor .pitchShiftMarker {\n\twidth: 0;\n\theight: 0;\n\tposition: absolute;\n}\n\n.beepboxEditor .pitchShiftMarker::before {\n\tcontent: \"\";\n\twidth: 2px;\n\theight: 20px;\n\ttransform: translate(-50%, -50%);\n\tposition: absolute;\n\tbackground: currentColor;\n\tborder-radius: 3px;\n}\n\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\n\tfont-size: inherit;\n\tfont-weight: inherit;\n\tfont-family: inherit;\n\tbackground: transparent;\n\tborder: 1px solid ${ColorConfig.uiWidgetFocus};\n\tcolor: ${ColorConfig.primaryText};\n}\n\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\n\tbackground-color: ${ColorConfig.textSelection};\n\tcolor: ${ColorConfig.primaryText};\n}\n\n.beepboxEditor input[type=checkbox] {\n  transform: scale(1.5);\n}\n\n.beepboxEditor input[type=range] {\n\t-webkit-appearance: none;\n\tcolor: inherit;\n\twidth: 100%;\n\theight: var(--button-size);\n\tfont-size: inherit;\n\tmargin: 0;\n\tcursor: pointer;\n\tbackground: none;\n\ttouch-action: pan-y;\n}\n.beepboxEditor input[type=range]:focus {\n\toutline: none;\n}\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\n\twidth: 100%;\n\theight: 6px;\n\tcursor: pointer;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n}\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\n\theight: var(--button-size);\n\twidth: 6px;\n\tborder-radius: 3px;\n\tbackground: currentColor;\n\tcursor: pointer;\n\t-webkit-appearance: none;\n\tmargin-top: -10px;\n}\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n}\n.beepboxEditor input[type=range]::-moz-range-track {\n\twidth: 100%;\n\theight: 6px;\n\tcursor: pointer;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n}\n.beepboxEditor input[type=range]:focus::-moz-range-track {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n}\n.beepboxEditor input[type=range]::-moz-range-thumb {\n\theight: var(--button-size);\n\twidth: 6px;\n\tborder-radius: 3px;\n\tborder: none;\n\tbackground: currentColor;\n\tcursor: pointer;\n}\n.beepboxEditor input[type=range]::-ms-track {\n\twidth: 100%;\n\theight: 6px;\n\tcursor: pointer;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n\tborder-color: transparent;\n}\n.beepboxEditor input[type=range]:focus::-ms-track {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n}\n.beepboxEditor input[type=range]::-ms-thumb {\n\theight: var(--button-size);\n\twidth: 6px;\n\tborder-radius: 3px;\n\tbackground: currentColor;\n\tcursor: pointer;\n}\n\n/* wide screen */\n@media (min-width: 711px) {\n\t#beepboxEditorContainer {\n\t\tdisplay: table;\n\t}\n\t.beepboxEditor {\n\t\tflex-direction: row;\n\t}\n\t.beepboxEditor:focus-within {\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\n\t}\n\t.beepboxEditor .trackAndMuteContainer {\n\t\twidth: 512px;\n\t}\n\t.beepboxEditor .play-pause-area {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\t.beepboxEditor .playback-bar-controls {\n\t\tmargin: 2px 0;\n\t}\n\t.beepboxEditor .playback-volume-controls {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tmargin: 2px 0;\n\t\talign-items: center;\n\t}\n\t.beepboxEditor .settings-area {\n\t\twidth: var(--settings-area-width);\n\t}\n}\n\n/* narrow screen */\n@media (max-width: 710px) {\n\t.beepboxEditor {\n\t\tgrid-template-columns: minmax(0, 1fr);\n\t\tgrid-template-rows: min-content 6px min-content min-content;\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\n\t\tgrid-row-gap: 0;\n\t}\n\t.beepboxEditor .settings-area {\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\n\t\tgrid-template-areas:\n\t\t\t\"play-pause-area play-pause-area\"\n\t\t\t\"menu-area instrument-settings-area\"\n\t\t\t\"song-settings-area instrument-settings-area\"\n\t\t\t\"version-area version-area\";\n\t\tgrid-column-gap: 8px;\n\t\tmargin: 0 4px;\n\t}\n\t.beepboxEditor:focus-within {\n\t\toutline: none;\n\t}\n\t.beepboxEditor .pattern-area {\n\t\tmax-height: 75vh;\n\t}\n\t.beepboxEditor .trackAndMuteContainer {\n\t\toverflow-x: auto;\n\t}\n\t.beepboxEditor .barScrollBar {\n\t\tdisplay: none;\n\t}\n\t.beepboxEditor .play-pause-area {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\tgrid-column-gap: 8px;\n\t\tmargin: 2px 0;\n\t}\n\t.beepboxEditor .playback-bar-controls {\n\t\tflex-grow: 1;\n\t}\n\t.beepboxEditor .playback-volume-controls {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tflex-grow: 1;\n\t}\n}\n\n`));\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\n\nexport class Layout {\n\tprivate static readonly _layoutMap: {[K: string]: string} = {\n\t\t\"small\": \"\",\n\t\t\"long\": `\\\n\t\t\t/* long layout */\n\t\t\t@media (min-width: 711px) {\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\tmax-width: initial;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\tgrid-template-columns: 390px minmax(0, 1fr); /* minmax(0, 1fr) min-content; */\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) minmax(0, min-content);\n\t\t\t\t\tgrid-template-areas: \"settings-area pattern-area\" \"track-area track-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .pattern-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .track-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmin-height: 0;\n\t\t\t\t\tflex: 1;\n\t\t\t\t\toverflow: auto;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .song-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .settings-area {\n\t\t\t\t\twidth: 390px;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\n\t\t\t\t\tgrid-template-areas:\n\t\t\t\t\t\t\"version-area instrument-settings-area\"\n\t\t\t\t\t\t\"play-pause-area instrument-settings-area\"\n\t\t\t\t\t\t\"menu-area instrument-settings-area\"\n\t\t\t\t\t\t\"song-settings-area instrument-settings-area\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .barScrollBar {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackContainer {\n\t\t\t\t\toverflow: visible;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tscrollbar-width: auto;\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\n\t\t\t\t\twidth: 20px;\n\t\t\t\t\theight: 20px;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\t\t\"tall\": `\\\n\t\t\t/* tall layout */\n\t\t\t@media (min-width: 711px) {\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\tmax-width: initial;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\tgrid-template-columns: 192px minmax(0, 1fr) minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: 1fr;\n\t\t\t\t\tgrid-template-areas: \"settings-area pattern-area track-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .pattern-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .track-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmin-height: 0;\n\t\t\t\t\tflex: 0;\n\t\t\t\t\toverflow: auto;\n\t\t\t\t\tflex-basis: initial;\n\t\t\t\t\tflex-grow: 0;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .settings-area {\n\t\t\t\t\twidth: 192px;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: auto auto auto auto minmax(0, 1fr);\n\t\t\t\t\tgrid-template-areas:\n\t\t\t\t\t\t\"version-area\"\n\t\t\t\t\t\t\"play-pause-area\"\n\t\t\t\t\t\t\"menu-area\"\n\t\t\t\t\t\t\"song-settings-area\"\n\t\t\t\t\t\t\"instrument-settings-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .version-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .play-pause-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 22px;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .menu-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 82px;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .barScrollBar {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackContainer {\n\t\t\t\t\toverflow: visible;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tscrollbar-width: auto;\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\n\t\t\t\t\twidth: 20px;\n\t\t\t\t\theight: 20px;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\t}\n\t\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({type: \"text/css\"}));\n\t\n\tpublic static setLayout(layout: string): void {\n\t\tthis._styleElement.textContent = this._layoutMap[layout];\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\ninterface NumberArray {\n\tlength: number;\n\t[index: number]: number;\n}\n\n// A basic FFT operation scales the overall magnitude of elements by the\n// square root of the length of the array, √N. Performing a forward FFT and\n// then an inverse FFT results in the original array, but multiplied by N.\n// This helper function can be used to compensate for that. \nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\n\tfor (let i: number = 0; i < array.length; i++) {\n\t\tarray[i] *= factor;\n\t}\n}\n\nfunction isPowerOf2(n: number): boolean {\n\treturn !!n && !(n & (n - 1));\n}\n\nfunction countBits(n: number): number {\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\n\treturn Math.round(Math.log(n) / Math.log(2));\n}\n\n// Rearranges the elements of the array, swapping the element at an index\n// with an element at an index that is the bitwise reverse of the first\n// index in base 2. Useful for computing the FFT.\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\n\tconst bitCount: number = countBits(fullArrayLength);\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\n\tconst finalShift: number = 16 - bitCount;\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\n\t\tlet j: number;\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\n\t\tj = ((j           >> 8) | ((j &   0xff) << 8)) >> finalShift;\n\t\tif (j > i) {\n\t\t\tlet temp: number = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t}\n}\n\n// Provided for educational purposes. Easier to read than\n// fastFourierTransform(), but computes the same result.\n// Takes two parallel arrays representing the real and imaginary elements,\n// respectively, and returns an array containing two new arrays, which\n// contain the complex result of the transform.\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\n\tconst fullArrayLength: number = realArray.length;\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\tconst realOut: number[] = [];\n\tconst imagOut: number[] = [];\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\trealOut[i] = 0.0;\n\t\timagOut[i] = 0.0;\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\n\t\t\tconst c: number = Math.cos(radians);\n\t\t\tconst s: number = Math.sin(radians);\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\n\t\t}\n\t}\n\treturn [realOut, imagOut];\n}\n\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\n// input real and imaginary arrays. Can be used for both forward and inverse\n// transforms: swap the order of the arguments for the inverse.\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\n\tconst fullArrayLength: number = realArray.length;\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\t\n\treverseIndexBits(realArray, fullArrayLength);\n\treverseIndexBits(imagArray, fullArrayLength);\n\t\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\n\t\tconst startIndex1: number = startIndex + 1;\n\t\tconst startIndex2: number = startIndex + 2;\n\t\tconst startIndex3: number = startIndex + 3;\n\t\tconst real0: number = realArray[startIndex ];\n\t\tconst real1: number = realArray[startIndex1];\n\t\tconst real2: number = realArray[startIndex2];\n\t\tconst real3: number = realArray[startIndex3];\n\t\tconst imag0: number = imagArray[startIndex ];\n\t\tconst imag1: number = imagArray[startIndex1];\n\t\tconst imag2: number = imagArray[startIndex2];\n\t\tconst imag3: number = imagArray[startIndex3];\n\t\tconst realTemp0: number = real0 + real1;\n\t\tconst realTemp1: number = real0 - real1;\n\t\tconst realTemp2: number = real2 + real3;\n\t\tconst realTemp3: number = real2 - real3;\n\t\tconst imagTemp0: number = imag0 + imag1;\n\t\tconst imagTemp1: number = imag0 - imag1;\n\t\tconst imagTemp2: number = imag2 + imag3;\n\t\tconst imagTemp3: number = imag2 - imag3;\n\t\trealArray[startIndex ] = realTemp0 + realTemp2;\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\n\t\timagArray[startIndex ] = imagTemp0 + imagTemp2;\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\n\t}\n\t\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\n\t\tconst halfLength: number = stride >>> 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tlet c: number = 1.0;\n\t\t\tlet s: number = 0.0;\n\t\t\tlet cPrev: number = cosIncrement;\n\t\t\tlet sPrev: number = sinIncrement;\n\t\t\tconst secondHalf: number = startIndex + halfLength;\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\n\t\t\t\tconst j: number = i + halfLength;\n\t\t\t\tconst real0: number = realArray[i];\n\t\t\t\tconst imag0: number = imagArray[i];\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\n\t\t\t\trealArray[i] = real0 + real1;\n\t\t\t\timagArray[i] = imag0 + imag1;\n\t\t\t\trealArray[j] = real0 - real1;\n\t\t\t\timagArray[j] = imag0 - imag1;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the Fourier transform from an array of real-valued time-domain\n// samples. The output is specially formatted for space efficieny: elements\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\n// descending frequency. Overwrites the input array.\nexport function forwardRealFourierTransform(array: NumberArray): void {\n\tconst fullArrayLength: number = array.length;\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\t\n\treverseIndexBits(array, fullArrayLength);\n\t\n\t// First and second pass.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\t// no imaginary elements yet since the input is fully real.\n\t\tconst tempA: number = real0 + real1;\n\t\tconst tempB: number = real2 + real3;\n\t\tarray[index ] = tempA + tempB;\n\t\tarray[index1] = real0 - real1;\n\t\tarray[index2] = tempA - tempB;\n\t\tarray[index3] = real2 - real3;\n\t}\n\t\n\t// Third pass.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index7: number = index + 7;\n\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst imag3: number = array[index3];\n\t\tconst real4: number = array[index4];\n\t\tconst real5: number = array[index5];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\n\t\tarray[index ] = real0 + real4;\n\t\tarray[index1] = real1 + tempA;\n\t\tarray[index3] = real1 - tempA;\n\t\tarray[index4] = real0 - real4;\n\t\tarray[index5] = tempB - imag3;\n\t\tarray[index7] = tempB + imag3;\n\t}\n\t\n\t// Handle remaining passes.\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst realStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + realStartB;\n\t\t\tarray[startIndexB] = realStartA - realStartB;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst imag0: number = array[indexA1];\n\t\t\t\tconst real1: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\n\t\t\t\tarray[indexA0] = real0 + tempA;\n\t\t\t\tarray[indexA1] = real0 - tempA;\n\t\t\t\tarray[indexB0] =-imag0 - tempB;\n\t\t\t\tarray[indexB1] = imag0 - tempB;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the inverse Fourier transform from a specially formatted array of\n// scalar values. Elements 0 through N/2 are expected to be the real values of\n// the corresponding complex elements, representing cosine wave amplitudes in\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\n// imaginary values, representing sine wave amplitudes in descending frequency.\n// Generates real-valued time-domain samples. Overwrites the input array.\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\n\t// Perform all but the last few passes in reverse.\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\t\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst imagStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\n\t\t\tarray[midIndexA] *= 2;\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\n\t\t\tarray[midIndexB] *= 2;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst real1: number = array[indexA1];\n\t\t\t\tconst imag0: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real0 - real1;\n\t\t\t\tconst tempB: number = imag0 + imag1;\n\t\t\t\tarray[indexA0] = real0 + real1;\n\t\t\t\tarray[indexA1] = imag1 - imag0;\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t// Commented out this block (and compensated with an extra pass above)\n\t// because it's slower in my testing so far.\n\t// Pass with stride 8.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index6: number = index + 6;\n\t\tconst index7: number = index + 7;\n\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\tconst imag4: number = array[index4];\n\t\tconst imag5: number = array[index5];\n\t\tconst imag6: number = array[index6];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = real1 - real3;\n\t\tconst tempB: number = imag5 + imag7;\n\t\tarray[index ] = real0 + imag4;\n\t\tarray[index1] = real1 + real3;\n\t\tarray[index2] = real2 * 2;\n\t\tarray[index3] = imag7 - imag5;\n\t\tarray[index4] = real0 - imag4;\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\n\t\tarray[index6] = imag6 * 2;\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\n\t}\n\t*/\n\t// The final passes with strides 4 and 2, combined into one loop.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1] * 2;\n\t\tconst imag2: number = array[index2];\n\t\tconst imag3: number = array[index3] * 2;\n\t\tconst tempA: number = real0 + imag2;\n\t\tconst tempB: number = real0 - imag2;\n\t\tarray[index ] = tempA + real1;\n\t\tarray[index1] = tempA - real1;\n\t\tarray[index2] = tempB + imag3;\n\t\tarray[index3] = tempB - imag3;\n\t}\n\t\n\treverseIndexBits(array, fullArrayLength);\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class Deque<T> {\n\tprivate _capacity: number = 1;\n\tprivate _buffer: Array<T | undefined> = [undefined];\n\tprivate _mask: number = 0;\n\tprivate _offset: number = 0;\n\tprivate _count: number = 0;\n\n\tpublic pushFront(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._offset = (this._offset - 1) & this._mask;\n\t\tthis._buffer[this._offset] = element;\n\t\tthis._count++;\n\t}\n\tpublic pushBack(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\n\t\tthis._count++;\n\t}\n\tpublic popFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tconst element: T = <T>this._buffer[this._offset];\n\t\tthis._buffer[this._offset] = undefined;\n\t\tthis._offset = (this._offset + 1) & this._mask;\n\t\tthis._count--;\n\t\treturn element;\n\t}\n\tpublic popBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tthis._count--;\n\t\tconst index: number = (this._offset + this._count) & this._mask;\n\t\tconst element: T = <T>this._buffer[index];\n\t\tthis._buffer[index] = undefined;\n\t\treturn element;\n\t}\n\tpublic peakFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[this._offset];\n\t}\n\tpublic peakBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\n\t}\n\tpublic count(): number {\n\t\treturn this._count;\n\t}\n\tpublic set(index: number, element: T): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\n\t}\n\tpublic get(index: number): T {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\n\t}\n\tpublic remove(index: number): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tif (index <= (this._count >> 1)) {\n\t\t\twhile (index > 0) {\n\t\t\t\tthis.set(index, this.get(index - 1));\n\t\t\t\tindex--;\n\t\t\t}\n\t\t\tthis.popFront();\n\t\t} else {\n\t\t\tindex++;\n\t\t\twhile (index < this._count) {\n\t\t\t\tthis.set(index - 1, this.get(index));\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tthis.popBack();\n\t\t}\n\t}\n\tprivate _expandCapacity(): void {\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\n\t\tthis._capacity = this._capacity << 1;\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\n\t\tconst size: number = this._count | 0;\n\t\tconst offset: number = this._offset | 0;\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\n\t\t}\n\t\tfor (let i = size; i < this._capacity; i++) {\n\t\t\tnewBuffer[i] = undefined;\n\t\t}\n\t\tthis._offset = 0;\n\t\tthis._buffer = newBuffer;\n\t\tthis._mask = this._capacity - 1;\n\t}\n}\n","/*\nThis file contains code to compute digital audio filter coefficients based on\nthe desired type, cutoff frequency, and other parameters. You can use these\ncoefficients to apply the filter to audio samples. It also contains code to\nanalyze these filters, which is useful for graphically displaying their effects.\n\nAll of the filters in this file are known as \"Infinite Impulse Response\" or IIR\nfilters, because older output samples contribute feedback to newer output\nsamples and thus contribute to all future samples, although typically filters\nare design to reduce the contribution of older samples over time.\n\nLow-pass filters aka high-cut filters preserve audio signals below the cutoff\nfrequency, and attenuate audio signals above the cutoff frequency. High-pass\nfilters aka low-cut filters are the reverse. All-pass filters do not affect the\nvolume of the signal at all but induce phase changes above the cutoff frequency.\nPeak/Notch filters maintain the volume on either side of the cutoff frequency,\nbut raise or lower the volume at that frequency. \n\nThe number of old samples used in the filter determines the \"order\" of the\nfilter. First-order filters generally have shallower slopes, and second-order\nfilters generally have steeper slopes and can be configured to \"resonate\",\nmeaning they have a louder peak at the cutoff frequency. This file contains\nfirst-order filters and second-order filters, meaning one or two older samples\nare involved, as well as the current input sample.\n\nThe class FilterCoefficients is defined lower in this file. You can use it to\nset up a first order filter like this:\n\n\tconst cutoffRadiansPerSample: number = 2 * Math.PI * cutoffHz / sampleRate;\n\tconst filter: FilterCoefficients = new FilterCoefficients();\n\tfilter.lowPass1stOrderButterworth(cutoffRadiansPerSample);\n\t// output sample coefficients are conventionally called a0, a1, etc. Note\n\t// that a[0] is typically normalized to 1.0 and need not be used directly.\n\tconst a: number[] = filter.a;\n\t// input sample coefficients are conventionally called b0, b1, etc\n\tconst b: number[] = filter.b;\n\t// filter input samples, x[0] is the most recent, x[1] is the previous one, etc.\n\tconst x: number[] = [0, 0, 0];\n\t// filter output samples, y[0] will be computed by the filter based on input\n\t// samples and older output samples.\n\tconst y: number[] = [0, 0, 0];\n\nThen to apply the first-order filter to samples inside a loop, using the current\ninput sample (x[0]) as well as previous input and output samples, do this:\n\n\t// Compute the next output sample y[0]:\n\ty[0] = b[0] * x[0] + b[1] * x[1] - a[1] * y[1];\n\t// Remember the input and output samples for next time:\n\tx[1] = x[0];\n\ty[1] = y[0];\n\n2nd order filters are similar, but have more parameters and require more old\nsamples:\n\n\t// Compute the next output sample y[0]:\n\ty[0] = b[0] * x[0] + b[1] * x[1] + b[2] * x[2] - a[1] * y[1] - a[2] * y[2];\n\t// Remember the input and output samples for next time:\n\tx[2] = x[1];\n\tx[1] = x[0];\n\ty[2] = y[1];\n\ty[1] = y[0];\n\nYou can compose multiple filters into a higher order filter, although doing so\nreduces the numerical stability of the filter:\n\n\tfilter3.combination(filter1, filter2);\n\t// filter3.order will equal: filter1.order + filter2.order\n\t// The number of coefficients in filter3.a and filter3.b will be: order + 1\n\nThis file also contains a class called FrequencyResponse. You can use it to\ndetermine how much gain or attenuation a filter would apply to sounds at a\nspecific input frequency, as well as the phase offset:\n\n\tconst inputRadians: number = 2 * Math.PI * cutoffHz / sampleRate;\n\tconst response: FrequencyResponse = new FrequencyResponse();\n\tresponse.analyze(filter, inputRadians);\n\tconst gainResponse = response.magnitude();\n\tconst phaseResponse = response.angle();\n\nThat's basically all you need to know to use this code, but I'll also explain\nhow the analysis works.\n\nA first-order digital IIR filter is ordinarily implemented in a form like this:\n\n\toutput = inputCoeff * input + prevInputCoeff * prevInput - prevOutputCoeff * prevOutput;\n\nIf we adopt standard naming conventions for audio filters, this same code would\ninstead look like:\n\n\t// x0 = current input, x1 = prevInput, y0 = current output, y1 = prevOutput\n\ty0 = b0*x0 + b1*x1 - a1*y1;\n\nLeaving behind the world of code for a moment and entering the world of algebra,\nwe can rewrite this equation by moving all the output terms to the left side,\nand we can add a coefficient to the y0 term called a0 (which is typically\nnormalized to 1.0, which is why I didn't bother including it until now):\n\n\ta0*y0 + a1*y1 = b0*x0 + b1*x1\n\nThis is known as the symmetrical form of the filter, and it will help us analyze\nthe impact of the filter on an input audio signal. Here's a lesson that helped\nme understand the symmetrical form:\nhttps://web.archive.org/web/20200626183458/http://123.physics.ucdavis.edu/week_5_files/filters/digital_filter.pdf\n\nThe end of that lesson introduces a concept called the \"delay operator\" which\nlooks like \"z^-1\", which (magically) turns a sample into the previous sample\nwhen you multiply them. For example:\n\n\tx0 * z^-1 = x1\n\nThe lesson doesn't explain how it actually works. Audio signals aren't always\npredictable, which means that you generally can't do math on a single sample to\ncompute what the previous sample was. However, some audio signals ARE\npredictable, such as pure sine waves. Fortunately, all audio signals can be\nbroken down into a sum of independent sine waves. We can pick one sine wave at a\ntime, and use it to analyze the filter's impact on waves at that frequency. In\npractice, this tells us what the filter will do to unpredictable input samples\nthat contain a partial sine wave at that frequency.\n\nTechnically, you can't just use a single sine wave sample to determine the\nprevious sine wave sample, because each possible value is passed going upwards\nand downwards once per period and the direction is ambigous. This is where we\nneed to move into the complex number domain, where the real and imaginary\ncomponents can provide enough information to compute the previous position on\nthe input signal. So now instead of talking about sine waves, we're talking\nabout waves where the imaginary component is a sine wave and the real component\nis a cosine wave at the same frequency. Together, they trace around a unit\ncircle in the complex domain, and each sample is just a consistent rotation\napplied to the previous sample. The \"delay operator\" described above, z^-1, is\nthis same rotation applied in reverse, and it can be computed as:\n\n\tz^-1 = cos(radiansPerSample) - i * sin(radiansPerSample)\n\nMath nerds may be interested to know that \"Euler's formula\" was used here, but\nexplaining what that means is probably beyond the scope of this documentation\naside from noting that a complex number on the unit circle represents a 2D\nrotation that you can apply via multiplication.\n\nNow we can rewrite the symmetrical form using the delay operator and algebra:\n\n\ta0*y0 + a1*y0*z^-1 = b0*x0 + b1*x0*z^-1\n\ty0 * (a0 + a1*z^-1) = x0 * (b0 + b1*z^-1)\n\ty0 = x0 * (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\ty0 / x0 = (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\nThat last equation expresses the relationship between the input and output\nsignals (y0/x0) in terms of the filter coefficients and delay operator. At this\npoint, the specific values of the input and output samples don't even matter!\nThis is called the \"transfer function\", and it's conventionally named \"H(z)\":\n\n\tH(z) = (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\nIf you plug in actual filter coefficients and express the delay operators as\ncomplex numbers with the appropriate trigonometry functions, the transfer\nfunction can be computed and produces a complex number that represents the\nrelationship between the input and output signals, whose magnitude represents\nthe volume gain (or attenuation) of signals at that frequency, and whose angle\nrepresents how much phase shift is applied by the filter to signals at that\nfrequency.\n\n(Note that in order to compute the transfer function, you'll need to do\nsomething about the complex number in the denominator. It turns out you can turn\nthe denominator into a real number by multiplying both the numerator and\ndenominator by the complex conjugate of the denominator, which is just the\ndenominator with the imaginary component negated.)\n\nFinally, I'll list some of the links that helped me understand filters and\nprovided some of the algorithms I that use here.\n\nHere's where I found accurate 2nd order low-pass, high-pass, and high-shelf\ndigital filters:\nhttps://web.archive.org/web/20120531011328/http://www.musicdsp.org/files/Audio-EQ-Cookbook.txt\n\nThis page is how I found a link to the cookbook article above. It claims these\nfilters are Butterworth filters:\nhttp://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\n\nI found the first-order digital Butterworth filter coefficients at:\nhttps://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\nThis meta-paper helped me understand how to make 2nd order peak/notch filters:\nhttps://web.archive.org/web/20170706085655/https://www.thesounddesign.com/MIO/EQ-Coefficients.pdf\n\nBeepBox originally used simpler low-pass filters that I adapted from SFXR:\nhttps://www.drpetter.se/project_sfxr.html\nFor low cutoff frequencies, the simpler filters and the Butterworth filters are\nnearly identical, but when closer to the nyquist frequency the simpler filters\ncreate extra resonance.\n*/\n\nexport class FilterCoefficients {\n\tpublic readonly a: number[] = [1.0]; // output coefficients (negated, keep a[0]=1)\n\tpublic readonly b: number[] = [1.0]; // input coefficients\n\tpublic order: number = 0;\n\t\n\tpublic linearGain0thOrder(linearGain: number): void {\n\t\t//a[0] = 1.0; // a0 should always be normalized to 1.0, no need to assign it directly.\n\t\tthis.b[0] = linearGain;\n\t\tthis.order = 0;\n\t}\n\t\n\tpublic lowPass1stOrderButterworth(cornerRadiansPerSample: number): void {\n\t\t// First-order Butterworth low-pass filter according to:\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\t\t// A butterworth filter is one where the amplitude response is equal to:\n\t\t// 1 / √(1 + (freq / cutoffFreq)^(2 * order))\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst a0: number = 1.0 + g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[1] = this.b[0] = 1 / a0;\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic lowPass1stOrderSimplified(cornerRadiansPerSample: number): void {\n\t\t// The output of this filter is nearly identical to the 1st order\n\t\t// Butterworth low-pass above, except if the cutoff is set to nyquist/3,\n\t\t// then the output is the same as the input, and if the cutoff is higher\n\t\t// than that, then the output actually resonates at high frequencies\n\t\t// instead of attenuating.\n\t\t// I'm guessing this filter was converted from analog to digital using\n\t\t// the \"matched z-transform\" method instead of the \"bilinear transform\"\n\t\t// method. The difference is that the bilinear transform warps\n\t\t// frequencies so that the lowpass response of zero at analogue ∞hz maps\n\t\t// to the digital nyquist frequency, whereas the matched z-transform\n\t\t// preserves the frequency of the filter response but also adds the\n\t\t// reflected response from above the nyquist frequency.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tthis.a[1] = g - 1.0;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 0.0;\n\t\t/*\n\t\t// Alternatively:\n\t\tconst g: number = 1.0 / (2.0 * Math.sin(cornerRadiansPerSample / 2));\n\t\tconst a0: number = g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[0] = 1.0 / a0;\n\t\tthis.b[1] = 0.0 / a0;\n\t\t*/\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic highPass1stOrderButterworth(cornerRadiansPerSample: number): void {\n\t\t// First-order Butterworth high-pass filter according to:\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst a0: number = 1.0 + g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[0] = g / a0;\n\t\tthis.b[1] = -g / a0;\n\t\tthis.order = 1;\n\t}\n\t/*\n\tpublic highPass1stOrderSimplified(cornerRadiansPerSample: number): void {\n\t\t// The output of this filter is nearly identical to the 1st order\n\t\t// Butterworth high-pass above, except it resonates when the cutoff\n\t\t// appoaches the nyquist.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tthis.a[1] = g - 1.0;\n\t\tthis.b[0] = 1.0;\n\t\tthis.b[1] = -1.0;\n\t\tthis.order = 1;\n\t}\n\t*/\n\tpublic highShelf1stOrder(cornerRadiansPerSample: number, shelfLinearGain: number): void {\n\t\t// I had trouble figuring this one out because I couldn't find any\n\t\t// online algorithms that I understood. There are 3 degrees of freedom\n\t\t// and I could narrow down a couple of them based on the desired gain at\n\t\t// DC and nyquist, but getting the cutoff frequency correct took a\n\t\t// little bit of trial and error in my attempts to interpret page 53 of\n\t\t// this chapter: http://www.music.mcgill.ca/~ich/classes/FiltersChap2.pdf\n\t\t// Obviously I don't fully understand the bilinear transform yet!\n\t\tconst tan: number = Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst sqrtGain: number = Math.sqrt(shelfLinearGain);\n\t\tconst g: number = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\n\t\tconst a0: number = 1.0;\n\t\tthis.a[1] = g / a0;\n\t\tthis.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n\t\tthis.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample: number): void {\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 1.0;\n\t\tthis.order = 1;\n\t}\n\t\n\t/*\n\t// I haven't found a practical use for this version of the all pass filter.\n\t// It seems to create a weird subharmonic when used in a delay feedback loop.\n\tpublic allPass1stOrderInvertPhaseBelow(cornerRadiansPerSample: number): void {\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = -g;\n\t\tthis.b[1] = -1.0;\n\t\tthis.order = 1;\n\t}\n\t*/\n\t\n\tpublic allPass1stOrderFractionalDelay(delay: number) {\n\t\t// Very similar to allPass1stOrderInvertPhaseAbove, but configured\n\t\t// differently and for a different purpose! Useful for interpolating\n\t\t// between samples in a delay line.\n\t\tconst g: number = (1.0 - delay) / (1.0 + delay);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 1.0;\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic lowPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\t// This is Butterworth if peakLinearGain=1/√2 according to:\n\t\t// http://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\n\t\t// An interesting property is that if peakLinearGain=1/16 then the\n\t\t// output resembles a first-order lowpass at a cutoff 4 octaves lower,\n\t\t// although it gets distorted near the nyquist.\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\n\t\tconst a0: number = 1.0 + alpha;\n\t\tthis.a[1] = -2.0*cos / a0;\n\t\tthis.a[2] = (1 - alpha) / a0;\n\t\tthis.b[2] = this.b[0] = (1 - cos) / (2.0*a0);\n\t\tthis.b[1] = (1 - cos) / a0;\n\t\tthis.order = 2;\n\t}\n\t\n\tpublic lowPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\t// This filter is adapted from the one in the SFXR source code:\n\t\t// https://www.drpetter.se/project_sfxr.html\n\t\t// The output is nearly identical to the resonant Butterworth low-pass\n\t\t// above, except it resonates too much when the cutoff appoaches the\n\t\t// nyquist. If the resonance is set to zero and the cutoff is set to\n\t\t// nyquist/3, then the output is the same as the input.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\n\t\tthis.b[0] = g*g;\n\t\tthis.b[1] = 0;\n\t\tthis.b[2] = 0;\n\t\tthis.order = 2;\n\t}\n\t\n\tpublic highPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\n\t\tconst a0: number = 1.0 + alpha;\n\t\tthis.a[1] = -2.0*cos / a0;\n\t\tthis.a[2] = (1.0 - alpha) / a0;\n\t\tthis.b[2] = this.b[0] = (1.0 + cos) / (2.0*a0);\n\t\tthis.b[1] = -(1.0 + cos) / a0;\n\t\tthis.order = 2;\n\t}\n\t/*\n\tpublic highPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\n\t\tthis.b[0] = 1.0;\n\t\tthis.b[1] = -2.0;\n\t\tthis.b[2] = 1.0;\n\t\tthis.order = 2;\n\t}\n\t*/\n\t\n\tpublic highShelf2ndOrder(cornerRadiansPerSample: number, shelfLinearGain: number, slope: number): void {\n\t\tconst A: number = Math.sqrt(shelfLinearGain);\n\t\tconst c: number = Math.cos(cornerRadiansPerSample);\n\t\tconst Aplus: number = A + 1.0;\n\t\tconst Aminus: number = A - 1.0;\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) * 0.5 * Math.sqrt((Aplus / A) * (1.0 / slope - 1.0) + 2.0);\n\t\tconst sqrtA2Alpha: number = 2.0 * Math.sqrt(A) * alpha;\n\t\tconst a0: number =   (Aplus  - Aminus * c + sqrtA2Alpha);\n\t\tthis.a[1] =  2 *     (Aminus - Aplus  * c              ) / a0;\n\t\tthis.a[2] =          (Aplus  - Aminus * c - sqrtA2Alpha) / a0;\n\t\tthis.b[0] =      A * (Aplus  + Aminus * c + sqrtA2Alpha) / a0;\n\t\tthis.b[1] = -2 * A * (Aminus + Aplus  * c              ) / a0;\n\t\tthis.b[2] =      A * (Aplus  + Aminus * c - sqrtA2Alpha) / a0;\n\t\tthis.order = 2;\n\t}\n\t\n\tpublic peak2ndOrder(cornerRadiansPerSample: number, peakLinearGain: number, bandWidthScale: number): void {\n\t\tconst sqrtGain: number = Math.sqrt(peakLinearGain);\n\t\tconst bandWidth: number = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1/sqrtGain);\n\t\t//const bandWidth: number = bandWidthScale * cornerRadiansPerSample / Math.max(sqrtGain, 1.0);\n\t\tconst alpha: number = Math.tan(bandWidth * 0.5);\n\t\tconst a0: number = 1.0 + alpha / sqrtGain;\n\t\tthis.b[0] = (1.0 + alpha * sqrtGain) / a0;\n\t\tthis.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\n\t\tthis.b[2] = (1.0 - alpha * sqrtGain) / a0;\n\t\tthis.a[2] = (1.0 - alpha / sqrtGain) / a0;\n\t\tthis.order = 2;\n\t}\n\t/*\n\t// Create a higher order filter by combining two lower order filters.\n\t// However, making high order filters in this manner results in instability.\n\t// It is recommended to apply the 2nd order filters (biquads) in sequence instead.\n\tpublic combination(filter1: FilterCoefficients, filter2: FilterCoefficients): void {\n\t\tthis.order = filter1.order + filter2.order;\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = 0.0;\n\t\t\tthis.b[i] = 0.0;\n\t\t}\n\t\tfor (let i: number = 0; i <= filter1.order; i++) {\n\t\t\tfor (let j: number = 0; j <= filter2.order; j++) {\n\t\t\t\tthis.a[i + j] += filter1.a[i] * filter2.a[j];\n\t\t\t\tthis.b[i + j] += filter1.b[i] * filter2.b[j];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic scaledDifference(other: FilterCoefficients, scale: number): void {\n\t\tif (other.order != this.order) throw new Error();\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = (this.a[i] - other.a[i]) * scale;\n\t\t\tthis.b[i] = (this.b[i] - other.b[i]) * scale;\n\t\t}\n\t}\n\t\n\tpublic copy(other: FilterCoefficients): void {\n\t\tthis.order = other.order;\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = other.a[i];\n\t\t\tthis.b[i] = other.b[i];\n\t\t}\n\t}\n\t*/\n}\n\nexport class FrequencyResponse {\n\tpublic real: number = 0.0;\n\tpublic imag: number = 0.0;\n\tpublic denom: number = 1.0;\n\t\n\tpublic analyze(filter: FilterCoefficients, radiansPerSample: number): void {\n\t\tthis.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\n\t}\n\t\n\tpublic analyzeComplex(filter: FilterCoefficients, real: number, imag: number): void {\n\t\tconst a: number[] = filter.a;\n\t\tconst b: number[] = filter.b;\n\t\tconst realZ1: number = real;\n\t\tconst imagZ1: number = -imag;\n\t\tlet realNum: number = b[0] + b[1] * realZ1;\n\t\tlet imagNum: number = b[1] * imagZ1;\n\t\tlet realDenom: number = 1.0 + a[1] * realZ1;\n\t\tlet imagDenom: number = a[1] * imagZ1;\n\t\tlet realZ: number = realZ1;\n\t\tlet imagZ: number = imagZ1;\n\t\tfor (let i: number = 2; i <= filter.order; i++) {\n\t\t\tconst realTemp: number = realZ * realZ1 - imagZ * imagZ1;\n\t\t\tconst imagTemp: number = realZ * imagZ1 + imagZ * realZ1;\n\t\t\trealZ = realTemp;\n\t\t\timagZ = imagTemp;\n\t\t\trealNum += b[i] * realZ;\n\t\t\timagNum += b[i] * imagZ;\n\t\t\trealDenom += a[i] * realZ;\n\t\t\timagDenom += a[i] * imagZ;\n\t\t}\n\t\tthis.denom = realDenom * realDenom + imagDenom * imagDenom;\n\t\tthis.real = realNum * realDenom + imagNum * imagDenom;\n\t\tthis.imag = imagNum * realDenom - realNum * imagDenom;\n\t}\n\t\n\tpublic magnitude(): number {\n\t\treturn Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\n\t}\n\t\n\tpublic angle(): number {\n\t\treturn Math.atan2(this.imag, this.real);\n\t}\n}\n\nexport class DynamicBiquadFilter {\n\tpublic a1: number = 0.0;\n\tpublic a2: number = 0.0;\n\tpublic b0: number = 1.0;\n\tpublic b1: number = 0.0;\n\tpublic b2: number = 0.0;\n\tpublic a1Delta: number = 0.0;\n\tpublic a2Delta: number = 0.0;\n\tpublic b0Delta: number = 0.0;\n\tpublic b1Delta: number = 0.0;\n\tpublic b2Delta: number = 0.0;\n\tpublic output1: number = 0.0;\n\tpublic output2: number = 0.0;\n\t\n\t// Some filter types are more stable when interpolating between coefficients\n\t// if the \"b\" coefficient interpolation is multiplicative. Don't enable this\n\t// for filter types where the \"b\" coefficients might change sign!\n\tpublic useMultiplicativeInputCoefficients: boolean = false;\n\t\n\tpublic resetOutput(): void {\n\t\tthis.output1 = 0.0;\n\t\tthis.output2 = 0.0;\n\t}\n\t\n\tpublic loadCoefficientsWithGradient(start: FilterCoefficients, end: FilterCoefficients, deltaRate: number, useMultiplicativeInputCoefficients: boolean): void {\n\t\tif (start.order != 2 || end.order != 2) throw new Error();\n\t\tthis.a1 = start.a[1];\n\t\tthis.a2 = start.a[2];\n\t\tthis.b0 = start.b[0];\n\t\tthis.b1 = start.b[1];\n\t\tthis.b2 = start.b[2];\n\t\tthis.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\n\t\tthis.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\n\t\tif (useMultiplicativeInputCoefficients) {\n\t\t\tthis.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\n\t\t\tthis.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\n\t\t\tthis.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\n\t\t} else {\n\t\t\tthis.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\n\t\t\tthis.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\n\t\t\tthis.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\n\t\t}\n\t\tthis.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\n\t}\n}\n\n// Filters are typically designed as analog filters first, then converted to\n// digital filters using one of two methods: the \"matched z-transform\" or the\n// \"bilinear transform\". The \"bilinear transform\" does a better job of\n// preserving the magnitudes of the frequency response, but warps the frequency\n// range such that the nyquist frequency of the digital filter (π) maps to the\n// infinity frequency of the analog filter. You can use the below functions to\n// manually perform this warping in either direction.\nexport function warpNyquistToInfinity(radians: number): number {\n\treturn 2.0 * Math.tan(radians * 0.5);\n}\nexport function warpInfinityToNyquist(radians: number): number {\n\treturn 2.0 * Math.atan(radians * 0.5);\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Dictionary, DictionaryArray, FilterType, SustainType, EnvelopeType, InstrumentType, EffectType, EnvelopeComputeIndex, Transition, Unison, Chord, Vibrato, Envelope, AutomationTarget, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex, performIntegral, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb} from \"./SynthConfig\";\nimport {scaleElementsByFactor, inverseRealFourierTransform} from \"./FFT\";\nimport {Deque} from \"./Deque\";\nimport {FilterCoefficients, FrequencyResponse, DynamicBiquadFilter, warpInfinityToNyquist} from \"./filtering\";\n\ndeclare global {\n\tinterface Window {\n\t\tAudioContext: any;\n\t\twebkitAudioContext: any;\n\t}\n}\n\nconst epsilon: number = (1.0e-24); // For detecting and avoiding float denormals, which have poor performance.\n\n// For performance debugging:\n//let samplesAccumulated: number = 0;\n//let samplePerformance: number = 0;\n\nexport function clamp(min: number, max: number, val: number): number {\n\tmax = max - 1;\n\tif (val <= max) {\n\t\tif (val >= min) return val;\n\t\telse return min;\n\t} else {\n\t\treturn max;\n\t}\n}\n\nfunction validateRange(min: number, max: number, val: number): number {\n\tif (min <= val && val <= max) return val;\n\tthrow new Error(`Value ${val} not in range [${min}, ${max}]`);\n}\n\nconst enum CharCode {\n\tSPACE = 32,\n\tHASH = 35,\n\tPERCENT = 37,\n\tAMPERSAND = 38,\n\tPLUS = 43,\n\tDASH = 45,\n\tDOT = 46,\n\tNUM_0 = 48,\n\tNUM_1 = 49,\n\tNUM_2 = 50,\n\tNUM_3 = 51,\n\tNUM_4 = 52,\n\tNUM_5 = 53,\n\tNUM_6 = 54,\n\tNUM_7 = 55,\n\tNUM_8 = 56,\n\tNUM_9 = 57,\n\tEQUALS = 61,\n\tA =  65,\n\tB =  66,\n\tC =  67,\n\tD =  68,\n\tE =  69,\n\tF =  70,\n\tG =  71,\n\tH =  72,\n\tI =  73,\n\tJ =  74,\n\tK =  75,\n\tL =  76,\n\tM =  77,\n\tN =  78,\n\tO =  79,\n\tP =  80,\n\tQ =  81,\n\tR =  82,\n\tS =  83,\n\tT =  84,\n\tU =  85,\n\tV =  86,\n\tW =  87,\n\tX =  88,\n\tY =  89,\n\tZ =  90,\n\tUNDERSCORE = 95,\n\ta =  97,\n\tb =  98,\n\tc =  99,\n\td = 100,\n\te = 101,\n\tf = 102,\n\tg = 103,\n\th = 104,\n\ti = 105,\n\tj = 106,\n\tk = 107,\n\tl = 108,\n\tm = 109,\n\tn = 110,\n\to = 111,\n\tp = 112,\n\tq = 113,\n\tr = 114,\n\ts = 115,\n\tt = 116,\n\tu = 117,\n\tv = 118,\n\tw = 119,\n\tx = 120,\n\ty = 121,\n\tz = 122,\n\tLEFT_CURLY_BRACE = 123,\n\tRIGHT_CURLY_BRACE = 125,\n}\n\nconst enum SongTagCode {\n\tbeatCount           = CharCode.a, // added in BeepBox URL version 2\n\tbars                = CharCode.b, // added in BeepBox URL version 2\n\tvibrato             = CharCode.c, // added in BeepBox URL version 2, DEPRECATED\n\tfadeInOut           = CharCode.d, // added in BeepBox URL version 3 for transition, switched to fadeInOut in 9\n\tloopEnd             = CharCode.e, // added in BeepBox URL version 2\n\teqFilter            = CharCode.f, // added in BeepBox URL version 3\n\tbarCount            = CharCode.g, // added in BeepBox URL version 3\n\tunison              = CharCode.h, // added in BeepBox URL version 2\n\tinstrumentCount     = CharCode.i, // added in BeepBox URL version 3\n\tpatternCount        = CharCode.j, // added in BeepBox URL version 3\n\tkey                 = CharCode.k, // added in BeepBox URL version 2\n\tloopStart           = CharCode.l, // added in BeepBox URL version 2\n\treverb              = CharCode.m, // added in BeepBox URL version 5, DEPRECATED\n\tchannelCount        = CharCode.n, // added in BeepBox URL version 6\n\tchannelOctave       = CharCode.o, // added in BeepBox URL version 3\n\tpatterns            = CharCode.p, // added in BeepBox URL version 2\n\teffects             = CharCode.q, // added in BeepBox URL version 7\n\trhythm              = CharCode.r, // added in BeepBox URL version 2\n\tscale               = CharCode.s, // added in BeepBox URL version 2\n\ttempo               = CharCode.t, // added in BeepBox URL version 2\n\tpreset              = CharCode.u, // added in BeepBox URL version 7\n\tvolume              = CharCode.v, // added in BeepBox URL version 2\n\twave                = CharCode.w, // added in BeepBox URL version 2\n\tsupersaw            = CharCode.x, // added in BeepBox URL version 9\n\tfilterResonance     = CharCode.y, // added in BeepBox URL version 7, DEPRECATED\n\tdrumsetEnvelopes    = CharCode.z, // added in BeepBox URL version 7 for filter envelopes, still used for drumset envelopes\n\talgorithm           = CharCode.A, // added in BeepBox URL version 6\n\tfeedbackAmplitude   = CharCode.B, // added in BeepBox URL version 6\n\tchord               = CharCode.C, // added in BeepBox URL version 7, DEPRECATED\n//\t                    = CharCode.D, // added in JummBox URL version 3(?) for detune, DEPRECATED\n\tenvelopes           = CharCode.E, // added in BeepBox URL version 6 for FM operator envelopes, repurposed in 9 for general envelopes.\n\tfeedbackType        = CharCode.F, // added in BeepBox URL version 6\n//\t                    = CharCode.G, // added in JummBox URL version 3 for arpeggioSpeed, DEPRECATED\n\tharmonics           = CharCode.H, // added in BeepBox URL version 7\n\tstringSustain       = CharCode.I, // added in BeepBox URL version 9\n//\t                    = CharCode.J,\n//\t                    = CharCode.K,\n\tpan                 = CharCode.L, // added between 8 and 9, DEPRECATED\n//\t                    = CharCode.M, // added in JummBox URL version 1(?) for customChipWave\n//\t                    = CharCode.N, // added in JummBox URL version 1(?) for songTitle\n//\t                    = CharCode.O, // added in JummBox URL version 3(?) for limiterSettings\n\toperatorAmplitudes  = CharCode.P, // added in BeepBox URL version 6\n\toperatorFrequencies = CharCode.Q, // added in BeepBox URL version 6\n//\t                    = CharCode.R, // added in JummBox URL version 4 for operatorWaves\n\tspectrum            = CharCode.S, // added in BeepBox URL version 7\n\tstartInstrument     = CharCode.T, // added in BeepBox URL version 6\n//\t                    = CharCode.U, // added in JummBox URL version 4(?) for channelNames\n\tfeedbackEnvelope    = CharCode.V, // added in BeepBox URL version 6, DEPRECATED\n\tpulseWidth          = CharCode.W, // added in BeepBox URL version 7\n//\t                    = CharCode.X, // added in JummBox URL version 4 for aliases, DEPRECATED\n//\t                    = CharCode.Y,\n//\t                    = CharCode.Z,\n//\t                    = CharCode.NUM_0,\n//\t                    = CharCode.NUM_1,\n//\t                    = CharCode.NUM_2,\n//\t                    = CharCode.NUM_3,\n//\t                    = CharCode.NUM_4,\n//\t                    = CharCode.NUM_5,\n//\t                    = CharCode.NUM_6,\n//\t                    = CharCode.NUM_7,\n//\t                    = CharCode.NUM_8,\n//\t                    = CharCode.NUM_9,\n//\t                    = CharCode.DASH,\n//\t                    = CharCode.UNDERSCORE,\n}\n\nconst base64IntToCharCode: ReadonlyArray<number> = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95];\nconst base64CharCodeToInt: ReadonlyArray<number> = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\n\nclass BitFieldReader {\n\tprivate _bits: number[] = [];\n\tprivate _readIndex: number = 0;\n\t\n\tconstructor(source: string, startIndex: number, stopIndex: number) {\n\t\tfor (let i: number = startIndex; i < stopIndex; i++) {\n\t\t\tconst value: number = base64CharCodeToInt[source.charCodeAt(i)];\n\t\t\tthis._bits.push((value >> 5) & 0x1);\n\t\t\tthis._bits.push((value >> 4) & 0x1);\n\t\t\tthis._bits.push((value >> 3) & 0x1);\n\t\t\tthis._bits.push((value >> 2) & 0x1);\n\t\t\tthis._bits.push((value >> 1) & 0x1);\n\t\t\tthis._bits.push( value       & 0x1);\n\t\t}\n\t}\n\t\n\tpublic read(bitCount: number): number {\n\t\tlet result: number = 0;\n\t\twhile (bitCount > 0) {\n\t\t\tresult = result << 1;\n\t\t\tresult += this._bits[this._readIndex++];\n\t\t\tbitCount--;\n\t\t}\n\t\treturn result;\n\t}\n\t\n\tpublic readLongTail(minValue: number, minBits: number): number {\n\t\tlet result: number = minValue;\n\t\tlet numBits: number = minBits;\n\t\twhile (this._bits[this._readIndex++]) {\n\t\t\tresult += 1 << numBits;\n\t\t\tnumBits++;\n\t\t}\n\t\twhile (numBits > 0) {\n\t\t\tnumBits--;\n\t\t\tif (this._bits[this._readIndex++]) {\n\t\t\t\tresult += 1 << numBits;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t\n\tpublic readPartDuration(): number {\n\t\treturn this.readLongTail(1, 3);\n\t}\n\t\n\tpublic readLegacyPartDuration(): number {\n\t\treturn this.readLongTail(1, 2);\n\t}\n\t\n\tpublic readPinCount(): number {\n\t\treturn this.readLongTail(1, 0);\n\t}\n\t\n\tpublic readPitchInterval(): number {\n\t\tif (this.read(1)) {\n\t\t\treturn -this.readLongTail(1, 3);\n\t\t} else {\n\t\t\treturn this.readLongTail(1, 3);\n\t\t}\n\t}\n}\n\nclass BitFieldWriter {\n\tprivate _index: number = 0;\n\tprivate _bits: number[] = [];\n\t\n\tpublic clear() {\n\t\tthis._index = 0;\n\t}\n\t\n\tpublic write(bitCount: number, value: number): void {\n\t\tbitCount--;\n\t\twhile (bitCount >= 0) {\n\t\t\tthis._bits[this._index++] = (value >>> bitCount) & 1;\n\t\t\tbitCount--;\n\t\t}\n\t}\n\t\n\tpublic writeLongTail(minValue: number, minBits: number, value: number): void {\n\t\tif (value < minValue) throw new Error(\"value out of bounds\");\n\t\tvalue -= minValue;\n\t\tlet numBits: number = minBits;\n\t\twhile (value >= (1 << numBits)) {\n\t\t\tthis._bits[this._index++] = 1;\n\t\t\tvalue -= 1 << numBits;\n\t\t\tnumBits++;\n\t\t}\n\t\tthis._bits[this._index++] = 0;\n\t\twhile (numBits > 0) {\n\t\t\tnumBits--;\n\t\t\tthis._bits[this._index++] = (value >>> numBits) & 1;\n\t\t}\n\t}\n\t\n\tpublic writePartDuration(value: number): void {\n\t\tthis.writeLongTail(1, 3, value);\n\t}\n\t\n\tpublic writePinCount(value: number): void {\n\t\tthis.writeLongTail(1, 0, value);\n\t}\n\t\n\tpublic writePitchInterval(value: number): void {\n\t\tif (value < 0) {\n\t\t\tthis.write(1, 1); // sign\n\t\t\tthis.writeLongTail(1, 3, -value);\n\t\t} else {\n\t\t\tthis.write(1, 0); // sign\n\t\t\tthis.writeLongTail(1, 3, value);\n\t\t}\n\t}\n\t\n\tpublic concat(other: BitFieldWriter): void {\n\t\tfor (let i: number = 0; i < other._index; i++) {\n\t\t\tthis._bits[this._index++] = other._bits[i];\n\t\t}\n\t}\n\t\n\tpublic encodeBase64(buffer: number[]): number[] {\n\t\tfor (let i: number = 0; i < this._index; i += 6) {\n\t\t\tconst value: number = (this._bits[i] << 5) | (this._bits[i+1] << 4) | (this._bits[i+2] << 3) | (this._bits[i+3] << 2) | (this._bits[i+4] << 1) | this._bits[i+5];\n\t\t\tbuffer.push(base64IntToCharCode[value]);\n\t\t}\n\t\treturn buffer;\n\t}\n\t\n\tpublic lengthBase64(): number {\n\t\treturn Math.ceil(this._index / 6);\n\t}\n}\n\nexport interface NotePin {\n\tinterval: number;\n\ttime: number;\n\tsize: number;\n}\n\nexport function makeNotePin(interval: number, time: number, size: number): NotePin {\n\treturn {interval: interval, time: time, size: size};\n}\n\nexport class Note {\n\tpublic pitches: number[];\n\tpublic pins: NotePin[];\n\tpublic start: number;\n\tpublic end: number;\n\tpublic continuesLastPattern: boolean;\n\t\n\tpublic constructor(pitch: number, start: number, end: number, size: number, fadeout: boolean = false) {\n\t\tthis.pitches = [pitch];\n\t\tthis.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.continuesLastPattern = false;\n\t}\n\t\n\tpublic pickMainInterval(): number {\n\t\tlet longestFlatIntervalDuration: number = 0;\n\t\tlet mainInterval: number = 0;\n\t\tfor (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\n\t\t\tconst pinA: NotePin = this.pins[pinIndex - 1];\n\t\t\tconst pinB: NotePin = this.pins[pinIndex];\n\t\t\tif (pinA.interval == pinB.interval) {\n\t\t\t\tconst duration: number = pinB.time - pinA.time;\n\t\t\t\tif (longestFlatIntervalDuration < duration) {\n\t\t\t\t\tlongestFlatIntervalDuration = duration;\n\t\t\t\t\tmainInterval = pinA.interval;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (longestFlatIntervalDuration == 0) {\n\t\t\tlet loudestSize: number = 0;\n\t\t\tfor (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\n\t\t\t\tconst pin: NotePin = this.pins[pinIndex];\n\t\t\t\tif (loudestSize < pin.size) {\n\t\t\t\t\tloudestSize = pin.size;\n\t\t\t\t\tmainInterval = pin.interval;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mainInterval;\n\t}\n\t\n\tpublic clone(): Note {\n\t\tconst newNote: Note = new Note(-1, this.start, this.end, Config.noteSizeMax);\n\t\tnewNote.pitches = this.pitches.concat();\n\t\tnewNote.pins = [];\n\t\tfor (const pin of this.pins) {\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\n\t\t}\n\t\tnewNote.continuesLastPattern = this.continuesLastPattern;\n\t\treturn newNote;\n\t}\n\t\n\tpublic getEndPinIndex(part: number): number {\n\t\tlet endPinIndex: number;\n\t\tfor (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\n\t\t\tif (this.pins[endPinIndex].time + this.start > part) break;\n\t\t}\n\t\treturn endPinIndex;\n\t}\n}\n\nexport class Pattern {\n\tpublic notes: Note[] = [];\n\tpublic readonly instruments: number[] = [0];\n\t\n\tpublic cloneNotes(): Note[] {\n\t\tconst result: Note[] = [];\n\t\tfor (const note of this.notes) {\n\t\t\tresult.push(note.clone());\n\t\t}\n\t\treturn result;\n\t}\n\t\n\tpublic reset(): void {\n\t\tthis.notes.length = 0;\n\t\tthis.instruments[0] = 0;\n\t\tthis.instruments.length = 1;\n\t}\n\t\n\tpublic toJsonObject(song: Song): any {\n\t\tconst noteArray: Object[] = [];\n\t\tfor (const note of this.notes) {\n\t\t\tconst pointArray: Object[] = [];\n\t\t\tfor (const pin of note.pins) {\n\t\t\t\tpointArray.push({\n\t\t\t\t\t\"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\n\t\t\t\t\t\"pitchBend\": pin.interval,\n\t\t\t\t\t\"volume\": Math.round(pin.size * 100 / 3),\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tconst noteObject: any = {\n\t\t\t\t\"pitches\": note.pitches,\n\t\t\t\t\"points\": pointArray,\n\t\t\t};\n\t\t\tif (note.start == 0) {\n\t\t\t\tnoteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\n\t\t\t}\n\t\t\tnoteArray.push(noteObject);\n\t\t}\n\t\t\n\t\tconst patternObject: any = {\"notes\": noteArray};\n\t\tif (song.patternInstruments) {\n\t\t\tpatternObject[\"instruments\"] = this.instruments.map(i => i + 1);\n\t\t}\n\t\treturn patternObject;\n\t}\n\t\n\tpublic fromJsonObject(patternObject: any, song: Song, channel: Channel, importedPartsPerBeat: number, isNoiseChannel: boolean): void {\n\t\tif (song.patternInstruments) {\n\t\t\tif (Array.isArray(patternObject[\"instruments\"])) {\n\t\t\t\tconst instruments: any[] = patternObject[\"instruments\"];\n\t\t\t\tconst instrumentCount: number = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\n\t\t\t\tfor (let j: number = 0; j < instrumentCount; j++) {\n\t\t\t\t\tthis.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\n\t\t\t\t}\n\t\t\t\tthis.instruments.length = instrumentCount;\n\t\t\t} else {\n\t\t\t\tthis.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\n\t\t\t\tthis.instruments.length = 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\n\t\t\tconst maxNoteCount: number = Math.min(song.beatsPerBar * Config.partsPerBeat, patternObject[\"notes\"].length >>> 0);\n\t\t\t\n\t\t\t// TODO: Consider supporting notes specified in any timing order, sorting them and truncating as necessary.\n\t\t\tlet tickClock: number = 0;\n\t\t\tfor (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\n\t\t\t\tif (j >= maxNoteCount) break;\n\t\t\t\t\n\t\t\t\tconst noteObject = patternObject[\"notes\"][j];\n\t\t\t\tif (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst note: Note = new Note(0, 0, 0, 0);\n\t\t\t\tnote.pitches = [];\n\t\t\t\tnote.pins = [];\n\t\t\t\t\n\t\t\t\tfor (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\n\t\t\t\t\tconst pitch: number = noteObject[\"pitches\"][k] | 0;\n\t\t\t\t\tif (note.pitches.indexOf(pitch) != -1) continue;\n\t\t\t\t\tnote.pitches.push(pitch);\n\t\t\t\t\tif (note.pitches.length >= Config.maxChordSize) break;\n\t\t\t\t}\n\t\t\t\tif (note.pitches.length < 1) continue;\n\t\t\t\t\n\t\t\t\tlet noteClock: number = tickClock;\n\t\t\t\tlet startInterval: number = 0;\n\t\t\t\tfor (let k: number = 0; k < noteObject[\"points\"].length; k++) {\n\t\t\t\t\tconst pointObject: any = noteObject[\"points\"][k];\n\t\t\t\t\tif (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\n\t\t\t\t\tconst interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\n\t\t\t\t\t\n\t\t\t\t\tconst time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\n\t\t\t\t\t\n\t\t\t\t\tconst size: number = (pointObject[\"volume\"] == undefined) ? 3 : Math.max(0, Math.min(3, Math.round((pointObject[\"volume\"] | 0) * 3 / 100)));\n\t\t\t\t\t\n\t\t\t\t\tif (time > song.beatsPerBar * Config.partsPerBeat) continue;\n\t\t\t\t\tif (note.pins.length == 0) {\n\t\t\t\t\t\tif (time < noteClock) continue;\n\t\t\t\t\t\tnote.start = time;\n\t\t\t\t\t\tstartInterval = interval;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (time <= noteClock) continue;\n\t\t\t\t\t}\n\t\t\t\t\tnoteClock = time;\n\t\t\t\t\t\n\t\t\t\t\tnote.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\n\t\t\t\t}\n\t\t\t\tif (note.pins.length < 2) continue;\n\t\t\t\t\n\t\t\t\tnote.end = note.pins[note.pins.length - 1].time + note.start;\n\t\t\t\t\n\t\t\t\tconst maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\n\t\t\t\tlet lowestPitch: number = maxPitch;\n\t\t\t\tlet highestPitch: number = 0;\n\t\t\t\tfor (let k: number = 0; k < note.pitches.length; k++) {\n\t\t\t\t\tnote.pitches[k] += startInterval;\n\t\t\t\t\tif (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\n\t\t\t\t\t\tnote.pitches.splice(k, 1);\n\t\t\t\t\t\tk--;\n\t\t\t\t\t}\n\t\t\t\t\tif (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\n\t\t\t\t\tif (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\n\t\t\t\t}\n\t\t\t\tif (note.pitches.length < 1) continue;\n\t\t\t\t\n\t\t\t\tfor (let k: number = 0; k < note.pins.length; k++) {\n\t\t\t\t\tconst pin: NotePin = note.pins[k];\n\t\t\t\t\tif (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\n\t\t\t\t\tif (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\n\t\t\t\t\tif (k >= 2) {\n\t\t\t\t\t\tif (pin.interval == note.pins[k-1].interval &&\n\t\t\t\t\t\t\tpin.interval == note.pins[k-2].interval &&\n\t\t\t\t\t\t\tpin.size == note.pins[k-1].size &&\n\t\t\t\t\t\t\tpin.size == note.pins[k-2].size)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnote.pins.splice(k-1, 1);\n\t\t\t\t\t\t\tk--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (note.start == 0) {\n\t\t\t\t\tnote.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\n\t\t\t\t} else {\n\t\t\t\t\tnote.continuesLastPattern = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.notes.push(note);\n\t\t\t\ttickClock = note.end;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class Operator {\n\tpublic frequency: number = 0;\n\tpublic amplitude: number = 0;\n\t\n\tconstructor(index: number) {\n\t\tthis.reset(index);\n\t}\n\t\n\tpublic reset(index: number): void {\n\t\tthis.frequency = 0;\n\t\tthis.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\n\t}\n}\n\nexport class SpectrumWave {\n\tpublic spectrum: number[] = [];\n\tpublic hash: number = -1;\n\t\n\tconstructor(isNoiseChannel: boolean) {\n\t\tthis.reset(isNoiseChannel);\n\t}\n\t\n\tpublic reset(isNoiseChannel: boolean): void {\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\tif (isNoiseChannel) {\n\t\t\t\tthis.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\n\t\t\t} else {\n\t\t\t\tconst isHarmonic: boolean = i==0 || i==7 || i==11 || i==14 || i==16 || i==18 || i==21 || i==23 || i>=25;\n\t\t\t\tthis.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\n\t\t\t}\n\t\t}\n\t\tthis.markCustomWaveDirty();\n\t}\n\t\n\tpublic markCustomWaveDirty(): void {\n\t\tconst hashMult: number = Synth.fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\n\t\tlet hash: number = 0;\n\t\tfor (const point of this.spectrum) hash = ((hash * hashMult) + point) >>> 0;\n\t\tthis.hash = hash;\n\t}\n}\n\nclass SpectrumWaveState {\n\tpublic wave: Float32Array | null = null;\n\tprivate _hash: number = -1;\n\t\n\tpublic getCustomWave(settings: SpectrumWave, lowestOctave: number): Float32Array {\n\t\tif (this._hash == settings.hash) return this.wave!;\n\t\tthis._hash = settings.hash;\n\t\t\n\t\tconst waveLength: number = Config.spectrumNoiseLength;\n\t\tif (this.wave == null || this.wave.length != waveLength + 1) {\n\t\t\tthis.wave = new Float32Array(waveLength + 1);\n\t\t}\n\t\tconst wave: Float32Array = this.wave;\n\t\t\n\t\tfor (let i: number = 0; i < waveLength; i++) {\n\t\t\twave[i] = 0;\n\t\t}\n\t\t\n\t\tconst highestOctave: number = 14;\n\t\tconst falloffRatio: number = 0.25;\n\t\t// Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\n\t\tconst pitchTweak: number[] = [0, 1/7, Math.log2(5/4), 3/7, Math.log2(3/2), 5/7, 6/7];\n\t\tfunction controlPointToOctave(point: number): number {\n\t\t\treturn lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\n\t\t}\n\t\t\n\t\tlet combinedAmplitude: number = 1;\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\n\t\t\tconst value1: number = (i <= 0) ? 0 : settings.spectrum[i - 1];\n\t\t\tconst value2: number = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\n\t\t\tconst octave1: number = controlPointToOctave(i - 1);\n\t\t\tlet octave2: number = controlPointToOctave(i);\n\t\t\tif (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\n\t\t\tif (value1 == 0 && value2 == 0) continue;\n\t\t\t\n\t\t\tcombinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\n\t\t}\n\t\tif (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\n\t\t\tcombinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\n\t\t}\n\t\t\n\t\tinverseRealFourierTransform(wave, waveLength);\n\t\tscaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\n\t\t\n\t\t// Duplicate the first sample at the end for easier wrap-around interpolation.\n\t\twave[waveLength] = wave[0];\n\t\t\n\t\treturn wave;\n\t}\n}\n\nexport class HarmonicsWave {\n\tpublic harmonics: number[] = [];\n\tpublic hash: number = -1;\n\t\n\tconstructor() {\n\t\tthis.reset();\n\t}\n\t\n\tpublic reset(): void {\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n\t\t\tthis.harmonics[i] = 0;\n\t\t}\n\t\tthis.harmonics[0] = Config.harmonicsMax;\n\t\tthis.harmonics[3] = Config.harmonicsMax;\n\t\tthis.harmonics[6] = Config.harmonicsMax;\n\t\tthis.markCustomWaveDirty();\n\t}\n\t\n\tpublic markCustomWaveDirty(): void {\n\t\tconst hashMult: number = Synth.fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\n\t\tlet hash: number = 0;\n\t\tfor (const point of this.harmonics) hash = ((hash * hashMult) + point) >>> 0;\n\t\tthis.hash = hash;\n\t}\n}\n\nclass HarmonicsWaveState {\n\tpublic wave: Float32Array | null = null;\n\tprivate _hash: number = -1;\n\tprivate _generatedForType: InstrumentType;\n\t\n\tpublic getCustomWave(settings: HarmonicsWave, instrumentType: InstrumentType): Float32Array {\n\t\tif (this._hash == settings.hash && this._generatedForType == instrumentType) return this.wave!;\n\t\tthis._hash = settings.hash;\n\t\tthis._generatedForType = instrumentType;\n\t\t\n\t\tconst harmonicsRendered: number = (instrumentType == InstrumentType.pickedString) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\n\t\t\n\t\tconst waveLength: number = Config.harmonicsWavelength;\n\t\tconst retroWave: Float32Array = getDrumWave(0, null, null);\n\t\t\n\t\tif (this.wave == null || this.wave.length != waveLength + 1) {\n\t\t\tthis.wave = new Float32Array(waveLength + 1);\n\t\t}\n\t\tconst wave: Float32Array = this.wave;\n\t\t\n\t\tfor (let i: number = 0; i < waveLength; i++) {\n\t\t\twave[i] = 0;\n\t\t}\n\t\t\n\t\tconst overallSlope: number = -0.25;\n\t\tlet combinedControlPointAmplitude: number = 1;\n\t\t\n\t\tfor (let harmonicIndex: number = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\n\t\t\tconst harmonicFreq: number = harmonicIndex + 1;\n\t\t\tlet controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\n\t\t\tif (harmonicIndex >= Config.harmonicsControlPoints) {\n\t\t\t\tcontrolValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\n\t\t\t}\n\t\t\tconst normalizedValue: number = controlValue / Config.harmonicsMax;\n\t\t\tlet amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\n\t\t\tif (harmonicIndex < Config.harmonicsControlPoints) {\n\t\t\t\tcombinedControlPointAmplitude += amplitude;\n\t\t\t}\n\t\t\tamplitude *= Math.pow(harmonicFreq, overallSlope);\n\t\t\t\n\t\t\t// Multiply all the sine wave amplitudes by 1 or -1 based on the LFSR\n\t\t\t// retro wave (effectively random) to avoid egregiously tall spikes.\n\t\t\tamplitude *= retroWave[harmonicIndex + 589];\n\t\t\t\n\t\t\twave[waveLength - harmonicFreq] = amplitude;\n\t\t}\n\t\t\n\t\tinverseRealFourierTransform(wave, waveLength);\n\t\t\n\t\t// Limit the maximum wave amplitude.\n\t\tconst mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\n\t\tfor (let i: number = 0; i < wave.length; i++) wave[i] *= mult;\n\t\t\n\t\tperformIntegral(wave);\n\t\t\n\t\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\n\t\twave[waveLength] = wave[0];\n\t\t\n\t\treturn wave;\n\t}\n}\n\nexport class FilterControlPoint {\n\tpublic freq: number = 0;\n\tpublic gain: number = Config.filterGainCenter;\n\tpublic type: FilterType = FilterType.peak;\n\t\n\tpublic set(freqSetting: number, gainSetting: number): void {\n\t\tthis.freq = freqSetting;\n\t\tthis.gain = gainSetting;\n\t}\n\t\n\tpublic getHz(): number {\n\t\treturn FilterControlPoint.getHzFromSettingValue(this.freq);\n\t}\n\t\n\tpublic static getHzFromSettingValue(value: number): number {\n\t\treturn Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\n\t}\n\tpublic static getSettingValueFromHz(hz: number): number {\n\t\treturn Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\n\t}\n\tpublic static getRoundedSettingValueFromHz(hz: number): number {\n\t\treturn Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\n\t}\n\t\n\tpublic getLinearGain(peakMult: number = 1.0): number {\n\t\tconst power: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n\t\tconst neutral: number = (this.type == FilterType.peak) ? 0.0 : -0.5;\n\t\tconst interpolatedPower: number = neutral + (power - neutral) * peakMult;\n\t\treturn Math.pow(2.0, interpolatedPower);\n\t}\n\tpublic static getRoundedSettingValueFromLinearGain(linearGain: number): number {\n\t\treturn Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\n\t}\n\t\n\tpublic toCoefficients(filter: FilterCoefficients, sampleRate: number, freqMult: number = 1.0, peakMult: number = 1.0): void {\n\t\tconst cornerRadiansPerSample: number = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\n\t\tconst linearGain: number = this.getLinearGain(peakMult);\n\t\tswitch (this.type) {\n\t\t\tcase FilterType.lowPass:\n\t\t\t\tfilter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n\t\t\t\tbreak;\n\t\t\tcase FilterType.highPass:\n\t\t\t\tfilter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n\t\t\t\tbreak;\n\t\t\tcase FilterType.peak:\n\t\t\t\tfilter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error();\n\t\t}\n\t}\n\t\n\tpublic getVolumeCompensationMult(): number {\n\t\tconst octave: number = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\n\t\tconst gainPow: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n\t\tswitch (this.type) {\n\t\t\tcase FilterType.lowPass:\n\t\t\t\tconst freqRelativeTo8khz: number = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\n\t\t\t\t// Reverse the frequency warping from importing legacy simplified filters to imitate how the legacy filter cutoff setting affected volume.\n\t\t\t\tconst warpedFreq: number = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\n\t\t\t\tconst warpedOctave: number = Math.log2(warpedFreq);\n\t\t\t\treturn Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\n\t\t\tcase FilterType.highPass:\n\t\t\t\treturn Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\n\t\t\tcase FilterType.peak:\n\t\t\t\tconst distanceFromCenter: number = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\n\t\t\t\tconst freqLoudness: number = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\n\t\t\t\treturn Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\n\t\t\tdefault:\n\t\t\t\tthrow new Error();\n\t\t}\n\t}\n}\n\nexport class FilterSettings {\n\tpublic readonly controlPoints: FilterControlPoint[] = [];\n\tpublic controlPointCount: number = 0;\n\t\n\tconstructor() {\n\t\tthis.reset();\n\t}\n\t\n\treset(): void {\n\t\tthis.controlPointCount = 0;\n\t}\n\t\n\taddPoint(type: FilterType, freqSetting: number, gainSetting: number): void {\n\t\tlet controlPoint: FilterControlPoint;\n\t\tif (this.controlPoints.length <= this.controlPointCount) {\n\t\t\tcontrolPoint = new FilterControlPoint();\n\t\t\tthis.controlPoints[this.controlPointCount] = controlPoint;\n\t\t} else {\n\t\t\tcontrolPoint = this.controlPoints[this.controlPointCount];\n\t\t}\n\t\tthis.controlPointCount++;\n\t\tcontrolPoint.type = type;\n\t\tcontrolPoint.set(freqSetting, gainSetting);\n\t}\n\t\n\tpublic toJsonObject(): Object {\n\t\tconst filterArray: any[] = [];\n\t\tfor (let i: number = 0; i < this.controlPointCount; i++) {\n\t\t\tconst point: FilterControlPoint = this.controlPoints[i];\n\t\t\tfilterArray.push({\n\t\t\t\t\"type\": Config.filterTypeNames[point.type],\n\t\t\t\t\"cutoffHz\": Math.round(point.getHz() * 100) / 100,\n\t\t\t\t\"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\n\t\t\t});\n\t\t}\n\t\treturn filterArray;\n\t}\n\t\n\tpublic fromJsonObject(filterObject: any): void {\n\t\tthis.controlPoints.length = 0;\n\t\tif (filterObject) {\n\t\t\tfor (const pointObject of filterObject) {\n\t\t\t\tconst point: FilterControlPoint = new FilterControlPoint();\n\t\t\t\tpoint.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\n\t\t\t\tif (<any>point.type == -1) point.type = FilterType.peak;\n\t\t\t\tif (pointObject[\"cutoffHz\"] != undefined) {\n\t\t\t\t\tpoint.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\n\t\t\t\t} else {\n\t\t\t\t\tpoint.freq = 0;\n\t\t\t\t}\n\t\t\t\tif (pointObject[\"linearGain\"] != undefined) {\n\t\t\t\t\tpoint.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\n\t\t\t\t} else {\n\t\t\t\t\tpoint.gain = Config.filterGainCenter;\n\t\t\t\t}\n\t\t\t\tthis.controlPoints.push(point);\n\t\t\t}\n\t\t}\n\t\tthis.controlPointCount = this.controlPoints.length;\n\t}\n\t\n\tpublic convertLegacySettings(legacyCutoffSetting: number, legacyResonanceSetting: number, legacyEnv: Envelope): void {\n\t\tthis.reset();\n\t\t\n\t\tconst legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\n\t\tconst legacyFilterMax: number = 0.95;\n\t\tconst legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\n\t\tconst legacyFilterMaxResonance: number = 0.95;\n\t\tconst legacyFilterCutoffRange: number = 11;\n\t\tconst legacyFilterResonanceRange: number = 8;\n\t\t\n\t\tconst resonant: boolean = (legacyResonanceSetting > 1);\n\t\tconst firstOrder: boolean = (legacyResonanceSetting == 0);\n\t\tconst cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n\t\tconst envDecays: boolean = (legacyEnv.type == EnvelopeType.flare || legacyEnv.type == EnvelopeType.twang || legacyEnv.type == EnvelopeType.decay || legacyEnv.type == EnvelopeType.noteSize);\n\t\t\n\t\tconst standardSampleRate: number = 48000;\n\t\tconst legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n\t\tconst legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n\t\t\n\t\tif (legacyEnv.type == EnvelopeType.none && !resonant && cutoffAtMax) {\n\t\t\t// The response is flat and there's no envelopes, so don't even bother adding any control points.\n\t\t} else if (firstOrder) {\n\t\t\t// In general, a 1st order lowpass can be approximated by a 2nd order lowpass\n\t\t\t// with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\n\t\t\t// However, BeepBox's original lowpass filters behaved oddly as they\n\t\t\t// approach the nyquist frequency, so I've devised this curved conversion\n\t\t\t// to guess at a perceptually appropriate new cutoff frequency and gain.\n\t\t\tconst extraOctaves: number = 3.5;\n\t\t\tconst targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\n\t\t\tconst curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\n\t\t\tconst curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\n\t\t\tconst freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n\t\t\tconst finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\n\t\t\tconst finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\n\t\t\t\n\t\t\tconst legacyFilter: FilterCoefficients = new FilterCoefficients();\n\t\t\tlegacyFilter.lowPass1stOrderSimplified(legacyRadians);\n\t\t\tconst response: FrequencyResponse = new FrequencyResponse();\n\t\t\tresponse.analyze(legacyFilter, finalRadians);\n\t\t\tconst legacyFilterGainAtNewRadians: number = response.magnitude();\n\t\t\t\n\t\t\tlet logGain: number = Math.log2(legacyFilterGainAtNewRadians);\n\t\t\t// Bias slightly toward 2^(-extraOctaves):\n\t\t\tlogGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n\t\t\t// Decaying envelopes move the cutoff frequency back into an area where the best approximation of the first order slope requires a lower gain setting.\n\t\t\tif (envDecays) logGain = Math.min(logGain, -1.0);\n\t\t\tconst convertedGain: number = Math.pow(2.0, logGain);\n\t\t\tconst gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n\t\t\t\n\t\t\tthis.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n\t\t} else {\n\t\t\tconst intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n\t\t\tconst invertedGain: number = 0.5 / intendedGain;\n\t\t\tconst maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n\t\t\tconst freqRatio: number = legacyRadians / maxRadians;\n\t\t\tconst targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n\t\t\tconst curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n\t\t\tlet curvedHz: number;\n\t\t\tif (envDecays) {\n\t\t\t\tcurvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI)\n\t\t\t} else {\n\t\t\t\tcurvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI)\n\t\t\t}\n\t\t\tconst freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n\t\t\t\n\t\t\tlet legacyFilterGain: number;\n\t\t\tif (envDecays) {\n\t\t\t\tlegacyFilterGain = intendedGain;\n\t\t\t} else {\n\t\t\t\tconst legacyFilter: FilterCoefficients = new FilterCoefficients();\n\t\t\t\tlegacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n\t\t\t\tconst response: FrequencyResponse = new FrequencyResponse();\n\t\t\t\tresponse.analyze(legacyFilter, curvedRadians);\n\t\t\t\tlegacyFilterGain = response.magnitude();\n\t\t\t}\n\t\t\tif (!resonant) legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\n\t\t\tconst gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n\t\t\t\n\t\t\tthis.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n\t\t}\n\t}\n}\n\nexport class EnvelopeSettings {\n\tpublic target: number = 0;\n\tpublic index: number = 0;\n\tpublic envelope: number = 0;\n\t\n\tconstructor() {\n\t\tthis.reset();\n\t}\n\t\n\treset(): void {\n\t\tthis.target = 0;\n\t\tthis.index = 0;\n\t\tthis.envelope = 0;\n\t}\n\t\n\tpublic toJsonObject(): Object {\n\t\tconst envelopeObject: any = {\n\t\t\t\"target\": Config.instrumentAutomationTargets[this.target].name,\n\t\t\t\"envelope\": Config.envelopes[this.envelope].name,\n\t\t};\n\t\tif (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\n\t\t\tenvelopeObject[\"index\"] = this.index;\n\t\t}\n\t\treturn envelopeObject;\n\t}\n\t\n\tpublic fromJsonObject(envelopeObject: any): void {\n\t\tthis.reset();\n\t\t\n\t\tlet target: AutomationTarget = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\n\t\tif (target == null) target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n\t\tthis.target = target.index;\n\t\t\n\t\tlet envelope: Envelope = Config.envelopes.dictionary[envelopeObject[\"envelope\"]];\n\t\tif (envelope == null) envelope = Config.envelopes.dictionary[\"none\"];\n\t\tthis.envelope = envelope.index;\n\t\t\n\t\tif (envelopeObject[\"index\"] != undefined) {\n\t\t\tthis.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\n\t\t} else {\n\t\t\tthis.index = 0;\n\t\t}\n\t}\n}\n\n// Settings that were available to old versions of BeepBox but are no longer available in the\n// current version that need to be reinterpreted as a group to determine the best way to\n// represent them in the current version.\ninterface LegacySettings {\n\tfilterCutoff?: number;\n\tfilterResonance?: number;\n\tfilterEnvelope?: Envelope;\n\tpulseEnvelope?: Envelope;\n\toperatorEnvelopes?: Envelope[];\n\tfeedbackEnvelope?: Envelope;\n}\n\nexport class Instrument {\n\tpublic type: InstrumentType = InstrumentType.chip;\n\tpublic preset: number = 0;\n\tpublic chipWave: number = 2;\n\tpublic chipNoise: number = 1;\n\tpublic eqFilter: FilterSettings = new FilterSettings();\n\tpublic noteFilter: FilterSettings = new FilterSettings();\n\tpublic envelopes: EnvelopeSettings[] = [];\n\tpublic envelopeCount: number = 0;\n\tpublic fadeIn: number = 0;\n\tpublic fadeOut: number = Config.fadeOutNeutral;\n\tpublic transition: number = Config.transitions.dictionary[\"normal\"].index;\n\tpublic pitchShift: number = 0;\n\tpublic detune: number = 0;\n\tpublic vibrato: number = 0;\n\tpublic unison: number = 0;\n\tpublic effects: number = 0;\n\tpublic chord: number = 1;\n\tpublic volume: number = 0;\n\tpublic pan: number = Config.panCenter;\n\tpublic pulseWidth: number = Config.pulseWidthRange - 1;\n\tpublic supersawDynamism: number = Config.supersawDynamismMax;\n\tpublic supersawSpread: number = Math.ceil(Config.supersawSpreadMax / 2.0);\n\tpublic supersawShape: number = 0;\n\tpublic stringSustain: number = 10;\n\tpublic stringSustainType: SustainType = SustainType.acoustic;\n\tpublic distortion: number = 0;\n\tpublic bitcrusherFreq: number = 0;\n\tpublic bitcrusherQuantization: number = 0;\n\tpublic chorus: number = 0;\n\tpublic reverb: number = 0;\n\tpublic echoSustain: number = 0;\n\tpublic echoDelay: number = 0;\n\tpublic algorithm: number = 0;\n\tpublic feedbackType: number = 0;\n\tpublic feedbackAmplitude: number = 0;\n\tpublic readonly operators: Operator[] = [];\n\tpublic readonly spectrumWave: SpectrumWave;\n\tpublic readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\n\tpublic readonly drumsetEnvelopes: number[] = [];\n\tpublic readonly drumsetSpectrumWaves: SpectrumWave[] = [];\n\t\n\tconstructor(isNoiseChannel: boolean) {\n\t\tthis.spectrumWave = new SpectrumWave(isNoiseChannel);\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\n\t\t\tthis.operators[i] = new Operator(i);\n\t\t}\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\n\t\t\tthis.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n\t\t\tthis.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n\t\t}\n\t}\n\t\n\tpublic setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean): void {\n\t\tthis.type = type;\n\t\tthis.preset = type;\n\t\tthis.volume = 0;\n\t\tthis.effects = 0;\n\t\tthis.chorus = Config.chorusRange - 1;\n\t\tthis.reverb = 2;\n\t\tthis.echoSustain = Math.floor((Config.echoSustainRange - 1) * 0.5);\n\t\tthis.echoDelay = Math.floor((Config.echoDelayRange - 1) * 0.5);\n\t\tthis.eqFilter.reset();\n\t\tthis.noteFilter.reset();\n\t\tthis.distortion = Math.floor((Config.distortionRange - 1) * 0.75);\n\t\tthis.bitcrusherFreq = Math.floor((Config.bitcrusherFreqRange - 1) * 0.5)\n\t\tthis.bitcrusherQuantization = Math.floor((Config.bitcrusherQuantizationRange - 1) * 0.5);\n\t\tthis.pan = Config.panCenter;\n\t\tthis.pitchShift = Config.pitchShiftCenter;\n\t\tthis.detune = Config.detuneCenter;\n\t\tthis.vibrato = 0;\n\t\tthis.unison = 0;\n\t\tthis.stringSustain = 10;\n\t\tthis.stringSustainType = Config.enableAcousticSustain ? SustainType.acoustic : SustainType.bright;\n\t\tthis.fadeIn = 0;\n\t\tthis.fadeOut = Config.fadeOutNeutral;\n\t\tthis.transition = Config.transitions.dictionary[\"normal\"].index;\n\t\tthis.envelopeCount = 0;\n\t\tswitch (type) {\n\t\t\tcase InstrumentType.chip:\n\t\t\t\tthis.chipWave = 2;\n\t\t\t\t// TODO: enable the chord effect?\n\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\tbreak;\n\t\t\tcase InstrumentType.fm:\n\t\t\t\tthis.chord = Config.chords.dictionary[\"custom interval\"].index;\n\t\t\t\tthis.algorithm = 0;\n\t\t\t\tthis.feedbackType = 0;\n\t\t\t\tthis.feedbackAmplitude = 0;\n\t\t\t\tfor (let i: number = 0; i < this.operators.length; i++) {\n\t\t\t\t\tthis.operators[i].reset(i);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase InstrumentType.noise:\n\t\t\t\tthis.chipNoise = 1;\n\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\tbreak;\n\t\t\tcase InstrumentType.spectrum:\n\t\t\t\tthis.chord = Config.chords.dictionary[\"simultaneous\"].index;\n\t\t\t\tthis.spectrumWave.reset(isNoiseChannel);\n\t\t\t\tbreak;\n\t\t\tcase InstrumentType.drumset:\n\t\t\t\tthis.chord = Config.chords.dictionary[\"simultaneous\"].index;\n\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\n\t\t\t\t\tthis.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n\t\t\t\t\tthis.drumsetSpectrumWaves[i].reset(isNoiseChannel);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase InstrumentType.harmonics:\n\t\t\t\tthis.chord = Config.chords.dictionary[\"simultaneous\"].index;\n\t\t\t\tthis.harmonicsWave.reset();\n\t\t\t\tbreak;\n\t\t\tcase InstrumentType.pwm:\n\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange - 1;\n\t\t\t\tbreak;\n\t\t\tcase InstrumentType.pickedString:\n\t\t\t\tthis.chord = Config.chords.dictionary[\"strum\"].index;\n\t\t\t\tthis.harmonicsWave.reset();\n\t\t\t\tbreak;\n\t\t\tcase InstrumentType.supersaw:\n\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\n\t\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n\t\t\t\tthis.supersawShape = 0;\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange - 1;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unrecognized instrument type: \" + type);\n\t\t}\n\t\t// Chip/noise instruments had arpeggio and FM had custom interval but neither\n\t\t// explicitly saved the chorus setting beforeSeven so enable it here. The effects\n\t\t// will otherwise get overridden when reading SongTagCode.startInstrument.\n\t\tif (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n\t\t\t// Enable chord if it was used.\n\t\t\tthis.effects = (this.effects | (1 << EffectType.chord));\n\t\t}\n\t}\n\t\n\tpublic convertLegacySettings(legacySettings: LegacySettings): void {\n\t\tlet legacyCutoffSetting: number | undefined = legacySettings.filterCutoff;\n\t\tlet legacyResonanceSetting: number | undefined = legacySettings.filterResonance;\n\t\tlet legacyFilterEnv: Envelope | undefined = legacySettings.filterEnvelope;\n\t\tlet legacyPulseEnv: Envelope | undefined = legacySettings.pulseEnvelope;\n\t\tlet legacyOperatorEnvelopes: Envelope[] | undefined = legacySettings.operatorEnvelopes;\n\t\tlet legacyFeedbackEnv: Envelope | undefined = legacySettings.feedbackEnvelope;\n\t\t\n\t\t// legacy defaults:\n\t\tif (legacyCutoffSetting == undefined) legacyCutoffSetting = (this.type == InstrumentType.chip) ? 6 : 10;\n\t\tif (legacyResonanceSetting == undefined) legacyResonanceSetting = 0;\n\t\tif (legacyFilterEnv == undefined) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n\t\tif (legacyPulseEnv == undefined) legacyPulseEnv = Config.envelopes.dictionary[(this.type == InstrumentType.pwm) ? \"twang 2\" : \"none\"];\n\t\tif (legacyOperatorEnvelopes == undefined) legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == InstrumentType.fm) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\n\t\tif (legacyFeedbackEnv == undefined) legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\n\t\t\n\t\t// The \"punch\" envelope is special: it goes *above* the chosen cutoff. But if the cutoff was already at the max, it couldn't go any higher... except in the current version of BeepBox I raised the max cutoff so it *can* but then it sounds different, so to preserve the original sound let's just remove the punch envelope.\n\t\tconst legacyFilterCutoffRange: number = 11;\n\t\tconst cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n\t\tif (cutoffAtMax && legacyFilterEnv.type == EnvelopeType.punch) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n\t\t\n\t\tconst carrierCount: number = Config.algorithms[this.algorithm].carrierCount;\n\t\tlet noCarriersControlledByNoteSize: boolean = true;\n\t\tlet allCarriersControlledByNoteSize: boolean = true;\n\t\tlet noteSizeControlsSomethingElse: boolean = (legacyFilterEnv.type == EnvelopeType.noteSize) || (legacyPulseEnv.type == EnvelopeType.noteSize);\n\t\tif (this.type == InstrumentType.fm) {\n\t\t\tnoteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == EnvelopeType.noteSize);\n\t\t\tfor (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\n\t\t\t\tif (i < carrierCount) {\n\t\t\t\t\tif (legacyOperatorEnvelopes[i].type != EnvelopeType.noteSize) {\n\t\t\t\t\t\tallCarriersControlledByNoteSize = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnoCarriersControlledByNoteSize = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnoteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == EnvelopeType.noteSize);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.envelopeCount = 0;\n\t\t\n\t\tif (this.type == InstrumentType.fm) {\n\t\t\tif (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\n\t\t\t\tthis.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\n\t\t\t} else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\n\t\t\t\tthis.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (legacyFilterEnv.type == EnvelopeType.none) {\n\t\t\tthis.noteFilter.reset();\n\t\t\tthis.eqFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n\t\t\tthis.effects &= ~(1 << EffectType.noteFilter);\n\t\t} else {\n\t\t\tthis.eqFilter.reset();\n\t\t\tthis.noteFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n\t\t\tthis.effects |= 1 << EffectType.noteFilter;\n\t\t\tthis.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, legacyFilterEnv.index);\n\t\t}\n\t\t\n\t\tif (legacyPulseEnv.type != EnvelopeType.none) {\n\t\t\tthis.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index);\n\t\t}\n\t\t\n\t\tfor (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\n\t\t\tif (i < carrierCount && allCarriersControlledByNoteSize) continue;\n\t\t\tif (legacyOperatorEnvelopes[i].type != EnvelopeType.none) {\n\t\t\t\tthis.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (legacyFeedbackEnv.type != EnvelopeType.none) {\n\t\t\tthis.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index);\n\t\t}\n\t}\n\t\n\tpublic toJsonObject(): Object {\n\t\tconst instrumentObject: any = {\n\t\t\t\"type\": Config.instrumentTypeNames[this.type],\n\t\t\t\"volume\": (5 - this.volume) * 20,\n\t\t\t\"eqFilter\": this.eqFilter.toJsonObject(),\n\t\t};\n\t\t\n\t\tif (this.preset != this.type) {\n\t\t\tinstrumentObject[\"preset\"] = this.preset;\n\t\t}\n\t\t\n\t\tconst effects: string[] = [];\n\t\tfor (const effect of Config.effectOrder) {\n\t\t\tif (this.effects & (1 << effect)) {\n\t\t\t\teffects.push(Config.effectNames[effect]);\n\t\t\t}\n\t\t}\n\t\tinstrumentObject[\"effects\"] = effects;\n\t\t\n\t\t\n\t\tif (effectsIncludeTransition(this.effects)) {\n\t\t\tinstrumentObject[\"transition\"] = Config.transitions[this.transition].name;\n\t\t}\n\t\tif (effectsIncludeChord(this.effects)) {\n\t\t\tinstrumentObject[\"chord\"] = this.getChord().name;\n\t\t}\n\t\tif (effectsIncludePitchShift(this.effects)) {\n\t\t\tinstrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\n\t\t}\n\t\tif (effectsIncludeDetune(this.effects)) {\n\t\t\tinstrumentObject[\"detuneCents\"] = Synth.detuneToCents(this.detune - Config.detuneCenter);\n\t\t}\n\t\tif (effectsIncludeVibrato(this.effects)) {\n\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\n\t\t}\n\t\tif (effectsIncludeNoteFilter(this.effects)) {\n\t\t\tinstrumentObject[\"noteFilter\"] = this.noteFilter.toJsonObject();\n\t\t}\n\t\tif (effectsIncludeDistortion(this.effects)) {\n\t\t\tinstrumentObject[\"distortion\"] = Math.round(100 * this.distortion / (Config.distortionRange - 1));\n\t\t}\n\t\tif (effectsIncludeBitcrusher(this.effects)) {\n\t\t\tinstrumentObject[\"bitcrusherOctave\"] = (Config.bitcrusherFreqRange - 1 - this.bitcrusherFreq) * Config.bitcrusherOctaveStep;\n\t\t\tinstrumentObject[\"bitcrusherQuantization\"] = Math.round(100 * this.bitcrusherQuantization / (Config.bitcrusherQuantizationRange - 1));\n\t\t}\n\t\tif (effectsIncludePanning(this.effects)) {\n\t\t\tinstrumentObject[\"pan\"] = Math.round(100 * (this.pan - Config.panCenter) / Config.panCenter);\n\t\t}\n\t\tif (effectsIncludeChorus(this.effects)) {\n\t\t\tinstrumentObject[\"chorus\"] = Math.round(100 * this.chorus / (Config.chorusRange - 1));\n\t\t}\n\t\tif (effectsIncludeEcho(this.effects)) {\n\t\t\tinstrumentObject[\"echoSustain\"] = Math.round(100 * this.echoSustain / (Config.echoSustainRange - 1));\n\t\t\tinstrumentObject[\"echoDelayBeats\"] = Math.round(1000 * (this.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat)) / 1000;\n\t\t}\n\t\tif (effectsIncludeReverb(this.effects)) {\n\t\t\tinstrumentObject[\"reverb\"] = Math.round(100 * this.reverb / (Config.reverbRange - 1));\n\t\t}\n\t\t\n\t\tif (this.type != InstrumentType.drumset) {\n\t\t\tinstrumentObject[\"fadeInSeconds\"] = Math.round(10000 * Synth.fadeInSettingToSeconds(this.fadeIn)) / 10000;\n\t\t\tinstrumentObject[\"fadeOutTicks\"] = Synth.fadeOutSettingToTicks(this.fadeOut);\n\t\t}\n\t\t\n\t\tif (this.type == InstrumentType.harmonics || this.type == InstrumentType.pickedString) {\n\t\t\tinstrumentObject[\"harmonics\"] = [];\n\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\tinstrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.type == InstrumentType.noise) {\n\t\t\tinstrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\n\t\t} else if (this.type == InstrumentType.spectrum) {\n\t\t\tinstrumentObject[\"spectrum\"] = [];\n\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\tinstrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\n\t\t\t}\n\t\t} else if (this.type == InstrumentType.drumset) {\n\t\t\tinstrumentObject[\"drums\"] = [];\n\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\n\t\t\t\tconst spectrum: number[] = [];\n\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\tspectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\n\t\t\t\t}\n\t\t\t\tinstrumentObject[\"drums\"][j] = {\n\t\t\t\t\t\"filterEnvelope\": this.getDrumsetEnvelope(j).name,\n\t\t\t\t\t\"spectrum\": spectrum,\n\t\t\t\t};\n\t\t\t}\n\t\t} else if (this.type == InstrumentType.chip) {\n\t\t\tinstrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n\t\t\tinstrumentObject[\"unison\"] = Config.unisons[this.unison].name;\n\t\t} else if (this.type == InstrumentType.pwm) {\n\t\t\tinstrumentObject[\"pulseWidth\"] = Math.round(getPulseWidthRatio(this.pulseWidth) * 100 * 100000) / 100000;\n\t\t} else if (this.type == InstrumentType.supersaw) {\n\t\t\tinstrumentObject[\"pulseWidth\"] = Math.round(getPulseWidthRatio(this.pulseWidth) * 100 * 100000) / 100000;\n\t\t\tinstrumentObject[\"dynamism\"] = Math.round(100 * this.supersawDynamism / Config.supersawDynamismMax);\n\t\t\tinstrumentObject[\"spread\"] = Math.round(100 * this.supersawSpread / Config.supersawSpreadMax);\n\t\t\tinstrumentObject[\"shape\"] = Math.round(100 * this.supersawShape / Config.supersawShapeMax);\n\t\t} else if (this.type == InstrumentType.pickedString) {\n\t\t\tinstrumentObject[\"unison\"] = Config.unisons[this.unison].name;\n\t\t\tinstrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\n\t\t\tif (Config.enableAcousticSustain) {\n\t\t\t\tinstrumentObject[\"stringSustainType\"] = Config.sustainTypeNames[this.stringSustainType];\n\t\t\t}\n\t\t} else if (this.type == InstrumentType.harmonics) {\n\t\t\tinstrumentObject[\"unison\"] = Config.unisons[this.unison].name;\n\t\t} else if (this.type == InstrumentType.fm) {\n\t\t\tconst operatorArray: Object[] = [];\n\t\t\tfor (const operator of this.operators) {\n\t\t\t\toperatorArray.push({\n\t\t\t\t\t\"frequency\": Config.operatorFrequencies[operator.frequency].name,\n\t\t\t\t\t\"amplitude\": operator.amplitude,\n\t\t\t\t});\n\t\t\t}\n\t\t\tinstrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\n\t\t\tinstrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\n\t\t\tinstrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n\t\t\tinstrumentObject[\"operators\"] = operatorArray;\n\t\t} else {\n\t\t\tthrow new Error(\"Unrecognized instrument type\");\n\t\t}\n\t\t\n\t\tconst envelopes: any[] = [];\n\t\tfor (let i = 0; i < this.envelopeCount; i++) {\n\t\t\tenvelopes.push(this.envelopes[i].toJsonObject());\n\t\t}\n\t\tinstrumentObject[\"envelopes\"] = envelopes;\n\t\t\n\t\treturn instrumentObject;\n\t}\n\t\n\tpublic fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, legacyGlobalReverb: number = 0): void {\n\t\tif (instrumentObject == undefined) instrumentObject = {};\n\t\t\n\t\tlet type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\n\t\tif (<any>type == -1) type = isNoiseChannel ? InstrumentType.noise : InstrumentType.chip;\n\t\tthis.setTypeAndReset(type, isNoiseChannel);\n\t\t\n\t\tif (instrumentObject[\"preset\"] != undefined) {\n\t\t\tthis.preset = instrumentObject[\"preset\"] >>> 0;\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"volume\"] != undefined) {\n\t\t\tthis.volume = clamp(0, Config.volumeRange, Math.round(5 - (instrumentObject[\"volume\"] | 0) / 20));\n\t\t} else {\n\t\t\tthis.volume = 0;\n\t\t}\n\t\t\n\t\tif (Array.isArray(instrumentObject[\"effects\"])) {\n\t\t\tlet effects: number = 0;\n\t\t\tfor (let i: number = 0; i < instrumentObject[\"effects\"].length; i++) {\n\t\t\t\teffects = effects | (1 << Config.effectNames.indexOf(instrumentObject[\"effects\"][i]));\n\t\t\t}\n\t\t\tthis.effects = (effects & ((1 << EffectType.length) - 1));\n\t\t} else {\n\t\t\t// The index of these names is reinterpreted as a bitfield, which relies on reverb and chorus being the first effects!\n\t\t\tconst legacyEffectsNames: string[] = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\n\t\t\tthis.effects = legacyEffectsNames.indexOf(instrumentObject[\"effects\"]);\n\t\t\tif (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\n\t\t}\n\t\t\n\t\tthis.transition = Config.transitions.dictionary[\"normal\"].index; // default value.\n\t\tconst transitionProperty: any = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so check that too.\n\t\tif (transitionProperty != undefined) {\n\t\t\tlet transition: Transition | undefined = Config.transitions.dictionary[transitionProperty];\n\t\t\tif (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\n\t\t\t\tconst legacySettings = (<any>{\n\t\t\t\t\t\"binary\":      {transition: \"interrupt\", fadeInSeconds: 0.0,    fadeOutTicks: -1},\n\t\t\t\t\t\"seamless\":    {transition: \"interrupt\", fadeInSeconds: 0.0,    fadeOutTicks: -1},\n\t\t\t\t\t\"sudden\":      {transition: \"normal\",    fadeInSeconds: 0.0,    fadeOutTicks: -3},\n\t\t\t\t\t\"hard\":        {transition: \"normal\",    fadeInSeconds: 0.0,    fadeOutTicks: -3},\n\t\t\t\t\t\"smooth\":      {transition: \"normal\",    fadeInSeconds: 0.025,  fadeOutTicks: -3},\n\t\t\t\t\t\"soft\":        {transition: \"normal\",    fadeInSeconds: 0.025,  fadeOutTicks: -3},\n\t\t\t\t\t// Note that the old slide transition has the same name as a new slide transition that is different.\n\t\t\t\t\t// Only apply legacy settings if the instrument JSON was created before, based on the presence\n\t\t\t\t\t// of the fade in/out fields.\n\t\t\t\t\t\"slide\":       {transition: \"slide in pattern\", fadeInSeconds: 0.025,  fadeOutTicks: -3},\n\t\t\t\t\t\"cross fade\":  {transition: \"normal\",    fadeInSeconds: 0.04,   fadeOutTicks:  6},\n\t\t\t\t\t\"hard fade\":   {transition: \"normal\",    fadeInSeconds: 0.0,    fadeOutTicks: 48},\n\t\t\t\t\t\"medium fade\": {transition: \"normal\",    fadeInSeconds: 0.0125, fadeOutTicks: 72},\n\t\t\t\t\t\"soft fade\":   {transition: \"normal\",    fadeInSeconds: 0.06,   fadeOutTicks: 96},\n\t\t\t\t})[transitionProperty];\n\t\t\t\tif (legacySettings != undefined) {\n\t\t\t\t\ttransition = Config.transitions.dictionary[legacySettings.transition];\n\t\t\t\t\t// These may be overridden below.\n\t\t\t\t\tthis.fadeIn = Synth.secondsToFadeInSetting(legacySettings.fadeInSeconds);\n\t\t\t\t\tthis.fadeOut = Synth.ticksToFadeOutSetting(legacySettings.fadeOutTicks);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (transition != undefined) this.transition = transition.index;\n\t\t\t\n\t\t\tif (this.transition != Config.transitions.dictionary[\"normal\"].index) {\n\t\t\t\t// Enable transition if it was used.\n\t\t\t\tthis.effects = (this.effects | (1 << EffectType.transition));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Overrides legacy settings in transition above.\n\t\tif (instrumentObject[\"fadeInSeconds\"] != undefined) {\n\t\t\tthis.fadeIn = Synth.secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\n\t\t}\n\t\tif (instrumentObject[\"fadeOutTicks\"] != undefined) {\n\t\t\tthis.fadeOut = Synth.ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\n\t\t}\n\t\t\n\t\t{\n\t\t\t// Note that the chord setting may be overridden by instrumentObject[\"chorus\"] below.\n\t\t\tconst chordProperty: any = instrumentObject[\"chord\"];\n\t\t\tconst legacyChordNames: Dictionary<string> = {\"harmony\": \"simultaneous\"};\n\t\t\tconst chord: Chord | undefined = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\n\t\t\tif (chord != undefined) {\n\t\t\t\tthis.chord = chord.index;\n\t\t\t} else {\n\t\t\t\t// Different instruments have different default chord types based on historical behaviour.\n\t\t\t\tif (this.type == InstrumentType.noise) {\n\t\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\t} else if (this.type == InstrumentType.pickedString) {\n\t\t\t\t\tthis.chord = Config.chords.dictionary[\"strum\"].index;\n\t\t\t\t} else if (this.type == InstrumentType.chip) {\n\t\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\t} else if (this.type == InstrumentType.fm) {\n\t\t\t\t\tthis.chord = Config.chords.dictionary[\"custom interval\"].index;\n\t\t\t\t} else {\n\t\t\t\t\tthis.chord = Config.chords.dictionary[\"simultaneous\"].index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.unison = Config.unisons.dictionary[\"none\"].index; // default value.\n\t\tconst unisonProperty: any = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"]; // The unison property has gone by various names in the past.\n\t\tif (unisonProperty != undefined) {\n\t\t\tconst legacyChorusNames: Dictionary<string> = {\"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\"};\n\t\t\tconst unison: Unison | undefined = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\n\t\t\tif (unison != undefined) this.unison = unison.index;\n\t\t}\n\t\tif (instrumentObject[\"chorus\"] == \"custom harmony\") {\n\t\t\t// The original chorus setting had an option that now maps to two different settings. Override those if necessary.\n\t\t\tthis.unison = Config.unisons.dictionary[\"hum\"].index;\n\t\t\tthis.chord = Config.chords.dictionary[\"custom interval\"].index;\n\t\t}\n\t\tif (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"effects\"])) {\n\t\t\t// Enable chord if it was used.\n\t\t\tthis.effects = (this.effects | (1 << EffectType.chord));\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\n\t\t\tthis.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\n\t\t}\n\t\tif (instrumentObject[\"detuneCents\"] != undefined) {\n\t\t\tthis.detune = clamp(0, Config.detuneMax + 1, Math.round(Config.detuneCenter + Synth.centsToDetune(+instrumentObject[\"detuneCents\"])));\n\t\t}\n\t\t\n\t\tthis.vibrato = Config.vibratos.dictionary[\"none\"].index; // default value.\n\t\tconst vibratoProperty: any = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"]; // The vibrato property was previously called \"effect\", not to be confused with the current \"effects\".\n\t\tif (vibratoProperty != undefined) {\n\t\t\tconst legacyVibratoNames: Dictionary<string> = {\"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\"};\n\t\t\tconst vibrato: Vibrato | undefined = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\n\t\t\tif (vibrato != undefined) this.vibrato = vibrato.index;\n\t\t\t\n\t\t\t// Old songs may have a vibrato effect without explicitly enabling it.\n\t\t\tif (vibrato != Config.vibratos.dictionary[\"none\"]) {\n\t\t\t\tthis.effects = (this.effects | (1 << EffectType.vibrato));\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"pan\"] != undefined) {\n\t\t\tthis.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\n\t\t\t\n\t\t\t// Old songs may have a panning effect without explicitly enabling it.\n\t\t\tif (this.pan != Config.panCenter) {\n\t\t\t\tthis.effects = (this.effects | (1 << EffectType.panning));\n\t\t\t}\n\t\t} else {\n\t\t\tthis.pan = Config.panCenter;\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"distortion\"] != undefined) {\n\t\t\tthis.distortion = clamp(0, Config.distortionRange, Math.round((Config.distortionRange - 1) * (instrumentObject[\"distortion\"] | 0) / 100));\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"bitcrusherOctave\"] != undefined) {\n\t\t\tthis.bitcrusherFreq = Config.bitcrusherFreqRange - 1 - (+instrumentObject[\"bitcrusherOctave\"]) / Config.bitcrusherOctaveStep;\n\t\t}\n\t\tif (instrumentObject[\"bitcrusherQuantization\"] != undefined) {\n\t\t\tthis.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, Math.round((Config.bitcrusherQuantizationRange - 1) * (instrumentObject[\"bitcrusherQuantization\"] | 0) / 100));\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"echoSustain\"] != undefined) {\n\t\t\tthis.echoSustain = clamp(0, Config.echoSustainRange, Math.round((Config.echoSustainRange - 1) * (instrumentObject[\"echoSustain\"] | 0) / 100));\n\t\t}\n\t\tif (instrumentObject[\"echoDelayBeats\"] != undefined) {\n\t\t\tthis.echoDelay = clamp(0, Config.echoDelayRange, Math.round((+instrumentObject[\"echoDelayBeats\"]) * (Config.ticksPerPart * Config.partsPerBeat) / Config.echoDelayStepTicks - 1.0));\n\t\t}\n\t\t\n\t\tif (!isNaN(instrumentObject[\"chorus\"])) {\n\t\t\tthis.chorus = clamp(0, Config.chorusRange, Math.round((Config.chorusRange - 1) * (instrumentObject[\"chorus\"] | 0) / 100));\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"reverb\"] != undefined) {\n\t\t\tthis.reverb = clamp(0, Config.reverbRange, Math.round((Config.reverbRange - 1) * (instrumentObject[\"reverb\"] | 0) / 100));\n\t\t} else {\n\t\t\tif (legacyGlobalReverb == 0) {\n\t\t\t\t// If the original song reverb was zero, just disable the instrument reverb effect entirely.\n\t\t\t\tthis.effects = (this.effects & (~(1 << EffectType.reverb)));\n\t\t\t} else {\n\t\t\t\tthis.reverb = legacyGlobalReverb;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"pulseWidth\"] != undefined) {\n\t\t\tthis.pulseWidth = clamp(0, Config.pulseWidthRange, Math.round(Math.log2((+instrumentObject[\"pulseWidth\"]) / 50) / 0.5 - 1 + 8));\n\t\t} else {\n\t\t\tthis.pulseWidth = Config.pulseWidthRange - 1;\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"dynamism\"] != undefined) {\n\t\t\tthis.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, Math.round(Config.supersawDynamismMax * (instrumentObject[\"dynamism\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\n\t\t}\n\t\tif (instrumentObject[\"spread\"] != undefined) {\n\t\t\tthis.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, Math.round(Config.supersawSpreadMax * (instrumentObject[\"spread\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n\t\t}\n\t\tif (instrumentObject[\"shape\"] != undefined) {\n\t\t\tthis.supersawShape = clamp(0, Config.supersawShapeMax + 1, Math.round(Config.supersawShapeMax * (instrumentObject[\"shape\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawShape = 0;\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"harmonics\"] != undefined) {\n\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\tthis.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\n\t\t\t}\n\t\t\tthis.harmonicsWave.markCustomWaveDirty();\n\t\t} else {\n\t\t\tthis.harmonicsWave.reset();\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"spectrum\"] != undefined) {\n\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\tthis.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\n\t\t\t}\n\t\t\tthis.spectrumWave.markCustomWaveDirty();\n\t\t} else {\n\t\t\tthis.spectrumWave.reset(isNoiseChannel);\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"stringSustain\"] != undefined) {\n\t\t\tthis.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.stringSustain = 10;\n\t\t}\n\t\tthis.stringSustainType = Config.enableAcousticSustain ? Config.sustainTypeNames.indexOf(instrumentObject[\"stringSustainType\"]) : SustainType.bright;\n\t\tif (<any>this.stringSustainType == -1) this.stringSustainType = SustainType.bright;\n\t\t\n\t\tif (this.type == InstrumentType.noise) {\n\t\t\tthis.chipNoise = Config.chipNoises.findIndex(wave=>wave.name==instrumentObject[\"wave\"]);\n\t\t\tif (this.chipNoise == -1) this.chipNoise = 1;\n\t\t}\n\t\t\n\t\tconst legacyEnvelopeNames: Dictionary<string> = {\"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\"};\n\t\tconst getEnvelope = (name: any): Envelope | undefined => (legacyEnvelopeNames[name] != undefined) ? Config.envelopes.dictionary[legacyEnvelopeNames[name]] : Config.envelopes.dictionary[name];\n\t\t\n\t\tif (this.type == InstrumentType.drumset) {\n\t\t\tif (instrumentObject[\"drums\"] != undefined) {\n\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\n\t\t\t\t\tconst drum: any = instrumentObject[\"drums\"][j];\n\t\t\t\t\tif (drum == undefined) continue;\n\t\t\t\t\t\n\t\t\t\t\tthis.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index; // default value.\n\t\t\t\t\tif (drum[\"filterEnvelope\"] != undefined) {\n\t\t\t\t\t\tconst envelope: Envelope | undefined = getEnvelope(drum[\"filterEnvelope\"]);\n\t\t\t\t\t\tif (envelope != undefined) this.drumsetEnvelopes[j] = envelope.index;\n\t\t\t\t\t}\n\t\t\t\t\tif (drum[\"spectrum\"] != undefined) {\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\t\tthis.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.type == InstrumentType.chip) {\n\t\t\tconst legacyWaveNames: Dictionary<number> = {\"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0};\n\t\t\tthis.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave=>wave.name==instrumentObject[\"wave\"]);\n\t\t\tif (this.chipWave == -1) this.chipWave = 1;\n\t\t}\n\t\t\n\t\tif (this.type == InstrumentType.fm) {\n\t\t\tthis.algorithm = Config.algorithms.findIndex(algorithm=>algorithm.name==instrumentObject[\"algorithm\"]);\n\t\t\tif (this.algorithm == -1) this.algorithm = 0;\n\t\t\tthis.feedbackType = Config.feedbacks.findIndex(feedback=>feedback.name==instrumentObject[\"feedbackType\"]);\n\t\t\tif (this.feedbackType == -1) this.feedbackType = 0;\n\t\t\tif (instrumentObject[\"feedbackAmplitude\"] != undefined) {\n\t\t\t\tthis.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\n\t\t\t} else {\n\t\t\t\tthis.feedbackAmplitude = 0;\n\t\t\t}\n\t\t\t\n\t\t\tfor (let j: number = 0; j < Config.operatorCount; j++) {\n\t\t\t\tconst operator: Operator = this.operators[j];\n\t\t\t\tlet operatorObject: any = undefined;\n\t\t\t\tif (instrumentObject[\"operators\"] != undefined) operatorObject = instrumentObject[\"operators\"][j];\n\t\t\t\tif (operatorObject == undefined) operatorObject = {};\n\t\t\t\t\n\t\t\t\toperator.frequency = Config.operatorFrequencies.findIndex(freq=>freq.name==operatorObject[\"frequency\"]);\n\t\t\t\tif (operator.frequency == -1) operator.frequency = 0;\n\t\t\t\tif (operatorObject[\"amplitude\"] != undefined) {\n\t\t\t\t\toperator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\n\t\t\t\t} else {\n\t\t\t\t\toperator.amplitude = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (instrumentObject[\"noteFilter\"] != undefined) {\n\t\t\tthis.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\n\t\t} else {\n\t\t\tthis.noteFilter.reset();\n\t\t}\n\t\tif (Array.isArray(instrumentObject[\"eqFilter\"])) {\n\t\t\tthis.eqFilter.fromJsonObject(instrumentObject[\"eqFilter\"]);\n\t\t} else {\n\t\t\tthis.eqFilter.reset();\n\t\t\t\n\t\t\tconst legacySettings: LegacySettings = {};\n\t\t\t\n\t\t\t// Try converting from legacy filter settings.\n\t\t\tconst filterCutoffMaxHz: number = 8000;\n\t\t\tconst filterCutoffRange: number = 11;\n\t\t\tconst filterResonanceRange: number = 8;\n\t\t\tif (instrumentObject[\"filterCutoffHz\"] != undefined) {\n\t\t\t\tlegacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\n\t\t\t} else {\n\t\t\t\tlegacySettings.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\n\t\t\t}\n\t\t\tif (instrumentObject[\"filterResonance\"] != undefined) {\n\t\t\t\tlegacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\n\t\t\t} else {\n\t\t\t\tlegacySettings.filterResonance = 0;\n\t\t\t}\n\t\t\t\n\t\t\tlegacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\n\t\t\tlegacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\n\t\t\tlegacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\n\t\t\tif (Array.isArray(instrumentObject[\"operators\"])) {\n\t\t\t\tlegacySettings.operatorEnvelopes = [];\n\t\t\t\tfor (let j: number = 0; j < Config.operatorCount; j++) {\n\t\t\t\t\tlet envelope: Envelope | undefined;\n\t\t\t\t\tif (instrumentObject[\"operators\"][j] != undefined) {\n\t\t\t\t\t\tenvelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\n\t\t\t\t\t}\n\t\t\t\t\tlegacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Try converting from even older legacy filter settings.\n\t\t\tif (instrumentObject[\"filter\"] != undefined) {\n\t\t\t\tconst legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\n\t\t\t\tconst legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n\t\t\t\tconst filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\n\t\t\t\tconst oldFilterNames: Dictionary<number> = {\"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4};\n\t\t\t\tlet legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\n\t\t\t\tif (legacyFilter == -1) legacyFilter = 0;\n\t\t\t\tlegacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n\t\t\t\tlegacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\n\t\t\t\tlegacySettings.filterResonance = 0;\n\t\t\t}\n\t\t\t\n\t\t\tthis.convertLegacySettings(legacySettings);\n\t\t}\n\t\t\n\t\tif (Array.isArray(instrumentObject[\"envelopes\"])) {\n\t\t\tconst envelopeArray: any[] = instrumentObject[\"envelopes\"];\n\t\t\tfor (let i = 0; i < envelopeArray.length; i++) {\n\t\t\t\tif (this.envelopeCount >= Config.maxEnvelopeCount) break;\n\t\t\t\tconst tempEnvelope: EnvelopeSettings = new EnvelopeSettings();\n\t\t\t\ttempEnvelope.fromJsonObject(envelopeArray[i]);\n\t\t\t\tthis.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static frequencyFromPitch(pitch: number): number {\n\t\treturn 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\n\t}\n\t\n\tpublic addEnvelope(target: number, index: number, envelope: number): void {\n\t\tif (!this.supportsEnvelopeTarget(target, index)) throw new Error();\n\t\tif (this.envelopeCount >= Config.maxEnvelopeCount) throw new Error();\n\t\twhile (this.envelopes.length <= this.envelopeCount) this.envelopes[this.envelopes.length] = new EnvelopeSettings();\n\t\tconst envelopeSettings: EnvelopeSettings = this.envelopes[this.envelopeCount];\n\t\tenvelopeSettings.target = target;\n\t\tenvelopeSettings.index = index;\n\t\tenvelopeSettings.envelope = envelope;\n\t\tthis.envelopeCount++;\n\t}\n\t\n\tpublic supportsEnvelopeTarget(target: number, index: number): boolean {\n\t\tconst automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\n\t\tif (automationTarget.computeIndex == null && automationTarget.name != \"none\") {\n\t\t\treturn false;\n\t\t}\n\t\tif (index >= automationTarget.maxCount) {\n\t\t\treturn false;\n\t\t}\n\t\tif (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\n\t\t\treturn false;\n\t\t}\n\t\tif (automationTarget.effect != null && (this.effects & (1 << automationTarget.effect)) == 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (automationTarget.isFilter) {\n\t\t\t//if (automationTarget.perNote) {\n\t\t\t\tif (index >= this.noteFilter.controlPointCount) return false;\n\t\t\t//} else {\n\t\t\t//\tif (index >= this.eqFilter.controlPointCount)   return false;\n\t\t\t//}\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tpublic clearInvalidEnvelopeTargets(): void {\n\t\tfor (let envelopeIndex: number = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\n\t\t\tconst target: number = this.envelopes[envelopeIndex].target;\n\t\t\tconst index: number = this.envelopes[envelopeIndex].index;\n\t\t\tif (!this.supportsEnvelopeTarget(target, index)) {\n\t\t\t\tthis.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n\t\t\t\tthis.envelopes[envelopeIndex].index = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic getTransition(): Transition {\n\t\treturn effectsIncludeTransition(this.effects) ? Config.transitions[this.transition] : Config.transitions.dictionary[\"normal\"];\n\t}\n\t\n\tpublic getFadeInSeconds(): number {\n\t\treturn (this.type == InstrumentType.drumset) ? 0.0 : Synth.fadeInSettingToSeconds(this.fadeIn);\n\t}\n\t\n\tpublic getFadeOutTicks(): number {\n\t\treturn (this.type == InstrumentType.drumset) ? Config.drumsetFadeOutTicks : Synth.fadeOutSettingToTicks(this.fadeOut)\n\t}\n\t\n\tpublic getChord(): Chord {\n\t\treturn effectsIncludeChord(this.effects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\n\t}\n\t\n\tpublic getDrumsetEnvelope(pitch: number): Envelope {\n\t\tif (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\n\t\treturn Config.envelopes[this.drumsetEnvelopes[pitch]];\n\t}\n}\n\nexport class Channel {\n\tpublic octave: number = 0;\n\tpublic readonly instruments: Instrument[] = [];\n\tpublic readonly patterns: Pattern[] = [];\n\tpublic readonly bars: number[] = [];\n\tpublic muted: boolean = false;\n}\n\nexport class Song {\n\tprivate static readonly _format: string = \"BeepBox\";\n\tprivate static readonly _oldestVersion: number = 2;\n\tprivate static readonly _latestVersion: number = 9;\n\t\n\tpublic scale: number;\n\tpublic key: number;\n\tpublic tempo: number;\n\tpublic beatsPerBar: number;\n\tpublic barCount: number;\n\tpublic patternsPerChannel: number;\n\tpublic rhythm: number;\n\tpublic layeredInstruments: boolean;\n\tpublic patternInstruments: boolean;\n\tpublic loopStart: number;\n\tpublic loopLength: number;\n\tpublic pitchChannelCount: number;\n\tpublic noiseChannelCount: number;\n\tpublic readonly channels: Channel[] = [];\n\t\n\tconstructor(string?: string) {\n\t\tif (string != undefined) {\n\t\t\tthis.fromBase64String(string);\n\t\t} else {\n\t\t\tthis.initToDefault(true);\n\t\t}\n\t}\n\t\n\tpublic getChannelCount(): number {\n\t\treturn this.pitchChannelCount + this.noiseChannelCount;\n\t}\n\t\n\tpublic getMaxInstrumentsPerChannel(): number {\n\t\treturn Math.max(\n\t\t\tthis.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin,\n\t\t\tthis.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\n\t}\n\t\n\tpublic getMaxInstrumentsPerPattern(channelIndex: number): number {\n\t\treturn this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\n\t}\n\t\n\tpublic getMaxInstrumentsPerPatternForChannel(channel: Channel): number {\n\t\treturn this.layeredInstruments\n\t\t\t? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\n\t\t\t: 1;\n\t}\n\t\n\tpublic getChannelIsNoise(channelIndex: number): boolean {\n\t\treturn (channelIndex >= this.pitchChannelCount);\n\t}\n\t\n\tpublic initToDefault(andResetChannels: boolean = true): void {\n\t\tthis.scale = 0;\n\t\tthis.key = 0;\n\t\tthis.loopStart = 0;\n\t\tthis.loopLength = 4;\n\t\tthis.tempo = 150;\n\t\tthis.beatsPerBar = 8;\n\t\tthis.barCount = 16;\n\t\tthis.patternsPerChannel = 8;\n\t\tthis.rhythm = 1;\n\t\tthis.layeredInstruments = false;\n\t\tthis.patternInstruments = false;\n\t\t\n\t\tif (andResetChannels) {\n\t\t\tthis.pitchChannelCount = 3;\n\t\t\tthis.noiseChannelCount = 1;\n\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\tconst isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount;\n\t\t\t\tif (this.channels.length <= channelIndex) {\n\t\t\t\t\tthis.channels[channelIndex] = new Channel();\n\t\t\t\t}\n\t\t\t\tconst channel: Channel = this.channels[channelIndex];\n\t\t\t\tchannel.octave = isNoiseChannel ? 0 : 4 - channelIndex; // [4, 3, 2, 0]: Descending octaves with drums at zero in last channel.\n\t\t\t\n\t\t\t\tfor (let pattern: number = 0; pattern < this.patternsPerChannel; pattern++) {\n\t\t\t\t\tif (channel.patterns.length <= pattern) {\n\t\t\t\t\t\tchannel.patterns[pattern] = new Pattern();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchannel.patterns[pattern].reset();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tchannel.patterns.length = this.patternsPerChannel;\n\t\t\t\n\t\t\t\tfor (let instrument: number = 0; instrument < Config.instrumentCountMin; instrument++) {\n\t\t\t\t\tif (channel.instruments.length <= instrument) {\n\t\t\t\t\t\tchannel.instruments[instrument] = new Instrument(isNoiseChannel);\n\t\t\t\t\t}\n\t\t\t\t\tchannel.instruments[instrument].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel);\n\t\t\t\t}\n\t\t\t\tchannel.instruments.length = Config.instrumentCountMin;\n\t\t\t\n\t\t\t\tfor (let bar: number = 0; bar < this.barCount; bar++) {\n\t\t\t\t\tchannel.bars[bar] = bar < 4 ? 1 : 0;\n\t\t\t\t}\n\t\t\t\tchannel.bars.length = this.barCount;\n\t\t\t}\n\t\t\tthis.channels.length = this.getChannelCount();\n\t\t}\n\t}\n\t\n\tpublic toBase64String(): string {\n\t\tlet bits: BitFieldWriter;\n\t\tlet buffer: number[] = [];\n\t\t\n\t\tbuffer.push(base64IntToCharCode[Song._latestVersion]);\n\t\tbuffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount]);\n\t\tbuffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\n\t\tbuffer.push(SongTagCode.key, base64IntToCharCode[this.key]);\n\t\tbuffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\n\t\tbuffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\n\t\tbuffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 63]);\n\t\tbuffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\n\t\tbuffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\n\t\tbuffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\n\t\tbuffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\n\t\t\n\t\tbuffer.push(SongTagCode.instrumentCount, base64IntToCharCode[(<any>this.layeredInstruments << 1) | <any>this.patternInstruments]);\n\t\tif (this.layeredInstruments || this.patternInstruments) {\n\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\tbuffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tbuffer.push(SongTagCode.channelOctave);\n\t\tfor (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n\t\t\tbuffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\n\t\t}\n\t\t\n\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\tfor (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n\t\t\t\tconst instrument: Instrument = this.channels[channelIndex].instruments[i];\n\t\t\t\tbuffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\n\t\t\t\tbuffer.push(SongTagCode.volume, base64IntToCharCode[instrument.volume]);\n\t\t\t\tbuffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\n\t\t\t\t\n\t\t\t\tbuffer.push(SongTagCode.eqFilter, base64IntToCharCode[instrument.eqFilter.controlPointCount]);\n\t\t\t\tfor (let j: number = 0; j < instrument.eqFilter.controlPointCount; j++) {\n\t\t\t\t\tconst point: FilterControlPoint = instrument.eqFilter.controlPoints[j];\n\t\t\t\t\tbuffer.push(base64IntToCharCode[point.type], base64IntToCharCode[point.freq], base64IntToCharCode[point.gain]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// The list of enabled effects is represented as a 12-bit bitfield using two six-bit characters.\n\t\t\t\tbuffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects >> 6], base64IntToCharCode[instrument.effects & 63]);\n\t\t\t\tif (effectsIncludeNoteFilter(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\n\t\t\t\t\tfor (let j: number = 0; j < instrument.noteFilter.controlPointCount; j++) {\n\t\t\t\t\t\tconst point: FilterControlPoint = instrument.noteFilter.controlPoints[j];\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[point.type], base64IntToCharCode[point.freq], base64IntToCharCode[point.gain]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (effectsIncludeTransition(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.transition]);\n\t\t\t\t}\n\t\t\t\tif (effectsIncludeChord(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.chord]);\n\t\t\t\t}\n\t\t\t\tif (effectsIncludePitchShift(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.pitchShift]);\n\t\t\t\t}\n\t\t\t\tif (effectsIncludeDetune(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.detune]);\n\t\t\t\t}\n\t\t\t\tif (effectsIncludeVibrato(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibrato]);\n\t\t\t\t}\n\t\t\t\tif (effectsIncludeDistortion(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.distortion]);\n\t\t\t\t}\n\t\t\t\tif (effectsIncludeBitcrusher(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.bitcrusherFreq], base64IntToCharCode[instrument.bitcrusherQuantization]);\n\t\t\t\t}\n\t\t\t\tif (effectsIncludePanning(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.pan]);\n\t\t\t\t}\n\t\t\t\tif (effectsIncludeChorus(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.chorus]);\n\t\t\t\t}\n\t\t\t\tif (effectsIncludeEcho(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.echoSustain], base64IntToCharCode[instrument.echoDelay]);\n\t\t\t\t}\n\t\t\t\tif (effectsIncludeReverb(instrument.effects)) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.reverb]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (instrument.type != InstrumentType.drumset) {\n\t\t\t\t\tbuffer.push(SongTagCode.fadeInOut, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n\t\t\t\t\tbuffer.push(SongTagCode.harmonics);\n\t\t\t\t\tconst harmonicsBits: BitFieldWriter = new BitFieldWriter();\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\t\t\tharmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\n\t\t\t\t\t}\n\t\t\t\t\tharmonicsBits.encodeBase64(buffer);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (instrument.type == InstrumentType.chip) {\n\t\t\t\t\tbuffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\n\t\t\t\t\tbuffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\n\t\t\t\t\tbuffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\n\t\t\t\t\tbuffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\n\t\t\t\t\tbuffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\n\t\t\t\t\t\n\t\t\t\t\tbuffer.push(SongTagCode.operatorFrequencies);\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\n\t\t\t\t\t}\n\t\t\t\t\tbuffer.push(SongTagCode.operatorAmplitudes);\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\n\t\t\t\t\t}\n\t\t\t\t} else if (instrument.type == InstrumentType.noise) {\n\t\t\t\t\tbuffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\n\t\t\t\t} else if (instrument.type == InstrumentType.spectrum) {\n\t\t\t\t\tbuffer.push(SongTagCode.spectrum);\n\t\t\t\t\tconst spectrumBits: BitFieldWriter = new BitFieldWriter();\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\tspectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\n\t\t\t\t\t}\n\t\t\t\t\tspectrumBits.encodeBase64(buffer);\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\n\t\t\t\t\tbuffer.push(SongTagCode.drumsetEnvelopes);\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbuffer.push(SongTagCode.spectrum);\n\t\t\t\t\tconst spectrumBits: BitFieldWriter = new BitFieldWriter();\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\t\tspectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tspectrumBits.encodeBase64(buffer);\n\t\t\t\t} else if (instrument.type == InstrumentType.harmonics) {\n\t\t\t\t\tbuffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n\t\t\t\t} else if (instrument.type == InstrumentType.pwm) {\n\t\t\t\t\tbuffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\n\t\t\t\t} else if (instrument.type == InstrumentType.supersaw) {\n\t\t\t\t\tbuffer.push(SongTagCode.supersaw, base64IntToCharCode[instrument.supersawDynamism], base64IntToCharCode[instrument.supersawSpread], base64IntToCharCode[instrument.supersawShape]);\n\t\t\t\t\tbuffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\n\t\t\t\t} else if (instrument.type == InstrumentType.pickedString) {\n\t\t\t\t\tbuffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n\t\t\t\t\tif (Config.stringSustainRange > 0x20 || SustainType.length > 2) {\n\t\t\t\t\t\tthrow new Error(\"Not enough bits to represent sustain value and type in same base64 character.\");\n\t\t\t\t\t}\n\t\t\t\t\tbuffer.push(SongTagCode.stringSustain, base64IntToCharCode[instrument.stringSustain | (instrument.stringSustainType << 5)]);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Unknown instrument type.\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.push(SongTagCode.envelopes, base64IntToCharCode[instrument.envelopeCount]);\n\t\t\t\tfor (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\n\t\t\t\t\tif (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\n\t\t\t\t\t}\n\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tbuffer.push(SongTagCode.bars);\n\t\tbits = new BitFieldWriter();\n\t\tlet neededBits: number = 0;\n\t\twhile ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\n\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) for (let i: number = 0; i < this.barCount; i++) {\n\t\t\tbits.write(neededBits, this.channels[channelIndex].bars[i]);\n\t\t}\n\t\tbits.encodeBase64(buffer);\n\t\t\n\t\tbuffer.push(SongTagCode.patterns);\n\t\tbits = new BitFieldWriter();\n\t\tconst shapeBits: BitFieldWriter = new BitFieldWriter();\n\t\tconst bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\n\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\tconst channel: Channel = this.channels[channelIndex];\n\t\t\tconst maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\n\t\t\tconst neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n\t\t\tconst neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\n\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n\t\t\tconst octaveOffset: number = isNoiseChannel ? 0 : channel.octave * Config.pitchesPerOctave;\n\t\t\tlet lastPitch: number = (isNoiseChannel ? 4 : octaveOffset);\n\t\t\tconst recentPitches: number[] = isNoiseChannel ? [4,6,7,2,3,8,0,10] : [0, 7, 12, 19, 24, -5, -12];\n\t\t\tconst recentShapes: string[] = [];\n\t\t\tfor (let i: number = 0; i < recentPitches.length; i++) {\n\t\t\t\trecentPitches[i] += octaveOffset;\n\t\t\t}\n\t\t\tfor (const pattern of channel.patterns) {\n\t\t\t\tif (this.patternInstruments) {\n\t\t\t\t\tconst instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\n\t\t\t\t\tbits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\n\t\t\t\t\tfor (let i: number = 0; i < instrumentCount; i++) {\n\t\t\t\t\t\tbits.write(neededInstrumentIndexBits, pattern.instruments[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (pattern.notes.length > 0) {\n\t\t\t\t\tbits.write(1, 1);\n\t\t\t\t\t\n\t\t\t\t\tlet curPart: number = 0;\n\t\t\t\t\tfor (const note of pattern.notes) {\n\t\t\t\t\t\tif (note.start > curPart) {\n\t\t\t\t\t\t\tbits.write(2, 0); // rest\n\t\t\t\t\t\t\tbits.writePartDuration(note.start - curPart);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tshapeBits.clear();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\n\t\t\t\t\t\tfor (let i: number = 1; i < note.pitches.length; i++) shapeBits.write(1,1);\n\t\t\t\t\t\tif (note.pitches.length < Config.maxChordSize) shapeBits.write(1,0);\n\t\t\t\t\t\t\n\t\t\t\t\t\tshapeBits.writePinCount(note.pins.length - 1);\n\t\t\t\t\t\t\n\t\t\t\t\t\tshapeBits.write(bitsPerNoteSize, note.pins[0].size);\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet shapePart: number = 0;\n\t\t\t\t\t\tlet startPitch: number = note.pitches[0];\n\t\t\t\t\t\tlet currentPitch: number = startPitch;\n\t\t\t\t\t\tconst pitchBends: number[] = [];\n\t\t\t\t\t\tfor (let i: number = 1; i < note.pins.length; i++) {\n\t\t\t\t\t\t\tconst pin: NotePin = note.pins[i];\n\t\t\t\t\t\t\tconst nextPitch: number = startPitch + pin.interval;\n\t\t\t\t\t\t\tif (currentPitch != nextPitch) {\n\t\t\t\t\t\t\t\tshapeBits.write(1, 1);\n\t\t\t\t\t\t\t\tpitchBends.push(nextPitch);\n\t\t\t\t\t\t\t\tcurrentPitch = nextPitch;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tshapeBits.write(1, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tshapeBits.writePartDuration(pin.time - shapePart);\n\t\t\t\t\t\t\tshapePart = pin.time;\n\t\t\t\t\t\t\tshapeBits.write(bitsPerNoteSize, pin.size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\n\t\t\t\t\t\tconst shapeIndex: number = recentShapes.indexOf(shapeString);\n\t\t\t\t\t\tif (shapeIndex == -1) {\n\t\t\t\t\t\t\tbits.write(2, 1); // new shape\n\t\t\t\t\t\t\tbits.concat(shapeBits);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbits.write(1, 1); // old shape\n\t\t\t\t\t\t\tbits.writeLongTail(0, 0, shapeIndex);\n\t\t\t\t\t\t\trecentShapes.splice(shapeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecentShapes.unshift(shapeString);\n\t\t\t\t\t\tif (recentShapes.length > 10) recentShapes.pop();\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst allPitches: number[] = note.pitches.concat(pitchBends);\n\t\t\t\t\t\tfor (let i: number = 0; i < allPitches.length; i++) {\n\t\t\t\t\t\t\tconst pitch: number = allPitches[i];\n\t\t\t\t\t\t\tconst pitchIndex: number = recentPitches.indexOf(pitch);\n\t\t\t\t\t\t\tif (pitchIndex == -1) {\n\t\t\t\t\t\t\t\tlet interval: number = 0;\n\t\t\t\t\t\t\t\tlet pitchIter: number = lastPitch;\n\t\t\t\t\t\t\t\tif (pitchIter < pitch) {\n\t\t\t\t\t\t\t\t\twhile (pitchIter != pitch) {\n\t\t\t\t\t\t\t\t\t\tpitchIter++;\n\t\t\t\t\t\t\t\t\t\tif (recentPitches.indexOf(pitchIter) == -1) interval++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\twhile (pitchIter != pitch) {\n\t\t\t\t\t\t\t\t\t\tpitchIter--;\n\t\t\t\t\t\t\t\t\t\tif (recentPitches.indexOf(pitchIter) == -1) interval--;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbits.write(1, 0);\n\t\t\t\t\t\t\t\tbits.writePitchInterval(interval);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbits.write(1, 1);\n\t\t\t\t\t\t\t\tbits.write(3, pitchIndex);\n\t\t\t\t\t\t\t\trecentPitches.splice(pitchIndex, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trecentPitches.unshift(pitch);\n\t\t\t\t\t\t\tif (recentPitches.length > 8) recentPitches.pop();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (i == note.pitches.length - 1) {\n\t\t\t\t\t\t\t\tlastPitch = note.pitches[0];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlastPitch = pitch;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (note.start == 0) {\n\t\t\t\t\t\t\tbits.write(1, note.continuesLastPattern ? 1 : 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcurPart = note.end;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (curPart < this.beatsPerBar * Config.partsPerBeat) {\n\t\t\t\t\t\tbits.write(2, 0); // rest\n\t\t\t\t\t\tbits.writePartDuration(this.beatsPerBar * Config.partsPerBeat - curPart);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbits.write(1, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet stringLength: number = bits.lengthBase64();\n\t\tlet digits: number[] = [];\n\t\twhile (stringLength > 0) {\n\t\t\tdigits.unshift(base64IntToCharCode[stringLength & 0x3f]);\n\t\t\tstringLength = stringLength >> 6;\n\t\t}\n\t\tbuffer.push(base64IntToCharCode[digits.length]);\n\t\tArray.prototype.push.apply(buffer, digits); // append digits to buffer.\n\t\tbits.encodeBase64(buffer);\n\t\t\n\t\tconst maxApplyArgs: number = 64000;\n\t\tif (buffer.length < maxApplyArgs) {\n\t\t\t// Note: Function.apply may break for long argument lists. \n\t\t\treturn String.fromCharCode.apply(null, buffer);\n\t\t} else {\n\t\t\tlet result: string = \"\";\n\t\t\tfor (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\n\t\t\t\tresult += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\t\n\tprivate static _envelopeFromLegacyIndex(legacyIndex: number): Envelope {\n\t\t// I swapped the order of \"custom\"/\"steady\", now \"none\"/\"note size\".\n\t\tif (legacyIndex == 0) legacyIndex = 1; else if (legacyIndex == 1) legacyIndex = 0;\n\t\treturn Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\n\t}\n\t\n\tpublic fromBase64String(compressed: string): void {\n\t\tif (compressed == null || compressed == \"\") {\n\t\t\tthis.initToDefault(true);\n\t\t\treturn;\n\t\t}\n\t\tlet charIndex: number = 0;\n\t\t// skip whitespace.\n\t\twhile (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\n\t\t// skip hash mark.\n\t\tif (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\n\t\t// if it starts with curly brace, treat it as JSON.\n\t\tif (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\n\t\t\tthis.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\tif (version == -1 || version > Song._latestVersion || version < Song._oldestVersion) return;\n\t\tconst beforeThree: boolean = version < 3;\n\t\tconst beforeFour:  boolean = version < 4;\n\t\tconst beforeFive:  boolean = version < 5;\n\t\tconst beforeSix:   boolean = version < 6;\n\t\tconst beforeSeven: boolean = version < 7;\n\t\tconst beforeEight: boolean = version < 8;\n\t\tconst beforeNine:  boolean = version < 9;\n\t\tthis.initToDefault(beforeNine);\n\t\t\n\t\tif (beforeThree) {\n\t\t\t// Originally, the only instrument transition was \"instant\" and the only drum wave was \"retro\".\n\t\t\tfor (const channel of this.channels) {\n\t\t\t\tchannel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\n\t\t\t\tchannel.instruments[0].effects |= 1 << EffectType.transition;\n\t\t\t}\n\t\t\tthis.channels[3].instruments[0].chipNoise = 0;\n\t\t}\n\t\t\n\t\tlet legacySettingsCache: LegacySettings[][] | null = null;\n\t\tif (beforeNine) {\n\t\t\t// Unfortunately, old versions of BeepBox had a variety of different ways of saving\n\t\t\t// filter-and-envelope-related parameters in the URL, and none of them directly\n\t\t\t// correspond to the new way of saving these parameters. We can approximate the old\n\t\t\t// settings by collecting all the old settings for an instrument and passing them to\n\t\t\t// convertLegacySettings(), so I use this data structure to collect the settings\n\t\t\t// for each instrument if necessary.\n\t\t\tlegacySettingsCache = [];\n\t\t\tfor (let i: number = legacySettingsCache.length; i < this.getChannelCount(); i++) {\n\t\t\t\tlegacySettingsCache[i] = [];\n\t\t\t\tfor (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache[i][j] = {};\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet legacyGlobalReverb: number = 0; // beforeNine reverb was song-global, record that reverb here and adapt it to instruments as needed.\n\t\t\n\t\tlet instrumentChannelIterator: number = 0;\n\t\tlet instrumentIndexIterator: number = -1;\n\t\tlet command: SongTagCode;\n\t\twhile (charIndex < compressed.length) switch(command = compressed.charCodeAt(charIndex++)) {\n\t\t\tcase SongTagCode.channelCount: {\n\t\t\t\tthis.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\tthis.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\tthis.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\n\t\t\t\tthis.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\n\t\t\t\tfor (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\tthis.channels[channelIndex] = new Channel();\n\t\t\t\t}\n\t\t\t\tthis.channels.length = this.getChannelCount();\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tfor (let i: number = legacySettingsCache!.length; i < this.getChannelCount(); i++) {\n\t\t\t\t\t\tlegacySettingsCache![i] = [];\n\t\t\t\t\t\tfor (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache![i][j] = {};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.scale: {\n\t\t\t\tthis.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\tif (beforeThree && this.scale == 10) this.scale = 11;\n\t\t\t} break;\n\t\t\tcase SongTagCode.key: {\n\t\t\t\tif (beforeSeven) {\n\t\t\t\t\tthis.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.loopStart: {\n\t\t\t\tif (beforeFive) {\n\t\t\t\t\tthis.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t} else {\n\t\t\t\t\tthis.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.loopEnd: {\n\t\t\t\tif (beforeFive) {\n\t\t\t\t\tthis.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t} else {\n\t\t\t\t\tthis.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.tempo: {\n\t\t\t\tif (beforeFour) {\n\t\t\t\t\tthis.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n\t\t\t\t} else if (beforeSeven) {\n\t\t\t\t\tthis.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n\t\t\t\t} else {\n\t\t\t\t\tthis.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t}\n\t\t\t\tthis.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\n\t\t\t} break;\n\t\t\tcase SongTagCode.reverb: {\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tlegacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tlegacyGlobalReverb = clamp(0, 4, legacyGlobalReverb);\n\t\t\t\t} else {\n\t\t\t\t\t// Do nothing? This song tag code is deprecated for now.\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.beatCount: {\n\t\t\t\tif (beforeThree) {\n\t\t\t\t\tthis.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n\t\t\t\t} else {\n\t\t\t\t\tthis.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n\t\t\t\t}\n\t\t\t\tthis.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\n\t\t\t} break;\n\t\t\tcase SongTagCode.barCount: {\n\t\t\t\tconst barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n\t\t\t\tthis.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\n\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\tfor (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\n\t\t\t\t\t\tthis.channels[channelIndex].bars[bar] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tthis.channels[channelIndex].bars.length = this.barCount;\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.patternCount: {\n\t\t\t\tlet patternsPerChannel: number;\n\t\t\t\tif (beforeEight) {\n\t\t\t\t\tpatternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n\t\t\t\t} else {\n\t\t\t\t\tpatternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n\t\t\t\t}\n\t\t\t\tthis.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\n\t\t\t\tconst channelCount: number = this.getChannelCount();\n\t\t\t\tfor (let channelIndex: number = 0; channelIndex < channelCount; channelIndex++) {\n\t\t\t\t\tconst patterns: Pattern[] = this.channels[channelIndex].patterns;\n\t\t\t\t\tfor (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\n\t\t\t\t\t\tpatterns[pattern] = new Pattern();\n\t\t\t\t\t}\n\t\t\t\t\tpatterns.length = this.patternsPerChannel;\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.instrumentCount: {\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tconst instrumentsPerChannel: number = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n\t\t\t\t\tthis.layeredInstruments = false;\n\t\t\t\t\tthis.patternInstruments = (instrumentsPerChannel > 1);\n\t\t\t\t\t\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\tconst isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount;\n\t\t\t\t\t\tfor (let instrumentIndex: number = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n\t\t\t\t\t\t\tthis.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.channels[channelIndex].instruments.length = instrumentsPerChannel;\n\t\t\t\t\t\tif (beforeSix) {\n\t\t\t\t\t\t\tfor (let instrumentIndex: number = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n\t\t\t\t\t\t\t\tthis.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let j: number = legacySettingsCache![channelIndex].length; j < instrumentsPerChannel; j++) {\n\t\t\t\t\t\t\tlegacySettingsCache![channelIndex][j] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst instrumentsFlagBits: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tthis.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\n\t\t\t\t\tthis.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\tlet instrumentCount: number = 1;\n\t\t\t\t\t\tif (this.layeredInstruments || this.patternInstruments) {\n\t\t\t\t\t\t\tinstrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst channel: Channel = this.channels[channelIndex];\n\t\t\t\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n\t\t\t\t\t\tfor (let i: number = channel.instruments.length; i < instrumentCount; i++) {\n\t\t\t\t\t\t\tchannel.instruments[i] = new Instrument(isNoiseChannel);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchannel.instruments.length = instrumentCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.rhythm: {\n\t\t\t\tthis.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t} break;\n\t\t\tcase SongTagCode.channelOctave: {\n\t\t\t\tif (beforeThree) {\n\t\t\t\t\tconst channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tthis.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n\t\t\t\t\tif (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\n\t\t\t\t} else if (beforeNine) {\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\tthis.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n\t\t\t\t\t\tif (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n\t\t\t\t\t\tthis.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tfor (let channelIndex: number = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\tthis.channels[channelIndex].octave = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.startInstrument: {\n\t\t\t\tinstrumentIndexIterator++;\n\t\t\t\tif (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\n\t\t\t\t\tinstrumentChannelIterator++;\n\t\t\t\t\tinstrumentIndexIterator = 0;\n\t\t\t\t}\n\t\t\t\tvalidateRange(0, this.channels.length - 1, instrumentChannelIterator);\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tconst instrumentType: number = validateRange(0, InstrumentType.length - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\tinstrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount);\n\t\t\t\t\n\t\t\t\tif (beforeSeven) {\n\t\t\t\t\tinstrument.effects = 0;\n\t\t\t\t\t// the reverb effect was applied to all pitched instruments if nonzero but never explicitly enabled if beforeSeven, so enable it here.\n\t\t\t\t\tif (legacyGlobalReverb > 0 && !this.getChannelIsNoise(instrumentChannelIterator)) {\n\t\t\t\t\t\tinstrument.reverb = legacyGlobalReverb;\n\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.reverb;\n\t\t\t\t\t}\n\t\t\t\t\t// Chip/noise instruments had arpeggio and FM had custom interval but neither\n\t\t\t\t\t// explicitly saved the chorus setting beforeSeven so enable it here.\n\t\t\t\t\tif (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n\t\t\t\t\t\t// Enable chord if it was used.\n\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.chord;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.preset: {\n\t\t\t\tconst presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\n\t\t\t} break;\n\t\t\tcase SongTagCode.wave: {\n\t\t\t\tif (beforeThree) {\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n\t\t\t\t\tconst channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tconst instrument: Instrument = this.channels[channelIndex].instruments[0];\n\t\t\t\t\tinstrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n\t\t\t\t\t\n\t\t\t\t\t// Version 2 didn't save any settings for settings for filters, or envelopes,\n\t\t\t\t\t// just waves, so initialize them here I guess.\n\t\t\t\t\tinstrument.convertLegacySettings(legacySettingsCache![channelIndex][0]);\n\t\t\t\t\t\n\t\t\t\t} else if (beforeSix) {\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\tfor (const instrument of this.channels[channelIndex].instruments) {\n\t\t\t\t\t\t\tif (channelIndex >= this.pitchChannelCount) {\n\t\t\t\t\t\t\t\tinstrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tinstrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (beforeSeven) {\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n\t\t\t\t\tif (instrumentChannelIterator >= this.pitchChannelCount) {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (instrumentChannelIterator >= this.pitchChannelCount) {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.eqFilter: {\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tif (beforeSeven) {\n\t\t\t\t\t\tconst legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\n\t\t\t\t\t\tconst legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (beforeThree) {\n\t\t\t\t\t\t\tconst channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channelIndex].instruments[0];\n\t\t\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\n\t\t\t\t\t\t\tconst legacyFilter: number = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n\t\t\t\t\t\t\tlegacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n\t\t\t\t\t\t\tlegacySettings.filterResonance = 0;\n\t\t\t\t\t\t\tlegacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n\t\t\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t\t\t} else if (beforeSix) {\n\t\t\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\t\t\tfor (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n\t\t\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channelIndex].instruments[i];\n\t\t\t\t\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\n\t\t\t\t\t\t\t\t\tconst legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n\t\t\t\t\t\t\t\t\tif (channelIndex < this.pitchChannelCount) {\n\t\t\t\t\t\t\t\t\t\tlegacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n\t\t\t\t\t\t\t\t\t\tlegacySettings.filterResonance = 0;\n\t\t\t\t\t\t\t\t\t\tlegacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tlegacySettings.filterCutoff = 10;\n\t\t\t\t\t\t\t\t\t\tlegacySettings.filterResonance = 0;\n\t\t\t\t\t\t\t\t\t\tlegacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n\t\t\t\t\t\t\tlegacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n\t\t\t\t\t\t\tlegacySettings.filterResonance = 0;\n\t\t\t\t\t\t\tlegacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n\t\t\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst filterCutoffRange: number = 11;\n\t\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n\t\t\t\t\t\tlegacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\tconst originalControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tinstrument.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n\t\t\t\t\tfor (let i: number = instrument.eqFilter.controlPoints.length; i < instrument.eqFilter.controlPointCount; i++) {\n\t\t\t\t\t\tinstrument.eqFilter.controlPoints[i] = new FilterControlPoint();\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i: number = 0; i < instrument.eqFilter.controlPointCount; i++) {\n\t\t\t\t\t\tconst point: FilterControlPoint = instrument.eqFilter.controlPoints[i];\n\t\t\t\t\t\tpoint.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\tpoint.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\tpoint.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i: number = instrument.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\n\t\t\t\t\t\tcharIndex += 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.filterResonance: {\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tconst filterResonanceRange: number = 8;\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n\t\t\t\t\tlegacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t} else {\n\t\t\t\t\t// Do nothing? This song tag code is deprecated for now.\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.drumsetEnvelopes: {\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tif (instrument.type == InstrumentType.drumset) {\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\n\t\t\t\t\t\t\tinstrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]).index;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This used to be used for general filter envelopes.\n\t\t\t\t\t\t// The presence of an envelope affects how convertLegacySettings\n\t\t\t\t\t\t// decides the closest possible approximation, so update it.\n\t\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n\t\t\t\t\t\tlegacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// This tag is now only used for drumset filter envelopes.\n\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\n\t\t\t\t\t\tinstrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.pulseWidth: {\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tinstrument.pulseWidth = clamp(0, Config.pulseWidthRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n\t\t\t\t\tlegacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.supersaw: {\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tinstrument.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\tinstrument.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\tinstrument.supersawShape = clamp(0, Config.supersawShapeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t} break;\n\t\t\tcase SongTagCode.stringSustain: {\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tconst sustainValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\tinstrument.stringSustain = clamp(0, Config.stringSustainRange, sustainValue & 0x1F);\n\t\t\t\tinstrument.stringSustainType = Config.enableAcousticSustain ? clamp(0, SustainType.length, sustainValue >> 5) : SustainType.bright;\n\t\t\t} break;\n\t\t\tcase SongTagCode.fadeInOut: {\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\t// this tag was used for a combination of transition and fade in/out.\n\t\t\t\t\tconst legacySettings = [\n\t\t\t\t\t\t{transition: \"interrupt\", fadeInSeconds: 0.0,    fadeOutTicks: -1},\n\t\t\t\t\t\t{transition: \"normal\",    fadeInSeconds: 0.0,    fadeOutTicks: -3},\n\t\t\t\t\t\t{transition: \"normal\",    fadeInSeconds: 0.025,  fadeOutTicks: -3},\n\t\t\t\t\t\t{transition: \"slide in pattern\", fadeInSeconds: 0.025,  fadeOutTicks: -3},\n\t\t\t\t\t\t{transition: \"normal\",    fadeInSeconds: 0.04,   fadeOutTicks:  6},\n\t\t\t\t\t\t{transition: \"normal\",    fadeInSeconds: 0.0,    fadeOutTicks: 48},\n\t\t\t\t\t\t{transition: \"normal\",    fadeInSeconds: 0.0125, fadeOutTicks: 72},\n\t\t\t\t\t\t{transition: \"normal\",    fadeInSeconds: 0.06,   fadeOutTicks: 96},\n\t\t\t\t\t];\n\t\t\t\t\tif (beforeThree) {\n\t\t\t\t\t\tconst channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\t\tconst settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n\t\t\t\t\t\tconst instrument: Instrument = this.channels[channelIndex].instruments[0];\n\t\t\t\t\t\tinstrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n\t\t\t\t\t\tinstrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n\t\t\t\t\t\tinstrument.transition = Config.transitions.dictionary[settings.transition].index;\n\t\t\t\t\t\tif (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n\t\t\t\t\t\t\t// Enable transition if it was used.\n\t\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.transition;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (beforeSix) {\n\t\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\t\tfor (const instrument of this.channels[channelIndex].instruments) {\n\t\t\t\t\t\t\t\tconst settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n\t\t\t\t\t\t\t\tinstrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n\t\t\t\t\t\t\t\tinstrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n\t\t\t\t\t\t\t\tinstrument.transition = Config.transitions.dictionary[settings.transition].index;\n\t\t\t\t\t\t\t\tif (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n\t\t\t\t\t\t\t\t\t// Enable transition if it was used.\n\t\t\t\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.transition;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n\t\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\t\tinstrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n\t\t\t\t\t\tinstrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n\t\t\t\t\t\tinstrument.transition = Config.transitions.dictionary[settings.transition].index;\n\t\t\t\t\t\tif (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n\t\t\t\t\t\t\t// Enable transition if it was used.\n\t\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.transition;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\tinstrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\tinstrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.vibrato: {\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tif (beforeSeven) {\n\t\t\t\t\t\tif (beforeThree) {\n\t\t\t\t\t\t\tconst legacyEffects: number[] = [0, 3, 2, 0];\n\t\t\t\t\t\t\tconst legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"tremolo2\"];\n\t\t\t\t\t\t\tconst channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channelIndex].instruments[0];\n\t\t\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\n\t\t\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\n\t\t\t\t\t\t\tif (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n\t\t\t\t\t\t\t\t// Imitate the legacy tremolo with a filter envelope.\n\t\t\t\t\t\t\t\tlegacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n\t\t\t\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n\t\t\t\t\t\t\t\t// Enable vibrato if it was used.\n\t\t\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.vibrato;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (beforeSix) {\n\t\t\t\t\t\t\tconst legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\n\t\t\t\t\t\t\tconst legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n\t\t\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\t\t\tfor (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n\t\t\t\t\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channelIndex].instruments[i];\n\t\t\t\t\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\n\t\t\t\t\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\n\t\t\t\t\t\t\t\t\tif (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n\t\t\t\t\t\t\t\t\t\t// Imitate the legacy tremolo with a filter envelope.\n\t\t\t\t\t\t\t\t\t\tlegacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n\t\t\t\t\t\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n\t\t\t\t\t\t\t\t\t\t// Enable vibrato if it was used.\n\t\t\t\t\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.vibrato;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (legacyGlobalReverb != 0 && !this.getChannelIsNoise(channelIndex)) {\n\t\t\t\t\t\t\t\t\t\t// Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\n\t\t\t\t\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.reverb;\n\t\t\t\t\t\t\t\t\t\tinstrument.reverb = legacyGlobalReverb;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\n\t\t\t\t\t\t\tconst legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n\t\t\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n\t\t\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\n\t\t\t\t\t\t\tif (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n\t\t\t\t\t\t\t\t// Imitate the legacy tremolo with a filter envelope.\n\t\t\t\t\t\t\t\tlegacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n\t\t\t\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n\t\t\t\t\t\t\t\t// Enable vibrato if it was used.\n\t\t\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.vibrato;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (legacyGlobalReverb != 0) {\n\t\t\t\t\t\t\t\t// Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\n\t\t\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.reverb;\n\t\t\t\t\t\t\t\tinstrument.reverb = legacyGlobalReverb;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\t\tconst vibrato: number = clamp(0, Config.vibratos.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\tinstrument.vibrato = vibrato;\n\t\t\t\t\t\tif (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n\t\t\t\t\t\t\t// Enable vibrato if it was used.\n\t\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.vibrato;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Do nothing? This song tag code is deprecated for now.\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.unison: {\n\t\t\t\tif (beforeThree) {\n\t\t\t\t\tconst channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tthis.channels[channelIndex].instruments[0].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t} else if (beforeSix) {\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\tfor (const instrument of this.channels[channelIndex].instruments) {\n\t\t\t\t\t\t\tconst originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\t\t\tlet unison: number = clamp(0, Config.unisons.length, originalValue);\n\t\t\t\t\t\t\tif (originalValue == 8) {\n\t\t\t\t\t\t\t\t// original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\n\t\t\t\t\t\t\t\tunison = 2;\n\t\t\t\t\t\t\t\tinstrument.chord = 3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinstrument.unison = unison;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (beforeSeven) {\n\t\t\t\t\tconst originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tlet unison: number = clamp(0, Config.unisons.length, originalValue);\n\t\t\t\t\tif (originalValue == 8) {\n\t\t\t\t\t\t// original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\n\t\t\t\t\t\tunison = 2;\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\n\t\t\t\t\t}\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = unison;\n\t\t\t\t} else {\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.chord: {\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\tinstrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\tif (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n\t\t\t\t\t\t// Enable chord if it was used.\n\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.chord;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Do nothing? This song tag code is deprecated for now.\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.effects: {\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tinstrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << EffectType.length) - 1));\n\t\t\t\t\tif (legacyGlobalReverb == 0) {\n\t\t\t\t\t\t// Disable reverb if legacy song reverb was zero.\n\t\t\t\t\t\tinstrument.effects &= ~(1 << EffectType.reverb);\n\t\t\t\t\t} else if (effectsIncludeReverb(instrument.effects)) {\n\t\t\t\t\t\tinstrument.reverb = legacyGlobalReverb;\n\t\t\t\t\t}\n\t\t\t\t\tif (instrument.pan != Config.panCenter) {\n\t\t\t\t\t\t// Enable panning if panning slider isn't centered.\n\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.panning;\n\t\t\t\t\t}\n\t\t\t\t\tif (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n\t\t\t\t\t\t// Enable vibrato if it was used.\n\t\t\t\t\t\tinstrument.effects |= 1 << EffectType.panning;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// convertLegacySettings may need to force-enable note filter, call\n\t\t\t\t\t// it again here to make sure that this override takes precedence.\n\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t} else {\n\t\t\t\t\t// BeepBox currently uses two base64 characters at 6 bits each for a bitfield representing all the enabled effects.\n\t\t\t\t\tif (EffectType.length > 12) throw new Error();\n\t\t\t\t\tinstrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\n\t\t\t\t\tif (effectsIncludeNoteFilter(instrument.effects)) {\n\t\t\t\t\t\tconst originalControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\t\tinstrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n\t\t\t\t\t\tfor (let i: number = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\n\t\t\t\t\t\t\tinstrument.noteFilter.controlPoints[i] = new FilterControlPoint();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i: number = 0; i < instrument.noteFilter.controlPointCount; i++) {\n\t\t\t\t\t\t\tconst point: FilterControlPoint = instrument.noteFilter.controlPoints[i];\n\t\t\t\t\t\t\tpoint.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\t\tpoint.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\t\tpoint.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i: number = instrument.noteFilter.controlPointCount; i < originalControlPointCount; i++) {\n\t\t\t\t\t\t\tcharIndex += 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (effectsIncludeTransition(instrument.effects)) {\n\t\t\t\t\t\tinstrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tif (effectsIncludeChord(instrument.effects)) {\n\t\t\t\t\t\tinstrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tif (effectsIncludePitchShift(instrument.effects)) {\n\t\t\t\t\t\tinstrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tif (effectsIncludeDetune(instrument.effects)) {\n\t\t\t\t\t\tinstrument.detune = clamp(0, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tif (effectsIncludeVibrato(instrument.effects)) {\n\t\t\t\t\t\tinstrument.vibrato = clamp(0, Config.vibratos.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tif (effectsIncludeDistortion(instrument.effects)) {\n\t\t\t\t\t\tinstrument.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tif (effectsIncludeBitcrusher(instrument.effects)) {\n\t\t\t\t\t\tinstrument.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\tinstrument.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tif (effectsIncludePanning(instrument.effects)) {\n\t\t\t\t\t\tinstrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tif (effectsIncludeChorus(instrument.effects)) {\n\t\t\t\t\t\tinstrument.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tif (effectsIncludeEcho(instrument.effects)) {\n\t\t\t\t\t\tinstrument.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\tinstrument.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tif (effectsIncludeReverb(instrument.effects)) {\n\t\t\t\t\t\tinstrument.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Clamp the range.\n\t\t\t\tinstrument.effects &= (1 << EffectType.length) - 1;\n\t\t\t} break;\n\t\t\tcase SongTagCode.volume: {\n\t\t\t\tif (beforeThree) {\n\t\t\t\t\tconst channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tconst instrument: Instrument = this.channels[channelIndex].instruments[0];\n\t\t\t\t\tinstrument.volume = clamp(0, Config.volumeRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t// legacy mute value:\n\t\t\t\t\tif (instrument.volume == 5) instrument.volume = Config.volumeRange - 1;\n\t\t\t\t} else if (beforeSix) {\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\tfor (const instrument of this.channels[channelIndex].instruments) {\n\t\t\t\t\t\t\tinstrument.volume = clamp(0, Config.volumeRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\t\t// legacy mute value:\n\t\t\t\t\t\t\tif (instrument.volume == 5) instrument.volume = Config.volumeRange - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (beforeSeven) {\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\tinstrument.volume = clamp(0, Config.volumeRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t// legacy mute value:\n\t\t\t\t\tif (instrument.volume == 5) instrument.volume = Config.volumeRange - 1;\n\t\t\t\t} else {\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\tinstrument.volume = clamp(0, Config.volumeRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.pan: {\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\tinstrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t} else {\n\t\t\t\t\t// Do nothing? This song tag code is deprecated for now.\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.algorithm: {\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tinstrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\t// The algorithm determines the carrier count, which affects how legacy settings are imported.\n\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.feedbackType: {\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t} break;\n\t\t\tcase SongTagCode.feedbackAmplitude: {\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t} break;\n\t\t\tcase SongTagCode.feedbackEnvelope: {\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n\t\t\t\t\tlegacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t} else {\n\t\t\t\t\t// Do nothing? This song tag code is deprecated for now.\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.operatorFrequencies: {\n\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.operatorAmplitudes: {\n\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.envelopes: {\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tif (beforeNine) {\n\t\t\t\t\tconst legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n\t\t\t\t\tlegacySettings.operatorEnvelopes = [];\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\n\t\t\t\t\t\tlegacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t}\n\t\t\t\t\tinstrument.convertLegacySettings(legacySettings);\n\t\t\t\t} else {\n\t\t\t\t\tconst envelopeCount: number = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\tfor (let i: number = 0; i < envelopeCount; i++) {\n\t\t\t\t\t\tconst target: number = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\tlet index: number = 0;\n\t\t\t\t\t\tconst maxCount: number = Config.instrumentAutomationTargets[target].maxCount;\n\t\t\t\t\t\tif (maxCount > 1) {\n\t\t\t\t\t\t\tindex = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst envelope: number = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t\tinstrument.addEnvelope(target, index, envelope);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.spectrum: {\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tif (instrument.type == InstrumentType.spectrum) {\n\t\t\t\t\tconst byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\n\t\t\t\t\t}\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\n\t\t\t\t\tcharIndex += byteCount;\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\n\t\t\t\t\tconst byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\t\tinstrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinstrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\n\t\t\t\t\t}\n\t\t\t\t\tcharIndex += byteCount;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Unhandled instrument type for spectrum song tag code.\");\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase SongTagCode.harmonics: {\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tconst byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\n\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\n\t\t\t\t}\n\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\n\t\t\t\tcharIndex += byteCount;\n\t\t\t} break;\n\t\t\tcase SongTagCode.bars: {\n\t\t\t\tlet subStringLength: number;\n\t\t\t\tif (beforeThree) {\n\t\t\t\t\tconst channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tconst barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tsubStringLength = Math.ceil(barCount * 0.5);\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n\t\t\t\t\tfor (let i: number = 0; i < barCount; i++) {\n\t\t\t\t\t\tthis.channels[channelIndex].bars[i] = bits.read(3) + 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (beforeFive) {\n\t\t\t\t\tlet neededBits: number = 0;\n\t\t\t\t\twhile ((1 << neededBits) < this.patternsPerChannel) neededBits++;\n\t\t\t\t\tsubStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\n\t\t\t\t\t\t\tthis.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet neededBits: number = 0;\n\t\t\t\t\twhile ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\n\t\t\t\t\tsubStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\n\t\t\t\t\t\t\tthis.channels[channelIndex].bars[i] = bits.read(neededBits);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcharIndex += subStringLength;\n\t\t\t} break;\n\t\t\tcase SongTagCode.patterns: {\n\t\t\t\tlet bitStringLength: number = 0;\n\t\t\t\tlet channelIndex: number;\n\t\t\t\tif (beforeThree) {\n\t\t\t\t\tchannelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\t\n\t\t\t\t\t// The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default. \n\t\t\t\t\tcharIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\t\n\t\t\t\t\tbitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tbitStringLength = bitStringLength << 6;\n\t\t\t\t\tbitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t} else {\n\t\t\t\t\tchannelIndex = 0;\n\t\t\t\t\tlet bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\twhile (bitStringLengthLength > 0) {\n\t\t\t\t\t\tbitStringLength = bitStringLength << 6;\n\t\t\t\t\t\tbitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\t\tbitStringLengthLength--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\n\t\t\t\tcharIndex += bitStringLength;\n\t\t\t\t\n\t\t\t\tconst bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst channel: Channel = this.channels[channelIndex];\n\t\t\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n\t\t\t\t\tconst maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\n\t\t\t\t\tconst neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n\t\t\t\t\tconst neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\n\t\t\t\t\t\n\t\t\t\t\tconst octaveOffset: number = isNoiseChannel ? 0 : channel.octave * 12;\n\t\t\t\t\tlet lastPitch: number = (isNoiseChannel ? 4 : octaveOffset);\n\t\t\t\t\tconst recentPitches: number[] = isNoiseChannel ? [4,6,7,2,3,8,0,10] : [0, 7, 12, 19, 24, -5, -12];\n\t\t\t\t\tconst recentShapes: any[] = [];\n\t\t\t\t\tfor (let i: number = 0; i < recentPitches.length; i++) {\n\t\t\t\t\t\trecentPitches[i] += octaveOffset;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i: number = 0; i < this.patternsPerChannel; i++) {\n\t\t\t\t\t\tconst newPattern: Pattern = channel.patterns[i];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (beforeNine) {\n\t\t\t\t\t\t\tnewPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\n\t\t\t\t\t\t\tnewPattern.instruments.length = 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (this.patternInstruments) {\n\t\t\t\t\t\t\t\tconst instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\n\t\t\t\t\t\t\t\tfor (let j: number = 0; j < instrumentCount; j++) {\n\t\t\t\t\t\t\t\t\tnewPattern.instruments[j] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnewPattern.instruments.length = instrumentCount;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnewPattern.instruments[0] = 0;\n\t\t\t\t\t\t\t\tnewPattern.instruments.length = Config.instrumentCountMin;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!beforeThree && bits.read(1) == 0) {\n\t\t\t\t\t\t\tnewPattern.notes.length = 0;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet curPart: number = 0;\n\t\t\t\t\t\tconst newNotes: Note[] = newPattern.notes;\n\t\t\t\t\t\tlet noteCount: number = 0;\n\t\t\t\t\t\twhile (curPart < this.beatsPerBar * Config.partsPerBeat) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst useOldShape: boolean = bits.read(1) == 1;\n\t\t\t\t\t\t\tlet newNote: boolean = false;\n\t\t\t\t\t\t\tlet shapeIndex: number = 0;\n\t\t\t\t\t\t\tif (useOldShape) {\n\t\t\t\t\t\t\t\tshapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnewNote = bits.read(1) == 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!useOldShape && !newNote) {\n\t\t\t\t\t\t\t\tconst restLength: number = beforeSeven\n\t\t\t\t\t\t\t\t\t? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n\t\t\t\t\t\t\t\t\t: bits.readPartDuration();\n\t\t\t\t\t\t\t\tcurPart += restLength;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet shape: any;\n\t\t\t\t\t\t\t\tif (useOldShape) {\n\t\t\t\t\t\t\t\t\tshape = recentShapes[shapeIndex];\n\t\t\t\t\t\t\t\t\trecentShapes.splice(shapeIndex, 1);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tshape = {};\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tshape.pitchCount = 1;\n\t\t\t\t\t\t\t\t\twhile (shape.pitchCount < Config.maxChordSize && bits.read(1) == 1) shape.pitchCount++;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tshape.pinCount = bits.readPinCount();\n\t\t\t\t\t\t\t\t\tshape.initialSize = bits.read(bitsPerNoteSize);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tshape.pins = [];\n\t\t\t\t\t\t\t\t\tshape.length = 0;\n\t\t\t\t\t\t\t\t\tshape.bendCount = 0;\n\t\t\t\t\t\t\t\t\tfor (let j: number = 0; j < shape.pinCount; j++) {\n\t\t\t\t\t\t\t\t\t\tlet pinObj: any = {};\n\t\t\t\t\t\t\t\t\t\tpinObj.pitchBend = bits.read(1) == 1;\n\t\t\t\t\t\t\t\t\t\tif (pinObj.pitchBend) shape.bendCount++;\n\t\t\t\t\t\t\t\t\t\tshape.length += beforeSeven\n\t\t\t\t\t\t\t\t\t\t\t? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n\t\t\t\t\t\t\t\t\t\t\t: bits.readPartDuration();\n\t\t\t\t\t\t\t\t\t\tpinObj.time = shape.length;\n\t\t\t\t\t\t\t\t\t\tpinObj.size = bits.read(bitsPerNoteSize);\n\t\t\t\t\t\t\t\t\t\tshape.pins.push(pinObj);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trecentShapes.unshift(shape);\n\t\t\t\t\t\t\t\tif (recentShapes.length > 10) recentShapes.pop(); // TODO: Use Deque?\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlet note: Note;\n\t\t\t\t\t\t\t\tif (newNotes.length <= noteCount) {\n\t\t\t\t\t\t\t\t\tnote = new Note(0, curPart, curPart + shape.length, shape.initialSize);\n\t\t\t\t\t\t\t\t\tnewNotes[noteCount++] = note;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnote = newNotes[noteCount++];\n\t\t\t\t\t\t\t\t\tnote.start = curPart;\n\t\t\t\t\t\t\t\t\tnote.end = curPart + shape.length;\n\t\t\t\t\t\t\t\t\tnote.pins[0].size = shape.initialSize;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlet pitch: number;\n\t\t\t\t\t\t\t\tlet pitchCount: number = 0;\n\t\t\t\t\t\t\t\tconst pitchBends: number[] = []; // TODO: allocate this array only once! keep separate length and iterator index. Use Deque?\n\t\t\t\t\t\t\t\tfor (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\n\t\t\t\t\t\t\t\t\tconst useOldPitch: boolean = bits.read(1) == 1;\n\t\t\t\t\t\t\t\t\tif (!useOldPitch) {\n\t\t\t\t\t\t\t\t\t\tconst interval: number = bits.readPitchInterval();\n\t\t\t\t\t\t\t\t\t\tpitch = lastPitch;\n\t\t\t\t\t\t\t\t\t\tlet intervalIter: number = interval;\n\t\t\t\t\t\t\t\t\t\twhile (intervalIter > 0) {\n\t\t\t\t\t\t\t\t\t\t\tpitch++;\n\t\t\t\t\t\t\t\t\t\t\twhile (recentPitches.indexOf(pitch) != -1) pitch++;\n\t\t\t\t\t\t\t\t\t\t\tintervalIter--;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\twhile (intervalIter < 0) {\n\t\t\t\t\t\t\t\t\t\t\tpitch--;\n\t\t\t\t\t\t\t\t\t\t\twhile (recentPitches.indexOf(pitch) != -1) pitch--;\n\t\t\t\t\t\t\t\t\t\t\tintervalIter++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconst pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(3));\n\t\t\t\t\t\t\t\t\t\tpitch = recentPitches[pitchIndex];\n\t\t\t\t\t\t\t\t\t\trecentPitches.splice(pitchIndex, 1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\trecentPitches.unshift(pitch);\n\t\t\t\t\t\t\t\t\tif (recentPitches.length > 8) recentPitches.pop();\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (j < shape.pitchCount) {\n\t\t\t\t\t\t\t\t\t\tnote.pitches[pitchCount++] = pitch;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpitchBends.push(pitch);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (j == shape.pitchCount - 1) {\n\t\t\t\t\t\t\t\t\t\tlastPitch = note.pitches[0];\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tlastPitch = pitch;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnote.pitches.length = pitchCount;\n\t\t\t\t\t\t\t\tpitchBends.unshift(note.pitches[0]); // TODO: Use Deque?\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlet pinCount: number = 1;\n\t\t\t\t\t\t\t\tfor (const pinObj of shape.pins) {\n\t\t\t\t\t\t\t\t\tif (pinObj.pitchBend) pitchBends.shift();\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst interval: number = pitchBends[0] - note.pitches[0];\n\t\t\t\t\t\t\t\t\tif (note.pins.length <= pinCount) {\n\t\t\t\t\t\t\t\t\t\tnote.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconst pin: NotePin = note.pins[pinCount++];\n\t\t\t\t\t\t\t\t\t\tpin.interval = interval;\n\t\t\t\t\t\t\t\t\t\tpin.time = pinObj.time;\n\t\t\t\t\t\t\t\t\t\tpin.size = pinObj.size;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnote.pins.length = pinCount;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (note.start == 0 && !beforeNine) {\n\t\t\t\t\t\t\t\t\tnote.continuesLastPattern = (bits.read(1) == 1);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnote.continuesLastPattern = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcurPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewNotes.length = noteCount;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (beforeThree) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchannelIndex++;\n\t\t\t\t\t\tif (channelIndex >= this.getChannelCount()) break;\n\t\t\t\t\t}\n\t\t\t\t} // while (true)\n\t\t\t} break;\n\t\t\tdefault: {\n\t\t\t\tthrow new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1));\n\t\t\t} break;\n\t\t}\n\t}\n\t\n\tpublic toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\n\t\tconst channelArray: Object[] = [];\n\t\tfor (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n\t\t\tconst channel: Channel = this.channels[channelIndex];\n\t\t\tconst instrumentArray: Object[] = [];\n\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n\t\t\tfor (const instrument of channel.instruments) {\n\t\t\t\tinstrumentArray.push(instrument.toJsonObject());\n\t\t\t}\n\t\t\t\n\t\t\tconst patternArray: Object[] = [];\n\t\t\tfor (const pattern of channel.patterns) {\n\t\t\t\tpatternArray.push(pattern.toJsonObject(this));\n\t\t\t}\n\t\t\t\n\t\t\tconst sequenceArray: number[] = [];\n\t\t\tif (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\n\t\t\t\tsequenceArray.push(channel.bars[i]);\n\t\t\t}\n\t\t\tfor (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\n\t\t\t\tsequenceArray.push(channel.bars[i]);\n\t\t\t}\n\t\t\tif (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\n\t\t\t\tsequenceArray.push(channel.bars[i]);\n\t\t\t}\n\t\t\t\n\t\t\tconst channelObject: any = {\n\t\t\t\t\"type\": isNoiseChannel ? \"drum\" : \"pitch\",\n\t\t\t\t\"instruments\": instrumentArray,\n\t\t\t\t\"patterns\": patternArray,\n\t\t\t\t\"sequence\": sequenceArray,\n\t\t\t};\n\t\t\tif (!isNoiseChannel) {\n\t\t\t\t// For compatibility with old versions the octave is offset by one.\n\t\t\t\tchannelObject[\"octaveScrollBar\"] = channel.octave - 1;\n\t\t\t}\n\t\t\tchannelArray.push(channelObject);\n\t\t}\n\t\t\n\t\treturn {\n\t\t\t\"format\": Song._format,\n\t\t\t\"version\": Song._latestVersion,\n\t\t\t\"scale\": Config.scales[this.scale].name,\n\t\t\t\"key\": Config.keys[this.key].name,\n\t\t\t\"introBars\": this.loopStart,\n\t\t\t\"loopBars\": this.loopLength,\n\t\t\t\"beatsPerBar\": this.beatsPerBar,\n\t\t\t\"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\n\t\t\t\"beatsPerMinute\": this.tempo,\n\t\t\t//\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays.\n\t\t\t\"layeredInstruments\": this.layeredInstruments,\n\t\t\t\"patternInstruments\": this.patternInstruments,\n\t\t\t\"channels\": channelArray,\n\t\t};\n\t}\n\t\n\tpublic fromJsonObject(jsonObject: any): void {\n\t\tthis.initToDefault(true);\n\t\tif (!jsonObject) return;\n\t\t\n\t\t//const version: number = jsonObject[\"version\"] | 0;\n\t\t//if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\n\t\t\n\t\tthis.scale = 11; // default to expert.\n\t\tif (jsonObject[\"scale\"] != undefined) {\n\t\t\tconst oldScaleNames: Dictionary<string> = {\n\t\t\t\t\"romani :)\": \"double harmonic :)\",\n\t\t\t\t\"romani :(\": \"double harmonic :(\",\n\t\t\t\t\"dbl harmonic :)\": \"double harmonic :)\",\n\t\t\t\t\"dbl harmonic :(\": \"double harmonic :(\",\n\t\t\t\t\"enigma\": \"strange\",\n\t\t\t};\n\t\t\tconst scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\n\t\t\tconst scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\n\t\t\tif (scale != -1) this.scale = scale;\n\t\t}\n\t\t\n\t\tif (jsonObject[\"key\"] != undefined) {\n\t\t\tif (typeof(jsonObject[\"key\"]) == \"number\") {\n\t\t\t\tthis.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\n\t\t\t} else if (typeof(jsonObject[\"key\"]) == \"string\") {\n\t\t\t\tconst key: string = jsonObject[\"key\"];\n\t\t\t\tconst letter: string = key.charAt(0).toUpperCase();\n\t\t\t\tconst symbol: string = key.charAt(1).toLowerCase();\n\t\t\t\tconst letterMap: Readonly<Dictionary<number>> = {\"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11};\n\t\t\t\tconst accidentalMap: Readonly<Dictionary<number>> = {\"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1};\n\t\t\t\tlet index: number | undefined = letterMap[letter];\n\t\t\t\tconst offset: number | undefined = accidentalMap[symbol];\n\t\t\t\tif (index != undefined) {\n\t\t\t\t\tif (offset != undefined) index += offset;\n\t\t\t\t\tif (index < 0) index += 12;\n\t\t\t\t\tindex = index % 12;\n\t\t\t\t\tthis.key = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (jsonObject[\"beatsPerMinute\"] != undefined) {\n\t\t\tthis.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\n\t\t}\n\t\t\n\t\tlet legacyGlobalReverb: number = 0; // In older songs, reverb was song-global, record that here and pass it to Instrument.fromJsonObject() for context.\n\t\tif (jsonObject[\"reverb\"] != undefined) {\n\t\t\tlegacyGlobalReverb = clamp(0, 4, jsonObject[\"reverb\"] | 0);\n\t\t}\n\t\t\n\t\tif (jsonObject[\"beatsPerBar\"] != undefined) {\n\t\t\tthis.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\n\t\t}\n\t\t\n\t\tlet importedPartsPerBeat: number = 4;\n\t\tif (jsonObject[\"ticksPerBeat\"] != undefined) {\n\t\t\timportedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\n\t\t\tthis.rhythm = Config.rhythms.findIndex(rhythm=>rhythm.stepsPerBeat==importedPartsPerBeat);\n\t\t\tif (this.rhythm == -1) {\n\t\t\t\tthis.rhythm = 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet maxInstruments: number = 1;\n\t\tlet maxPatterns: number = 1;\n\t\tlet maxBars: number = 1;\n\t\tif (jsonObject[\"channels\"] != undefined) {\n\t\t\tfor (const channelObject of jsonObject[\"channels\"]) {\n\t\t\t\tif (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\n\t\t\t\tif (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\n\t\t\t\tif (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (jsonObject[\"layeredInstruments\"] != undefined) {\n\t\t\tthis.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\n\t\t} else {\n\t\t\tthis.layeredInstruments = false;\n\t\t}\n\t\tif (jsonObject[\"patternInstruments\"] != undefined) {\n\t\t\tthis.patternInstruments = !!jsonObject[\"patternInstruments\"];\n\t\t} else {\n\t\t\tthis.patternInstruments = (maxInstruments > 1);\n\t\t}\n\t\tthis.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\n\t\tthis.barCount = Math.min(maxBars, Config.barCountMax);\n\t\t\n\t\tif (jsonObject[\"introBars\"] != undefined) {\n\t\t\tthis.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\n\t\t}\n\t\tif (jsonObject[\"loopBars\"] != undefined) {\n\t\t\tthis.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\n\t\t}\n\t\t\n\t\tconst newPitchChannels: Channel[] = [];\n\t\tconst newNoiseChannels: Channel[] = [];\n\t\tif (jsonObject[\"channels\"] != undefined) {\n\t\t\tfor (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n\t\t\t\tlet channelObject: any = jsonObject[\"channels\"][channelIndex];\n\t\t\t\t\n\t\t\t\tconst channel: Channel = new Channel();\n\t\t\t\t\n\t\t\t\tlet isNoiseChannel: boolean = false;\n\t\t\t\tif (channelObject[\"type\"] != undefined) {\n\t\t\t\t\tisNoiseChannel = (channelObject[\"type\"] == \"drum\");\n\t\t\t\t} else {\n\t\t\t\t\t// for older files, assume drums are channel 3.\n\t\t\t\t\tisNoiseChannel = (channelIndex >= 3);\n\t\t\t\t}\n\t\t\t\tif (isNoiseChannel) {\n\t\t\t\t\tnewNoiseChannels.push(channel);\n\t\t\t\t} else {\n\t\t\t\t\tnewPitchChannels.push(channel);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (channelObject[\"octaveScrollBar\"] != undefined) {\n\t\t\t\t\tchannel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\n\t\t\t\t\tif (isNoiseChannel) channel.octave = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Array.isArray(channelObject[\"instruments\"])) {\n\t\t\t\t\tconst instrumentObjects: any[] = channelObject[\"instruments\"];\n\t\t\t\t\tfor (let i: number = 0; i < instrumentObjects.length; i++) {\n\t\t\t\t\t\tif (i >= this.getMaxInstrumentsPerChannel()) break;\n\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel);\n\t\t\t\t\t\tchannel.instruments[i] = instrument;\n\t\t\t\t\t\tinstrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, legacyGlobalReverb);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (let i: number = 0; i < this.patternsPerChannel; i++) {\n\t\t\t\t\tconst pattern: Pattern = new Pattern();\n\t\t\t\t\tchannel.patterns[i] = pattern;\n\t\t\t\t\t\n\t\t\t\t\tlet patternObject: any = undefined;\n\t\t\t\t\tif (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\n\t\t\t\t\tif (patternObject == undefined) continue;\n\t\t\t\t\t\n\t\t\t\t\tpattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel);\n\t\t\t\t}\n\t\t\t\tchannel.patterns.length = this.patternsPerChannel;\n\t\t\t\t\n\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\n\t\t\t\t\tchannel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\n\t\t\t\t}\n\t\t\t\tchannel.bars.length = this.barCount;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\n\t\tif (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\n\t\tthis.pitchChannelCount = newPitchChannels.length;\n\t\tthis.noiseChannelCount = newNoiseChannels.length;\n\t\tthis.channels.length = 0;\n\t\tArray.prototype.push.apply(this.channels, newPitchChannels);\n\t\tArray.prototype.push.apply(this.channels, newNoiseChannels);\n\t}\n\t\n\tpublic getPattern(channelIndex: number, bar: number): Pattern | null {\n\t\tif (bar < 0 || bar >= this.barCount) return null;\n\t\tconst patternIndex: number = this.channels[channelIndex].bars[bar];\n\t\tif (patternIndex == 0) return null;\n\t\treturn this.channels[channelIndex].patterns[patternIndex - 1];\n\t}\n\t\n\tpublic getBeatsPerMinute(): number {\n\t\treturn this.tempo;\n\t}\n\t\n\tpublic static getNeededBits(maxValue: number): number {\n\t\treturn 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\n\t}\n}\n\nclass PickedString {\n\tpublic delayLine: Float32Array | null = null;\n\tpublic delayIndex: number;\n\tpublic allPassSample: number;\n\tpublic allPassPrevInput: number;\n\tpublic sustainFilterSample: number;\n\tpublic sustainFilterPrevOutput2: number;\n\tpublic sustainFilterPrevInput1: number;\n\tpublic sustainFilterPrevInput2: number;\n\tpublic fractionalDelaySample: number;\n\tpublic prevDelayLength: number;\n\tpublic delayLengthDelta: number;\n\tpublic delayResetOffset: number;\n\t\n\tpublic allPassG: number = 0.0;\n\tpublic allPassGDelta: number = 0.0;\n\tpublic sustainFilterA1: number = 0.0;\n\tpublic sustainFilterA1Delta: number = 0.0;\n\tpublic sustainFilterA2: number = 0.0;\n\tpublic sustainFilterA2Delta: number = 0.0;\n\tpublic sustainFilterB0: number = 0.0;\n\tpublic sustainFilterB0Delta: number = 0.0;\n\tpublic sustainFilterB1: number = 0.0;\n\tpublic sustainFilterB1Delta: number = 0.0;\n\tpublic sustainFilterB2: number = 0.0;\n\tpublic sustainFilterB2Delta: number = 0.0;\n\t\n\tconstructor() {\n\t\tthis.reset();\n\t}\n\t\n\tpublic reset(): void {\n\t\tthis.delayIndex = -1;\n\t\tthis.allPassSample = 0.0;\n\t\tthis.allPassPrevInput = 0.0;\n\t\tthis.sustainFilterSample = 0.0;\n\t\tthis.sustainFilterPrevOutput2 = 0.0;\n\t\tthis.sustainFilterPrevInput1 = 0.0;\n\t\tthis.sustainFilterPrevInput2 = 0.0;\n\t\tthis.fractionalDelaySample = 0.0;\n\t\tthis.prevDelayLength = -1.0;\n\t\tthis.delayResetOffset = 0;\n\t}\n\t\n\tpublic update(synth: Synth, instrumentState: InstrumentState, tone: Tone, stringIndex: number, roundedSamplesPerTick: number, stringDecayStart: number, stringDecayEnd: number, sustainType: SustainType): void {\n\t\tconst allPassCenter: number = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\n\t\t\n\t\tconst prevDelayLength: number = this.prevDelayLength;\n\t\t\n\t\tconst phaseDeltaStart: number = tone.phaseDeltas[stringIndex];\n\t\tconst phaseDeltaScale: number = tone.phaseDeltaScales[stringIndex];\n\t\tconst phaseDeltaEnd: number = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\n\t\t\n\t\tconst radiansPerSampleStart: number = Math.PI * 2.0 * phaseDeltaStart;\n\t\tconst radiansPerSampleEnd: number   = Math.PI * 2.0 * phaseDeltaEnd;\n\t\t\n\t\tconst centerHarmonicStart: number = radiansPerSampleStart * 2.0;\n\t\tconst centerHarmonicEnd: number   = radiansPerSampleEnd * 2.0;\n\t\t\n\t\tconst allPassRadiansStart: number = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\n\t\tconst allPassRadiansEnd: number = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\n\t\t\n\t\tconst shelfRadians: number = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\n\t\tconst decayCurveStart: number = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\n\t\tconst decayCurveEnd: number   = (Math.pow(100.0, stringDecayEnd  ) - 1.0) / 99.0;\n\t\tconst register: number = sustainType == SustainType.acoustic ? 0.25 : 0.0;\n\t\tconst registerShelfCenter: number = 15.6;\n\t\tconst registerLowpassCenter: number = 3.0 * synth.samplesPerSecond / 48000;\n\t\t//const decayRateStart: number = Math.pow(0.5, decayCurveStart * shelfRadians / radiansPerSampleStart);\n\t\t//const decayRateEnd: number   = Math.pow(0.5, decayCurveEnd   * shelfRadians / radiansPerSampleEnd);\n\t\tconst decayRateStart: number = Math.pow(0.5, decayCurveStart * Math.pow(shelfRadians / (radiansPerSampleStart * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n\t\tconst decayRateEnd:   number = Math.pow(0.5, decayCurveEnd   * Math.pow(shelfRadians / (radiansPerSampleEnd   * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n\t\t\n\t\tconst expressionDecayStart: number = Math.pow(decayRateStart, 0.002);\n\t\tconst expressionDecayEnd: number   = Math.pow(decayRateEnd,   0.002);\n\t\t\n\t\tSynth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n\t\tconst allPassGStart: number = Synth.tempFilterStartCoefficients.b[0]; /* same as a[1] */\n\t\tconst allPassPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n\t\t\n\t\tSynth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n\t\tconst allPassGEnd: number = Synth.tempFilterEndCoefficients.b[0]; /* same as a[1] */\n\t\tconst allPassPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n\t\t\n\t\t// 1st order shelf filters and 2nd order lowpass filters have differently shaped frequency\n\t\t// responses, as well as adjustable shapes. I originally picked a 1st order shelf filter,\n\t\t// but I kinda prefer 2nd order lowpass filters now and I designed a couple settings:\n\t\tconst enum PickedStringBrightnessType {\n\t\t\tbright, // 1st order shelf\n\t\t\tnormal, // 2nd order lowpass, rounded corner\n\t\t\tresonant, // 3rd order lowpass, harder corner\n\t\t}\n\t\tconst brightnessType: PickedStringBrightnessType = <any> sustainType == SustainType.bright ? PickedStringBrightnessType.bright : PickedStringBrightnessType.normal;\n\t\tif (brightnessType == PickedStringBrightnessType.bright) {\n\t\t\tconst shelfGainStart: number = Math.pow(decayRateStart, Config.stringDecayRate);\n\t\t\tconst shelfGainEnd: number   = Math.pow(decayRateEnd,   Config.stringDecayRate);\n\t\t\tSynth.tempFilterStartCoefficients.highShelf2ndOrder(shelfRadians, shelfGainStart, 0.5);\n\t\t\tSynth.tempFilterEndCoefficients.highShelf2ndOrder(shelfRadians, shelfGainEnd, 0.5);\n\t\t} else {\n\t\t\tconst cornerHardness: number = Math.pow(brightnessType == PickedStringBrightnessType.normal ? 0.0 : 1.0, 0.25);\n\t\t\tconst lowpass1stOrderCutoffRadiansStart: number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleStart * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveStart, .5);\n\t\t\tconst lowpass1stOrderCutoffRadiansEnd:   number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleEnd   * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveEnd,   .5);\n\t\t\tconst lowpass2ndOrderCutoffRadiansStart: number = lowpass1stOrderCutoffRadiansStart * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n\t\t\tconst lowpass2ndOrderCutoffRadiansEnd:   number = lowpass1stOrderCutoffRadiansEnd   * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n\t\t\tconst lowpass2ndOrderGainStart: number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n\t\t\tconst lowpass2ndOrderGainEnd:   number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n\t\t\tSynth.tempFilterStartCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansStart), lowpass2ndOrderGainStart);\n\t\t\tSynth.tempFilterEndCoefficients  .lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansEnd),   lowpass2ndOrderGainEnd);\n\t\t}\n\t\t\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n\t\tconst sustainFilterA1Start: number = Synth.tempFilterStartCoefficients.a[1];\n\t\tconst sustainFilterA2Start: number = Synth.tempFilterStartCoefficients.a[2];\n\t\tconst sustainFilterB0Start: number = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\n\t\tconst sustainFilterB1Start: number = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\n\t\tconst sustainFilterB2Start: number = Synth.tempFilterStartCoefficients.b[2] * expressionDecayStart;\n\t\tconst sustainFilterPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n\t\t\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n\t\tconst sustainFilterA1End: number = Synth.tempFilterEndCoefficients.a[1];\n\t\tconst sustainFilterA2End: number = Synth.tempFilterEndCoefficients.a[2];\n\t\tconst sustainFilterB0End: number = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\n\t\tconst sustainFilterB1End: number = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\n\t\tconst sustainFilterB2End: number = Synth.tempFilterEndCoefficients.b[2] * expressionDecayEnd;\n\t\tconst sustainFilterPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n\t\t\n\t\tconst periodLengthStart: number = 1.0 / phaseDeltaStart;\n\t\tconst periodLengthEnd: number = 1.0 / phaseDeltaEnd;\n\t\tconst minBufferLength: number = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\n\t\tconst delayLength: number = periodLengthStart - allPassPhaseDelayStart - sustainFilterPhaseDelayStart;\n\t\tconst delayLengthEnd: number = periodLengthEnd - allPassPhaseDelayEnd - sustainFilterPhaseDelayEnd;\n\t\t\n\t\tthis.prevDelayLength = delayLength;\n\t\tthis.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\n\t\tthis.allPassG = allPassGStart;\n\t\tthis.sustainFilterA1 = sustainFilterA1Start;\n\t\tthis.sustainFilterA2 = sustainFilterA2Start;\n\t\tthis.sustainFilterB0 = sustainFilterB0Start;\n\t\tthis.sustainFilterB1 = sustainFilterB1Start;\n\t\tthis.sustainFilterB2 = sustainFilterB2Start;\n\t\tthis.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\n\t\tthis.sustainFilterA1Delta = (sustainFilterA1End - sustainFilterA1Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterA2Delta = (sustainFilterA2End - sustainFilterA2Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB0Delta = (sustainFilterB0End - sustainFilterB0Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB1Delta = (sustainFilterB1End - sustainFilterB1Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB2Delta = (sustainFilterB2End - sustainFilterB2Start) / roundedSamplesPerTick;\n\t\t\n\t\tconst pitchChanged: boolean = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\n\t\t\n\t\tconst reinitializeImpulse: boolean = (this.delayIndex == -1 || pitchChanged);\n\t\tif (this.delayLine == null || this.delayLine.length <= minBufferLength) {\n\t\t\t// The delay line buffer will get reused for other tones so might as well\n\t\t\t// start off with a buffer size that is big enough for most notes.\n\t\t\tconst likelyMaximumLength: number = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\n\t\t\tconst newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n\t\t\tif (!reinitializeImpulse && this.delayLine != null) {\n\t\t\t\t// If the tone has already started but the buffer needs to be reallocated,\n\t\t\t\t// transfer the old data to the new buffer.\n\t\t\t\tconst oldDelayBufferMask: number = (this.delayLine.length - 1) >> 0;\n\t\t\t\tconst startCopyingFromIndex: number = this.delayIndex + this.delayResetOffset;\n\t\t\t\tthis.delayIndex = this.delayLine.length - this.delayResetOffset;\n\t\t\t\tfor (let i: number = 0; i < this.delayLine.length; i++) {\n\t\t\t\t\tnewDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.delayLine = newDelayLine;\n\t\t}\n\t\tconst delayLine: Float32Array = this.delayLine;\n\t\tconst delayBufferMask: number = (delayLine.length - 1) >> 0;\n\t\t\n\t\tif (reinitializeImpulse) {\n\t\t\t// -1 delay index means the tone was reset.\n\t\t\t// Also, if the pitch changed suddenly (e.g. from seamless or arpeggio) then reset the wave.\n\t\t\t\n\t\t\tthis.delayIndex = 0;\n\t\t\tthis.allPassSample = 0.0;\n\t\t\tthis.allPassPrevInput = 0.0;\n\t\t\tthis.sustainFilterSample = 0.0;\n\t\t\tthis.sustainFilterPrevOutput2 = 0.0;\n\t\t\tthis.sustainFilterPrevInput1 = 0.0;\n\t\t\tthis.sustainFilterPrevInput2 = 0.0;\n\t\t\tthis.fractionalDelaySample = 0.0;\n\t\t\t\n\t\t\t// Clear away a region of the delay buffer for the new impulse.\n\t\t\tconst startImpulseFrom: number = -delayLength;\n\t\t\tconst startZerosFrom: number = Math.floor(startImpulseFrom - periodLengthStart / 2);\n\t\t\tconst stopZerosAt: number = Math.ceil(startZerosFrom + periodLengthStart * 2);\n\t\t\tthis.delayResetOffset = stopZerosAt; // And continue clearing the area in front of the delay line.\n\t\t\tfor (let i: number = startZerosFrom; i <= stopZerosAt; i++) {\n\t\t\t\tdelayLine[i & delayBufferMask] = 0.0;\n\t\t\t}\n\t\t\t\n\t\t\tconst impulseWave: Float32Array = instrumentState.wave!;\n\t\t\tconst impulseWaveLength: number = impulseWave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n\t\t\tconst impulsePhaseDelta: number = impulseWaveLength / periodLengthStart;\n\t\t\t\n\t\t\tconst fadeDuration: number = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\n\t\t\tconst startImpulseFromSample: number = Math.ceil(startImpulseFrom);\n\t\t\tconst stopImpulseAt: number = startImpulseFrom + periodLengthStart + fadeDuration;\n\t\t\tconst stopImpulseAtSample: number = stopImpulseAt;\n\t\t\tlet impulsePhase: number = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\n\t\t\tlet prevWaveIntegral: number = 0.0;\n\t\t\tfor (let i: number = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\n\t\t\t\tconst impulsePhaseInt: number = impulsePhase|0;\n\t\t\t\tconst index: number = impulsePhaseInt % impulseWaveLength;\n\t\t\t\tlet nextWaveIntegral: number = impulseWave[index];\n\t\t\t\tconst phaseRatio: number = impulsePhase - impulsePhaseInt;\n\t\t\t\tnextWaveIntegral += (impulseWave[index+1] - nextWaveIntegral) * phaseRatio;\n\t\t\t\tconst sample: number = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\n\t\t\t\tconst fadeIn: number = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\n\t\t\t\tconst fadeOut: number = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\n\t\t\t\tconst combinedFade: number = fadeIn * fadeOut;\n\t\t\t\tconst curvedFade: number = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade); // A cubic sigmoid from 0 to 1.\n\t\t\t\tdelayLine[i & delayBufferMask] += sample * curvedFade;\n\t\t\t\tprevWaveIntegral = nextWaveIntegral;\n\t\t\t\timpulsePhase += impulsePhaseDelta;\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass EnvelopeComputer {\n\tpublic noteSecondsStart: number = 0.0;\n\tpublic noteSecondsEnd: number = 0.0;\n\tpublic noteTicksStart: number = 0.0;\n\tpublic noteTicksEnd: number = 0.0;\n\tpublic noteSizeStart: number = Config.noteSizeMax;\n\tpublic noteSizeEnd: number = Config.noteSizeMax;\n\tpublic prevNoteSize: number = Config.noteSizeMax;\n\tpublic nextNoteSize: number = Config.noteSizeMax;\n\tprivate _noteSizeFinal: number = Config.noteSizeMax;\n\tpublic prevNoteSecondsStart: number = 0.0;\n\tpublic prevNoteSecondsEnd: number = 0.0;\n\tpublic prevNoteTicksStart: number = 0.0;\n\tpublic prevNoteTicksEnd: number = 0.0;\n\tprivate _prevNoteSizeFinal: number = Config.noteSizeMax;\n\t\n\tpublic prevSlideStart: boolean = false;\n\tpublic prevSlideEnd: boolean = false;\n\tpublic nextSlideStart: boolean = false;\n\tpublic nextSlideEnd: boolean = false;\n\tpublic prevSlideRatioStart: number = 0.0;\n\tpublic prevSlideRatioEnd: number = 0.0;\n\tpublic nextSlideRatioStart: number = 0.0;\n\tpublic nextSlideRatioEnd: number = 0.0;\n\t\n\tpublic readonly envelopeStarts: number[] = [];\n\tpublic readonly envelopeEnds: number[] = [];\n\tprivate readonly _modifiedEnvelopeIndices: number[] = [];\n\tprivate _modifiedEnvelopeCount: number = 0;\n\tpublic lowpassCutoffDecayVolumeCompensation: number = 1.0;\n\t\n\tconstructor(/*private _perNote: boolean*/) {\n\t\t//const length: number = this._perNote ? EnvelopeComputeIndex.length : InstrumentAutomationIndex.length;\n\t\tconst length: number = EnvelopeComputeIndex.length;\n\t\tfor (let i: number = 0; i < length; i++) {\n\t\t\tthis.envelopeStarts[i] = 1.0;\n\t\t\tthis.envelopeEnds[i] = 1.0;\n\t\t}\n\t\t\n\t\tthis.reset();\n\t}\n\t\n\tpublic reset(): void {\n\t\tthis.noteSecondsEnd = 0.0;\n\t\tthis.noteTicksEnd = 0.0;\n\t\tthis._noteSizeFinal = Config.noteSizeMax;\n\t\tthis.prevNoteSecondsEnd = 0.0;\n\t\tthis.prevNoteTicksEnd = 0.0;\n\t\tthis._prevNoteSizeFinal = Config.noteSizeMax;\n\t\tthis._modifiedEnvelopeCount = 0;\n\t}\n\t\n\tpublic computeEnvelopes(instrument: Instrument, currentPart: number, tickTimeStart: number, secondsPerTick: number, tone: Tone | null): void {\n\t\tconst transition: Transition = instrument.getTransition();\n\t\tif (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n\t\t\tthis.prevNoteSecondsEnd = this.noteSecondsEnd;\n\t\t\tthis.prevNoteTicksEnd = this.noteTicksEnd;\n\t\t\tthis._prevNoteSizeFinal = this._noteSizeFinal;\n\t\t\tthis.noteSecondsEnd = 0.0;\n\t\t\tthis.noteTicksEnd = 0.0;\n\t\t}\n\t\tif (tone != null) {\n\t\t\tif (tone.note != null) {\n\t\t\t\tthis._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\n\t\t\t} else {\n\t\t\t\tthis._noteSizeFinal = Config.noteSizeMax;\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst tickTimeEnd: number = tickTimeStart + 1.0;\n\t\tconst noteSecondsStart: number = this.noteSecondsEnd;\n\t\tconst noteSecondsEnd: number = noteSecondsStart + secondsPerTick;\n\t\tconst noteTicksStart: number = this.noteTicksEnd;\n\t\tconst noteTicksEnd: number = noteTicksStart + 1.0;\n\t\tconst prevNoteSecondsStart: number = this.prevNoteSecondsEnd;\n\t\tconst prevNoteSecondsEnd: number = prevNoteSecondsStart + secondsPerTick;\n\t\tconst prevNoteTicksStart: number = this.prevNoteTicksEnd;\n\t\tconst prevNoteTicksEnd: number = prevNoteTicksStart + 1.0;\n\t\t\n\t\tconst beatsPerTick: number = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\n\t\tconst beatTimeStart: number = beatsPerTick * tickTimeStart;\n\t\tconst beatTimeEnd:   number = beatsPerTick * tickTimeEnd;\n\t\t\n\t\tlet noteSizeStart: number = this._noteSizeFinal;\n\t\tlet noteSizeEnd: number = this._noteSizeFinal;\n\t\tlet prevNoteSize: number = this._prevNoteSizeFinal;\n\t\tlet nextNoteSize: number = 0;\n\t\tlet prevSlideStart: boolean = false;\n\t\tlet prevSlideEnd: boolean = false;\n\t\tlet nextSlideStart: boolean = false;\n\t\tlet nextSlideEnd: boolean = false;\n\t\tlet prevSlideRatioStart: number = 0.0;\n\t\tlet prevSlideRatioEnd: number = 0.0;\n\t\tlet nextSlideRatioStart: number = 0.0;\n\t\tlet nextSlideRatioEnd: number = 0.0;\n\t\tif (tone != null && tone.note != null && !tone.passedEndOfNote) {\n\t\t\tconst endPinIndex: number = tone.note.getEndPinIndex(currentPart);\n\t\t\tconst startPin: NotePin = tone.note.pins[endPinIndex-1];\n\t\t\tconst endPin:   NotePin = tone.note.pins[endPinIndex];\n\t\t\tconst startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\n\t\t\tconst endPinTick:   number = (tone.note.start + endPin.time)   * Config.ticksPerPart;\n\t\t\tconst ratioStart: number = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\n\t\t\tconst ratioEnd:   number = (tickTimeEnd   - startPinTick) / (endPinTick - startPinTick);\n\t\t\tnoteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\n\t\t\tnoteSizeEnd   = startPin.size + (endPin.size - startPin.size) * ratioEnd;\n\t\t\t\n\t\t\tif (transition.slides) {\n\t\t\t\tconst noteStartTick: number = tone.noteStartPart * Config.ticksPerPart;\n\t\t\t\tconst noteEndTick:   number = tone.noteEndPart   * Config.ticksPerPart;\n\t\t\t\tconst noteLengthTicks: number = noteEndTick - noteStartTick;\n\t\t\t\tconst maximumSlideTicks: number = noteLengthTicks * 0.5;\n\t\t\t\tconst slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\n\t\t\t\tif (tone.prevNote != null && !tone.forceContinueAtStart) {\n\t\t\t\t\tif (tickTimeStart - noteStartTick < slideTicks) {\n\t\t\t\t\t\tprevSlideStart = true;\n\t\t\t\t\t\tprevSlideRatioStart = 0.5 * (1.0 - (tickTimeStart - noteStartTick) / slideTicks);\n\t\t\t\t\t}\n\t\t\t\t\tif (tickTimeEnd - noteStartTick < slideTicks) {\n\t\t\t\t\t\tprevSlideEnd = true;\n\t\t\t\t\t\tprevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEnd - noteStartTick) / slideTicks);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (tone.nextNote != null && !tone.forceContinueAtEnd) {\n\t\t\t\t\tnextNoteSize = tone.nextNote.pins[0].size\n\t\t\t\t\tif (noteEndTick - tickTimeStart < slideTicks) {\n\t\t\t\t\t\tnextSlideStart = true;\n\t\t\t\t\t\tnextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStart) / slideTicks);\n\t\t\t\t\t}\n\t\t\t\t\tif (noteEndTick - tickTimeEnd < slideTicks) {\n\t\t\t\t\t\tnextSlideEnd = true;\n\t\t\t\t\t\tnextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEnd) / slideTicks);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet lowpassCutoffDecayVolumeCompensation: number = 1.0;\n\t\tlet usedNoteSize: boolean = false;\n\t\tfor (let envelopeIndex: number = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\n\t\t\tlet automationTarget: AutomationTarget;\n\t\t\tlet targetIndex: number;\n\t\t\tlet envelope: Envelope;\n\t\t\tif (envelopeIndex == instrument.envelopeCount) {\n\t\t\t\tif (usedNoteSize /*|| !this._perNote*/) break;\n\t\t\t\t// Special case: if no other envelopes used note size, default to applying it to note volume.\n\t\t\t\tautomationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n\t\t\t\ttargetIndex = 0;\n\t\t\t\tenvelope = Config.envelopes.dictionary[\"note size\"];\n\t\t\t} else {\n\t\t\t\tlet envelopeSettings: EnvelopeSettings = instrument.envelopes[envelopeIndex];\n\t\t\t\tautomationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\n\t\t\t\ttargetIndex = envelopeSettings.index;\n\t\t\t\tenvelope = Config.envelopes[envelopeSettings.envelope];\n\t\t\t\tif (envelope.type == EnvelopeType.noteSize) usedNoteSize = true;\n\t\t\t}\n\t\t\tif (/*automationTarget.perNote == this._perNote &&*/ automationTarget.computeIndex != null) {\n\t\t\t\tconst computeIndex: number = automationTarget.computeIndex + targetIndex;\n\t\t\t\tlet envelopeStart: number = EnvelopeComputer.computeEnvelope(envelope, noteSecondsStart, beatTimeStart, noteSizeStart);\n\t\t\t\tlet envelopeEnd:   number = EnvelopeComputer.computeEnvelope(envelope, noteSecondsEnd,   beatTimeEnd,   noteSizeEnd);\n\t\t\t\t\n\t\t\t\tif (prevSlideStart) {\n\t\t\t\t\tconst other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsStart, beatTimeStart, prevNoteSize);\n\t\t\t\t\tenvelopeStart += (other - envelopeStart) * prevSlideRatioStart;\n\t\t\t\t}\n\t\t\t\tif (prevSlideEnd) {\n\t\t\t\t\tconst other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsEnd, beatTimeEnd, prevNoteSize);\n\t\t\t\t\tenvelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\n\t\t\t\t}\n\t\t\t\tif (nextSlideStart) {\n\t\t\t\t\tconst other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeStart, nextNoteSize);\n\t\t\t\t\tenvelopeStart += (other - envelopeStart) * nextSlideRatioStart;\n\t\t\t\t}\n\t\t\t\tif (nextSlideEnd) {\n\t\t\t\t\tconst other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeEnd, nextNoteSize);\n\t\t\t\t\tenvelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.envelopeStarts[computeIndex] *= envelopeStart;\n\t\t\t\tthis.envelopeEnds[computeIndex]   *= envelopeEnd;\n\t\t\t\tthis._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\n\t\t\t\t\n\t\t\t\tif (automationTarget.isFilter) {\n\t\t\t\t\tconst filterSettings: FilterSettings = /*this._perNote ?*/ instrument.noteFilter /*: instrument.eqFilter*/;\n\t\t\t\t\tif (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == FilterType.lowPass) {\n\t\t\t\t\t\tlowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.noteSecondsStart = noteSecondsStart;\n\t\tthis.noteSecondsEnd = noteSecondsEnd;\n\t\tthis.noteTicksStart = noteTicksStart;\n\t\tthis.noteTicksEnd = noteTicksEnd;\n\t\tthis.prevNoteSecondsStart = prevNoteSecondsStart;\n\t\tthis.prevNoteSecondsEnd = prevNoteSecondsEnd;\n\t\tthis.prevNoteTicksStart = prevNoteTicksStart;\n\t\tthis.prevNoteTicksEnd = prevNoteTicksEnd;\n\t\tthis.prevNoteSize = prevNoteSize;\n\t\tthis.nextNoteSize = nextNoteSize;\n\t\tthis.noteSizeStart = noteSizeStart;\n\t\tthis.noteSizeEnd = noteSizeEnd;\n\t\tthis.prevSlideStart = prevSlideStart;\n\t\tthis.prevSlideEnd = prevSlideEnd;\n\t\tthis.nextSlideStart = nextSlideStart;\n\t\tthis.nextSlideEnd = nextSlideEnd;\n\t\tthis.prevSlideRatioStart = prevSlideRatioStart;\n\t\tthis.prevSlideRatioEnd = prevSlideRatioEnd;\n\t\tthis.nextSlideRatioStart = nextSlideRatioStart;\n\t\tthis.nextSlideRatioEnd = nextSlideRatioEnd;\n\t\tthis.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\n\t}\n\t\n\tpublic clearEnvelopes(): void {\n\t\tfor (let envelopeIndex: number = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\n\t\t\tconst computeIndex: number = this._modifiedEnvelopeIndices[envelopeIndex];\n\t\t\tthis.envelopeStarts[computeIndex] = 1.0;\n\t\t\tthis.envelopeEnds[computeIndex]   = 1.0;\n\t\t}\n\t\tthis._modifiedEnvelopeCount = 0;\n\t}\n\t\n\tpublic static computeEnvelope(envelope: Envelope, time: number, beats: number, noteSize: number): number {\n\t\tswitch(envelope.type) {\n\t\t\tcase EnvelopeType.noteSize: return Synth.noteSizeToVolumeMult(noteSize);\n\t\t\tcase EnvelopeType.none:     return 1.0;\n\t\t\tcase EnvelopeType.twang:    return 1.0 / (1.0 + time * envelope.speed);\n\t\t\tcase EnvelopeType.swell:    return 1.0 - 1.0 / (1.0 + time * envelope.speed);\n\t\t\tcase EnvelopeType.tremolo:  return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\n\t\t\tcase EnvelopeType.tremolo2: return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\n\t\t\tcase EnvelopeType.punch:    return Math.max(1.0, 2.0 - time * 10.0);\n\t\t\tcase EnvelopeType.flare:    const attack: number = 0.25 / Math.sqrt(envelope.speed); return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * envelope.speed);\n\t\t\tcase EnvelopeType.decay:    return Math.pow(2, -envelope.speed * time);\n\t\t\tdefault: throw new Error(\"Unrecognized operator envelope type.\");\n\t\t}\n\t}\n\t\n\tpublic static getLowpassCutoffDecayVolumeCompensation(envelope: Envelope): number {\n\t\t// This is a little hokey in the details, but I designed it a while ago and keep it \n\t\t// around for compatibility. This decides how much to increase the volume (or\n\t\t// expression) to compensate for a decaying lowpass cutoff to maintain perceived\n\t\t// volume overall.\n\t\tif (envelope.type == EnvelopeType.decay) return 1.25 + 0.025 * envelope.speed;\n\t\tif (envelope.type == EnvelopeType.twang) return 1.0  + 0.02  * envelope.speed;\n\t\treturn 1.0;\n\t}\n}\n\nclass Tone {\n\tpublic instrumentIndex: number;\n\tpublic readonly pitches: number[] = Array(Config.maxChordSize).fill(0);\n\tpublic pitchCount: number = 0;\n\tpublic chordSize: number = 0;\n\tpublic drumsetPitch: number | null = null;\n\tpublic note: Note | null = null;\n\tpublic prevNote: Note | null = null;\n\tpublic nextNote: Note | null = null;\n\tpublic prevNotePitchIndex: number = 0;\n\tpublic nextNotePitchIndex: number = 0;\n\tpublic freshlyAllocated: boolean = true;\n\tpublic atNoteStart: boolean = false;\n\tpublic isOnLastTick: boolean = false; // Whether the tone is finished fading out and ready to be freed.\n\tpublic passedEndOfNote: boolean = false;\n\tpublic forceContinueAtStart: boolean = false;\n\tpublic forceContinueAtEnd: boolean = false;\n\tpublic noteStartPart: number = 0;\n\tpublic noteEndPart: number = 0;\n\tpublic ticksSinceReleased: number = 0;\n\tpublic liveInputSamplesHeld: number = 0;\n\tpublic lastInterval: number = 0;\n\tpublic noiseSample: number = 0.0;\n\tpublic readonly phases: number[] = [];\n\tpublic readonly phaseDeltas: number[] = [];\n\tpublic readonly phaseDeltaScales: number[] = [];\n\tpublic expression: number = 0.0;\n\tpublic expressionDelta: number = 0.0;\n\tpublic readonly operatorExpressions: number[] = [];\n\tpublic readonly operatorExpressionDeltas: number[] = [];\n\tpublic readonly prevPitchExpressions: Array<number | null> = Array(Config.maxPitchOrOperatorCount).fill(null);\n\tpublic prevVibrato: number | null = null;\n\tpublic prevStringDecay: number | null = null;\n\tpublic pulseWidth: number = 0.0;\n\tpublic pulseWidthDelta: number = 0.0;\n\tpublic supersawDynamism: number = 0.0;\n\tpublic supersawDynamismDelta: number = 0.0;\n\tpublic supersawUnisonDetunes: number[] = []; // These can change over time, but slowly enough that I'm not including corresponding delta values within a tick run.\n\tpublic supersawShape: number = 0.0;\n\tpublic supersawShapeDelta: number = 0.0;\n\tpublic supersawDelayLength: number = 0.0;\n\tpublic supersawDelayLengthDelta: number = 0.0;\n\tpublic supersawDelayLine: Float32Array | null = null;\n\tpublic supersawDelayIndex: number = -1;\n\tpublic supersawPrevPhaseDelta: number | null = null;\n\tpublic readonly pickedStrings: PickedString[] = [];\n\t\n\tpublic readonly noteFilters: DynamicBiquadFilter[] = [];\n\tpublic noteFilterCount: number = 0;\n\tpublic initialNoteFilterInput1: number = 0.0;\n\tpublic initialNoteFilterInput2: number = 0.0;\n\t\n\tpublic specialIntervalExpressionMult: number = 1.0;\n\tpublic readonly feedbackOutputs: number[] = [];\n\tpublic feedbackMult: number = 0.0;\n\tpublic feedbackDelta: number = 0.0;\n\t\n\tpublic readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(/*true*/);\n\t\n\tconstructor() {\n\t\tthis.reset();\n\t}\n\t\n\tpublic reset(): void {\n\t\tthis.noiseSample = 0.0;\n\t\tfor (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\n\t\t\tthis.phases[i] = 0.0;\n\t\t\tthis.feedbackOutputs[i] = 0.0;\n\t\t\tthis.prevPitchExpressions[i] = null;\n\t\t}\n\t\tfor (let i: number = 0; i < this.noteFilterCount; i++) {\n\t\t\tthis.noteFilters[i].resetOutput();\n\t\t}\n\t\tthis.noteFilterCount = 0;\n\t\tthis.initialNoteFilterInput1 = 0.0;\n\t\tthis.initialNoteFilterInput2 = 0.0;\n\t\tthis.liveInputSamplesHeld = 0;\n\t\tthis.supersawDelayIndex = -1;\n\t\tfor (const pickedString of this.pickedStrings) {\n\t\t\tpickedString.reset();\n\t\t}\n\t\tthis.envelopeComputer.reset();\n\t\tthis.prevVibrato = null;\n\t\tthis.prevStringDecay = null;\n\t\tthis.supersawPrevPhaseDelta = null;\n\t\tthis.drumsetPitch = null;\n\t}\n}\n\nclass InstrumentState {\n\tpublic awake: boolean = false; // Whether the instrument's effects-processing loop should continue.\n\tpublic computed: boolean = false; // Whether the effects-processing parameters are up-to-date for the current synth run.\n\tpublic tonesAddedInThisTick: boolean = false; // Whether any instrument tones are currently active.\n\tpublic flushingDelayLines: boolean = false; // If no tones were active recently, enter a mode where the delay lines are filled with zeros to reset them for later use.\n\tpublic deactivateAfterThisTick: boolean = false; // Whether the instrument is ready to be deactivated because the delay lines, if any, are fully zeroed.\n\tpublic attentuationProgress: number = 0.0; // How long since an active tone introduced an input signal to the delay lines, normalized from 0 to 1 based on how long to wait until the delay lines signal will have audibly dissapated.\n\tpublic flushedSamples: number = 0; // How many delay line samples have been flushed to zero.\n\tpublic readonly activeTones: Deque<Tone> = new Deque<Tone>();\n\tpublic readonly releasedTones: Deque<Tone> = new Deque<Tone>(); // Tones that are in the process of fading out after the corresponding notes ended.\n\tpublic readonly liveInputTones: Deque<Tone> = new Deque<Tone>(); // Tones that are initiated by a source external to the loaded song data.\n\t\n\tpublic type: InstrumentType = InstrumentType.chip;\n\tpublic synthesizer: Function | null = null;\n\tpublic wave: Float32Array | null = null;\n\tpublic noisePitchFilterMult: number = 1.0;\n\tpublic unison: Unison | null = null;\n\tpublic chord: Chord | null = null;\n\tpublic effects: number = 0;\n\t\n\tpublic eqFilterVolume: number = 1.0;\n\tpublic eqFilterVolumeDelta: number = 0.0;\n\tpublic mixVolume: number = 1.0;\n\tpublic mixVolumeDelta: number = 0.0;\n\tpublic delayInputMult: number = 0.0;\n\tpublic delayInputMultDelta: number = 0.0;\n\t\n\tpublic distortion: number = 0.0;\n\tpublic distortionDelta: number = 0.0;\n\tpublic distortionDrive: number = 0.0;\n\tpublic distortionDriveDelta: number = 0.0;\n\tpublic distortionFractionalInput1: number = 0.0;\n\tpublic distortionFractionalInput2: number = 0.0;\n\tpublic distortionFractionalInput3: number = 0.0;\n\tpublic distortionPrevInput: number = 0.0;\n\tpublic distortionNextOutput: number = 0.0;\n\t\n\tpublic bitcrusherPrevInput: number = 0.0;\n\tpublic bitcrusherCurrentOutput: number = 0.0;\n\tpublic bitcrusherPhase: number = 1.0;\n\tpublic bitcrusherPhaseDelta: number = 0.0;\n\tpublic bitcrusherPhaseDeltaScale: number = 1.0;\n\tpublic bitcrusherScale: number = 1.0;\n\tpublic bitcrusherScaleScale: number = 1.0;\n\tpublic bitcrusherFoldLevel: number = 1.0;\n\tpublic bitcrusherFoldLevelScale: number = 1.0;\n\t\n\tpublic readonly eqFilters: DynamicBiquadFilter[] = [];\n\tpublic eqFilterCount: number = 0;\n\tpublic initialEqFilterInput1: number = 0.0;\n\tpublic initialEqFilterInput2: number = 0.0;\n\t\n\tpublic panningDelayLine: Float32Array | null = null;\n\tpublic panningDelayPos: number = 0;\n\tpublic panningVolumeL: number = 0.0;\n\tpublic panningVolumeR: number = 0.0;\n\tpublic panningVolumeDeltaL: number = 0.0;\n\tpublic panningVolumeDeltaR: number = 0.0;\n\tpublic panningOffsetL: number = 0.0;\n\tpublic panningOffsetR: number = 0.0;\n\tpublic panningOffsetDeltaL: number = 0.0;\n\tpublic panningOffsetDeltaR: number = 0.0;\n\t\n\tpublic chorusDelayLineL: Float32Array | null = null;\n\tpublic chorusDelayLineR: Float32Array | null = null;\n\tpublic chorusDelayLineDirty: boolean = false;\n\tpublic chorusDelayPos: number = 0;\n\tpublic chorusPhase: number = 0;\n\tpublic chorusVoiceMult: number = 0;\n\tpublic chorusVoiceMultDelta: number = 0;\n\tpublic chorusCombinedMult: number = 0;\n\tpublic chorusCombinedMultDelta: number = 0;\n\t\n\tpublic echoDelayLineL: Float32Array | null = null;\n\tpublic echoDelayLineR: Float32Array | null = null;\n\tpublic echoDelayLineDirty: boolean = false;\n\tpublic echoDelayPos: number = 0;\n\tpublic echoDelayOffsetStart: number = 0;\n\tpublic echoDelayOffsetEnd: number | null = null;\n\tpublic echoDelayOffsetRatio: number = 0.0;\n\tpublic echoDelayOffsetRatioDelta: number = 0.0;\n\tpublic echoMult: number = 0.0;\n\tpublic echoMultDelta: number = 0.0;\n\tpublic echoShelfA1: number = 0.0;\n\tpublic echoShelfB0: number = 0.0;\n\tpublic echoShelfB1: number = 0.0;\n\tpublic echoShelfSampleL: number = 0.0;\n\tpublic echoShelfSampleR: number = 0.0;\n\tpublic echoShelfPrevInputL: number = 0.0;\n\tpublic echoShelfPrevInputR: number = 0.0;\n\t\n\tpublic reverbDelayLine: Float32Array | null = null;\n\tpublic reverbDelayLineDirty: boolean = false;\n\tpublic reverbDelayPos: number = 0;\n\tpublic reverbMult: number = 0.0;\n\tpublic reverbMultDelta: number = 0.0;\n\tpublic reverbShelfA1: number = 0.0;\n\tpublic reverbShelfB0: number = 0.0;\n\tpublic reverbShelfB1: number = 0.0;\n\tpublic reverbShelfSample0: number = 0.0;\n\tpublic reverbShelfSample1: number = 0.0;\n\tpublic reverbShelfSample2: number = 0.0;\n\tpublic reverbShelfSample3: number = 0.0;\n\tpublic reverbShelfPrevInput0: number = 0.0;\n\tpublic reverbShelfPrevInput1: number = 0.0;\n\tpublic reverbShelfPrevInput2: number = 0.0;\n\tpublic reverbShelfPrevInput3: number = 0.0;\n\t\n\t//public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(false);\n\t\n\tpublic readonly spectrumWave: SpectrumWaveState = new SpectrumWaveState();\n\tpublic readonly harmonicsWave: HarmonicsWaveState = new HarmonicsWaveState();\n\tpublic readonly drumsetSpectrumWaves: SpectrumWaveState[] = [];\n\t\n\tconstructor() {\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\n\t\t\tthis.drumsetSpectrumWaves[i] = new SpectrumWaveState();\n\t\t}\n\t}\n\t\n\tpublic allocateNecessaryBuffers(synth: Synth, instrument: Instrument, samplesPerTick: number): void {\n\t\tif (effectsIncludePanning(instrument.effects)) {\n\t\t\tif (this.panningDelayLine == null || this.panningDelayLine.length < synth.panningDelayBufferSize) {\n\t\t\t\tthis.panningDelayLine = new Float32Array(synth.panningDelayBufferSize);\n\t\t\t}\n\t\t}\n\t\tif (effectsIncludeChorus(instrument.effects)) {\n\t\t\tif (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\n\t\t\t\tthis.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\n\t\t\t}\n\t\t\tif (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\n\t\t\t\tthis.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\n\t\t\t}\n\t\t}\n\t\tif (effectsIncludeEcho(instrument.effects)) {\n\t\t\t// account for tempo and delay automation changing delay length during a tick?\n\t\t\tconst safeEchoDelaySteps: number = Math.max(Config.echoDelayRange >> 1, (instrument.echoDelay + 1)); // The delay may be very short now, but if it increases later make sure we have enough sample history.\n\t\t\tconst baseEchoDelayBufferSize: number = Synth.fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\n\t\t\tconst safeEchoDelayBufferSize: number = baseEchoDelayBufferSize * 2; // If the tempo or delay changes and we suddenly need a longer delay, make sure that we have enough sample history to accomodate the longer delay.\n\t\t\t\n\t\t\tif (this.echoDelayLineL == null || this.echoDelayLineR == null) {\n\t\t\t\tthis.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\n\t\t\t\tthis.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\n\t\t\t} else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\n\t\t\t\t// The echo delay length may change whlie the song is playing if tempo changes,\n\t\t\t\t// so buffers may need to be reallocated, but we don't want to lose any echoes\n\t\t\t\t// so we need to copy the contents of the old buffer to the new one.\n\t\t\t\tconst newDelayLineL: Float32Array = new Float32Array(safeEchoDelayBufferSize);\n\t\t\t\tconst newDelayLineR: Float32Array = new Float32Array(safeEchoDelayBufferSize);\n\t\t\t\tconst oldMask: number = this.echoDelayLineL.length - 1;\n\t\t\t\t\n\t\t\t\tfor (let i = 0; i < this.echoDelayLineL.length; i++) {\n\t\t\t\t\tnewDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n\t\t\t\t\tnewDelayLineR[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.echoDelayPos = this.echoDelayLineL.length;\n\t\t\t\tthis.echoDelayLineL = newDelayLineL;\n\t\t\t\tthis.echoDelayLineR = newDelayLineR;\n\t\t\t}\n\t\t}\n\t\tif (effectsIncludeReverb(instrument.effects)) {\n\t\t\t// TODO: Make reverb delay line sample rate agnostic. Maybe just double buffer size for 96KHz? Adjust attenuation and shelf cutoff appropriately?\n\t\t\tif (this.reverbDelayLine == null) {\n\t\t\t\tthis.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic deactivate(): void {\n\t\tthis.bitcrusherPrevInput = 0.0;\n\t\tthis.bitcrusherCurrentOutput = 0.0;\n\t\tthis.bitcrusherPhase = 1.0;\n\t\tfor (let i: number = 0; i < this.eqFilterCount; i++) {\n\t\t\tthis.eqFilters[i].resetOutput();\n\t\t}\n\t\tthis.eqFilterCount = 0;\n\t\tthis.initialEqFilterInput1 = 0.0;\n\t\tthis.initialEqFilterInput2 = 0.0;\n\t\tthis.distortionFractionalInput1 = 0.0;\n\t\tthis.distortionFractionalInput2 = 0.0;\n\t\tthis.distortionFractionalInput3 = 0.0;\n\t\tthis.distortionPrevInput = 0.0;\n\t\tthis.distortionNextOutput = 0.0;\n\t\tthis.panningDelayPos = 0;\n\t\tif (this.panningDelayLine != null) for (let i: number = 0; i < this.panningDelayLine.length; i++) this.panningDelayLine[i] = 0.0;\n\t\tthis.echoDelayOffsetEnd = null;\n\t\tthis.echoShelfSampleL = 0.0;\n\t\tthis.echoShelfSampleR = 0.0;\n\t\tthis.echoShelfPrevInputL = 0.0;\n\t\tthis.echoShelfPrevInputR = 0.0;\n\t\tthis.reverbShelfSample0 = 0.0;\n\t\tthis.reverbShelfSample1 = 0.0;\n\t\tthis.reverbShelfSample2 = 0.0;\n\t\tthis.reverbShelfSample3 = 0.0;\n\t\tthis.reverbShelfPrevInput0 = 0.0;\n\t\tthis.reverbShelfPrevInput1 = 0.0;\n\t\tthis.reverbShelfPrevInput2 = 0.0;\n\t\tthis.reverbShelfPrevInput3 = 0.0;\n\t\t\n\t\tthis.awake = false;\n\t\tthis.flushingDelayLines = false;\n\t\tthis.deactivateAfterThisTick = false;\n\t\tthis.attentuationProgress = 0.0;\n\t\tthis.flushedSamples = 0;\n\t}\n\t\n\tpublic resetAllEffects(): void {\n\t\tthis.deactivate();\n\t\t\n\t\tif (this.chorusDelayLineDirty) {\n\t\t\tfor (let i: number = 0; i < this.chorusDelayLineL!.length; i++) this.chorusDelayLineL![i] = 0.0;\n\t\t\tfor (let i: number = 0; i < this.chorusDelayLineR!.length; i++) this.chorusDelayLineR![i] = 0.0;\n\t\t}\n\t\tif (this.echoDelayLineDirty) {\n\t\t\tfor (let i: number = 0; i < this.echoDelayLineL!.length; i++) this.echoDelayLineL![i] = 0.0;\n\t\t\tfor (let i: number = 0; i < this.echoDelayLineR!.length; i++) this.echoDelayLineR![i] = 0.0;\n\t\t}\n\t\tif (this.reverbDelayLineDirty) {\n\t\t\tfor (let i: number = 0; i < this.reverbDelayLine!.length; i++) this.reverbDelayLine![i] = 0.0;\n\t\t}\n\t\t\n\t\tthis.chorusPhase = 0.0;\n\t}\n\t\n\tpublic compute(synth: Synth, instrument: Instrument, samplesPerTick: number, roundedSamplesPerTick: number, tone: Tone | null): void {\n\t\tthis.computed = true;\n\t\t\n\t\tthis.type = instrument.type;\n\t\tthis.synthesizer = Synth.getInstrumentSynthFunction(instrument);\n\t\tthis.unison = Config.unisons[instrument.unison];\n\t\tthis.chord = instrument.getChord();\n\t\tthis.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\n\t\t\n\t\t// Force effects to be disabled if the corresponding slider is at zero (and automation isn't involved).\n\t\tlet effects: number = instrument.effects;\n\t\tif (instrument.distortion  == 0)        effects &= ~(1 << EffectType.distortion);\n\t\tif (instrument.pan == Config.panCenter) effects &= ~(1 << EffectType.panning);\n\t\tif (instrument.chorus      == 0)        effects &= ~(1 << EffectType.chorus);\n\t\tif (instrument.echoSustain == 0)        effects &= ~(1 << EffectType.echo);\n\t\tif (instrument.reverb      == 0)        effects &= ~(1 << EffectType.reverb);\n\t\tthis.effects = effects;\n\t\t\n\t\tthis.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\n\t\t\n\t\tconst samplesPerSecond: number = synth.samplesPerSecond;\n\t\t\n\t\tthis.updateWaves(instrument, samplesPerSecond);\n\t\t\n\t\t//const ticksIntoBar: number = synth.getTicksIntoBar();\n\t\t//const tickTimeStart: number = ticksIntoBar;\n\t\t//const tickTimeEnd:   number = ticksIntoBar + 1.0;\n\t\t//const secondsPerTick: number = samplesPerTick / synth.samplesPerSecond;\n\t\t//const currentPart: number = synth.getCurrentPart();\n\t\t//this.envelopeComputer.computeEnvelopes(instrument, currentPart, tickTimeStart, secondsPerTick, tone);\n\t\t//const envelopeStarts: number[] = this.envelopeComputer.envelopeStarts;\n\t\t//const envelopeEnds: number[] = this.envelopeComputer.envelopeEnds;\n\t\t\n\t\tconst usesDistortion: boolean = effectsIncludeDistortion(effects);\n\t\tconst usesBitcrusher: boolean = effectsIncludeBitcrusher(effects);\n\t\tconst usesPanning:    boolean = effectsIncludePanning(effects);\n\t\tconst usesChorus:     boolean = effectsIncludeChorus(effects);\n\t\tconst usesEcho:       boolean = effectsIncludeEcho(effects);\n\t\tconst usesReverb:     boolean = effectsIncludeReverb(effects);\n\t\t\n\t\tif (usesDistortion) {\n\t\t\tconst distortionSliderStart: number = Math.min(1.0, /*envelopeStarts[InstrumentAutomationIndex.distortion] **/ instrument.distortion / (Config.distortionRange - 1));\n\t\t\tconst distortionSliderEnd:   number = Math.min(1.0, /*envelopeEnds[  InstrumentAutomationIndex.distortion] **/ instrument.distortion / (Config.distortionRange - 1));\n\t\t\tconst distortionStart: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\n\t\t\tconst distortionEnd:   number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd  ) - 1.0) / 19.0, 2.0);\n\t\t\tconst distortionDriveStart: number = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\n\t\t\tconst distortionDriveEnd:   number = (1.0 + 2.0 * distortionSliderEnd)   / Config.distortionBaseVolume;\n\t\t\tthis.distortion = distortionStart;\n\t\t\tthis.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\n\t\t\tthis.distortionDrive = distortionDriveStart;\n\t\t\tthis.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\n\t\t}\n\t\t\n\t\tif (usesBitcrusher) {\n\t\t\tconst freqSettingStart: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherFrequency])*/;\n\t\t\tconst freqSettingEnd:   number = instrument.bitcrusherFreq /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherFrequency])*/;\n\t\t\tconst quantizationSettingStart: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherQuantization])*/;\n\t\t\tconst quantizationSettingEnd:   number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherQuantization])*/;\n\t\t\t\n\t\t\tconst basePitch: number = Config.keys[synth.song!.key].basePitch; // TODO: What if there's a key change mid-song?\n\t\t\tconst freqStart: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingStart) * Config.bitcrusherOctaveStep);\n\t\t\tconst freqEnd:   number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingEnd)   * Config.bitcrusherOctaveStep);\n\t\t\tconst phaseDeltaStart: number = Math.min(1.0, freqStart / samplesPerSecond);\n\t\t\tconst phaseDeltaEnd:   number = Math.min(1.0, freqEnd   / samplesPerSecond);\n\t\t\tthis.bitcrusherPhaseDelta = phaseDeltaStart;\n\t\t\tthis.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\n\t\t\t\n\t\t\tconst scaleStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart) * 0.5));\n\t\t\tconst scaleEnd:   number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd)   * 0.5));\n\t\t\tthis.bitcrusherScale = scaleStart;\n\t\t\tthis.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\n\t\t\t\n\t\t\tconst foldLevelStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart);\n\t\t\tconst foldLevelEnd:   number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd);\n\t\t\tthis.bitcrusherFoldLevel = foldLevelStart;\n\t\t\tthis.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\n\t\t}\n\t\t\n\t\tlet eqFilterVolume: number = 1.0; //this.envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n\t\tconst eqFilterSettings: FilterSettings = instrument.eqFilter;\n\t\t//const eqAllFreqsEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterAllFreqs];\n\t\t//const eqAllFreqsEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterAllFreqs];\n\t\tfor (let i: number = 0; i < eqFilterSettings.controlPointCount; i++) {\n\t\t\t//const eqFreqEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterFreq0 + i];\n\t\t\t//const eqFreqEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterFreq0 + i];\n\t\t\t//const eqPeakEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterGain0 + i];\n\t\t\t//const eqPeakEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterGain0 + i];\n\t\t\tconst point: FilterControlPoint = eqFilterSettings.controlPoints[i];\n\t\t\tpoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeStart * eqFreqEnvelopeStart*/ 1.0, /*eqPeakEnvelopeStart*/ 1.0);\n\t\t\tpoint.toCoefficients(Synth.tempFilterEndCoefficients,   samplesPerSecond, /*eqAllFreqsEnvelopeEnd   * eqFreqEnvelopeEnd*/   1.0, /*eqPeakEnvelopeEnd*/   1.0);\n\t\t\tif (this.eqFilters.length <= i) this.eqFilters[i] = new DynamicBiquadFilter();\n\t\t\tthis.eqFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, point.type == FilterType.lowPass);\n\t\t\teqFilterVolume *= point.getVolumeCompensationMult();\n\t\t}\n\t\tthis.eqFilterCount = eqFilterSettings.controlPointCount;\n\t\teqFilterVolume = Math.min(3.0, eqFilterVolume);\n\t\t\n\t\tconst mainInstrumentVolume: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\n\t\tthis.mixVolume = mainInstrumentVolume /** envelopeStarts[InstrumentAutomationIndex.mixVolume]*/;\n\t\tconst mixVolumeEnd  = mainInstrumentVolume /** envelopeEnds[  InstrumentAutomationIndex.mixVolume]*/;\n\t\tthis.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\n\t\t\n\t\tlet eqFilterVolumeStart: number = eqFilterVolume;\n\t\tlet eqFilterVolumeEnd: number = eqFilterVolume;\n\t\tlet delayInputMultStart: number = 1.0;\n\t\tlet delayInputMultEnd: number = 1.0;\n\t\t\n\t\tif (usesPanning) {\n\t\t\t//const panEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.panning] * 2.0 - 1.0;\n\t\t\t//const panEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.panning] * 2.0 - 1.0;\n\t\t\tconst pan: number = (instrument.pan - Config.panCenter) / Config.panCenter;\n\t\t\tconst panStart: number = Math.max(-1.0, Math.min(1.0, pan /** panEnvelopeStart*/));\n\t\t\tconst panEnd:   number = Math.max(-1.0, Math.min(1.0, pan /** panEnvelopeEnd  */));\n\t\t\tconst volumeStartL: number = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\n\t\t\tconst volumeStartR: number = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\n\t\t\tconst volumeEndL:   number = Math.cos((1 + panEnd)   * Math.PI * 0.25) * 1.414;\n\t\t\tconst volumeEndR:   number = Math.cos((1 - panEnd)   * Math.PI * 0.25) * 1.414;\n\t\t\tconst maxDelaySamples: number = samplesPerSecond * Config.panDelaySecondsMax;\n\t\t\tconst delayStart: number = panStart * maxDelaySamples;\n\t\t\tconst delayEnd:   number = panEnd   * maxDelaySamples;\n\t\t\tconst delayStartL: number = Math.max(0.0,  delayStart);\n\t\t\tconst delayStartR: number = Math.max(0.0, -delayStart);\n\t\t\tconst delayEndL:   number = Math.max(0.0,  delayEnd);\n\t\t\tconst delayEndR:   number = Math.max(0.0, -delayEnd);\n\t\t\t\n\t\t\tthis.panningVolumeL = volumeStartL;\n\t\t\tthis.panningVolumeR = volumeStartR;\n\t\t\tthis.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\n\t\t\tthis.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\n\t\t\tthis.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\n\t\t\tthis.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\n\t\t\tthis.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\n\t\t\tthis.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\n\t\t}\n\t\t\n\t\tif (usesChorus) {\n\t\t\t//const chorusEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.chorus];\n\t\t\t//const chorusEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.chorus];\n\t\t\tlet chorusStart: number = Math.min(1.0, /*chorusEnvelopeStart **/ instrument.chorus / (Config.chorusRange - 1));\n\t\t\tlet chorusEnd:   number = Math.min(1.0, /*chorusEnvelopeEnd   **/ instrument.chorus / (Config.chorusRange - 1));\n\t\t\tchorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\n\t\t\tchorusEnd   = chorusEnd   * 0.6 + (Math.pow(chorusEnd,   6.0)) * 0.4;\n\t\t\tconst chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\n\t\t\tconst chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\n\t\t\tthis.chorusVoiceMult = chorusStart;\n\t\t\tthis.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\n\t\t\tthis.chorusCombinedMult = chorusCombinedMultStart;\n\t\t\tthis.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\n\t\t}\n\t\t\n\t\tlet maxEchoMult = 0.0;\n\t\tlet averageEchoDelaySeconds: number = 0.0;\n\t\tif (usesEcho) {\n\t\t\t//const echoSustainEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.echoSustain];\n\t\t\t//const echoSustainEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.echoSustain];\n\t\t\tconst echoMultStart: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeStart **/ instrument.echoSustain / Config.echoSustainRange, 1.1)) * 0.9;\n\t\t\tconst echoMultEnd:   number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeEnd   **/ instrument.echoSustain / Config.echoSustainRange, 1.1)) * 0.9;\n\t\t\tthis.echoMult = echoMultStart;\n\t\t\tthis.echoMultDelta = (echoMultEnd - echoMultStart) / roundedSamplesPerTick;\n\t\t\tmaxEchoMult = Math.max(echoMultStart, echoMultEnd);\n\t\t\t\n\t\t\t// TODO: After computing a tick's settings once for multiple run lengths (which is\n\t\t\t// good for audio worklet threads), compute the echo delay envelopes at tick (or\n\t\t\t// part) boundaries to interpolate between two delay taps.\n\t\t\t//const echoDelayEnvelopeStart:   number = envelopeStarts[InstrumentAutomationIndex.echoDelay];\n\t\t\t//const echoDelayEnvelopeEnd:     number = envelopeEnds[  InstrumentAutomationIndex.echoDelay];\n\t\t\tconst echoDelayOffset: number = Math.round((instrument.echoDelay + 1) * Config.echoDelayStepTicks * samplesPerTick);\n\t\t\tif (this.echoDelayOffsetEnd != null) {\n\t\t\t\tthis.echoDelayOffsetStart = this.echoDelayOffsetEnd;\n\t\t\t} else {\n\t\t\t\tthis.echoDelayOffsetStart = echoDelayOffset;\n\t\t\t}\n\t\t\tthis.echoDelayOffsetEnd = echoDelayOffset;\n\t\t\taverageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\n\t\t\t\n\t\t\tthis.echoDelayOffsetRatio = 0.0;\n\t\t\tthis.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\n\t\t\t\n\t\t\tconst shelfRadians: number = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\n\t\t\tSynth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\n\t\t\tthis.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n\t\t\tthis.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n\t\t\tthis.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n\t\t}\n\t\t\n\t\tlet maxReverbMult = 0.0;\n\t\tif (usesReverb) {\n\t\t\t//const reverbEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.reverb];\n\t\t\t//const reverbEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.reverb];\n\t\t\tconst reverbStart: number = Math.min(1.0, Math.pow(/*reverbEnvelopeStart **/ instrument.reverb / Config.reverbRange, 0.667)) * 0.425;\n\t\t\tconst reverbEnd:   number = Math.min(1.0, Math.pow(/*reverbEnvelopeEnd   **/ instrument.reverb / Config.reverbRange, 0.667)) * 0.425;\n\t\t\tthis.reverbMult = reverbStart;\n\t\t\tthis.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\n\t\t\tmaxReverbMult = Math.max(reverbStart, reverbEnd);\n\t\t\t\n\t\t\tconst shelfRadians: number = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\n\t\t\tSynth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\n\t\t\tthis.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n\t\t\tthis.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n\t\t\tthis.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n\t\t}\n\t\t\n\t\tif (this.tonesAddedInThisTick) {\n\t\t\tthis.attentuationProgress = 0.0;\n\t\t\tthis.flushedSamples = 0;\n\t\t\tthis.flushingDelayLines = false;\n\t\t} else if (!this.flushingDelayLines) {\n\t\t\t// If this instrument isn't playing tones anymore, the volume can fade out by the\n\t\t\t// end of the first tick. It's possible for filters and the panning delay line to\n\t\t\t// continue past the end of the tone but they should have mostly dissipated by the\n\t\t\t// end of the tick anyway.\n\t\t\tif (this.attentuationProgress == 0.0) {\n\t\t\t\teqFilterVolumeEnd = 0.0;\n\t\t\t} else {\n\t\t\t\teqFilterVolumeStart = 0.0;\n\t\t\t\teqFilterVolumeEnd = 0.0;\n\t\t\t}\n\t\t\t\n\t\t\tconst attenuationThreshold: number = 1.0 / 256.0; // when the delay line signal has attenuated this much, it should be inaudible and should be flushed to zero.\n\t\t\tconst halfLifeMult: number = -Math.log2(attenuationThreshold);\n\t\t\tlet delayDuration: number = 0.0;\n\t\t\t\n\t\t\tif (usesChorus) {\n\t\t\t\tdelayDuration += Config.chorusMaxDelay;\n\t\t\t}\n\t\t\t\n\t\t\tif (usesEcho) {\n\t\t\t\tconst attenuationPerSecond: number = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\n\t\t\t\tconst halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\n\t\t\t\tconst echoDuration: number = halfLife * halfLifeMult;\n\t\t\t\tdelayDuration += echoDuration;\n\t\t\t}\n\t\t\t\n\t\t\tif (usesReverb) {\n\t\t\t\tconst averageMult: number = maxReverbMult * 2.0;\n\t\t\t\tconst averageReverbDelaySeconds: number = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\n\t\t\t\tconst attenuationPerSecond: number = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\n\t\t\t\tconst halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\n\t\t\t\tconst reverbDuration: number = halfLife * halfLifeMult;\n\t\t\t\tdelayDuration += reverbDuration;\n\t\t\t}\n\t\t\t\n\t\t\tconst secondsInTick: number = samplesPerTick / samplesPerSecond;\n\t\t\tconst progressInTick: number = secondsInTick / delayDuration;\n\t\t\tconst progressAtEndOfTick: number = this.attentuationProgress + progressInTick;\n\t\t\tif (progressAtEndOfTick >= 1.0) {\n\t\t\t\tdelayInputMultEnd = 0.0;\n\t\t\t}\n\t\t\tthis.attentuationProgress = progressAtEndOfTick;\n\t\t\tif (this.attentuationProgress >= 1.0) {\n\t\t\t\tthis.flushingDelayLines = true;\n\t\t\t}\n\t\t} else {\n\t\t\t// Flushing delay lines to zero since the signal has mostly dissipated.\n\t\t\teqFilterVolumeStart = 0.0;\n\t\t\teqFilterVolumeEnd = 0.0;\n\t\t\tdelayInputMultStart = 0.0;\n\t\t\tdelayInputMultEnd = 0.0;\n\t\t\t\n\t\t\tlet totalDelaySamples: number = 0;\n\t\t\tif (usesChorus) totalDelaySamples += synth.chorusDelayBufferSize;\n\t\t\tif (usesEcho) totalDelaySamples += this.echoDelayLineL!.length;\n\t\t\tif (usesReverb) totalDelaySamples += Config.reverbDelayBufferSize;\n\t\t\t\n\t\t\tthis.flushedSamples += roundedSamplesPerTick;\n\t\t\tif (this.flushedSamples >= totalDelaySamples) {\n\t\t\t\tthis.deactivateAfterThisTick = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.eqFilterVolume = eqFilterVolumeStart;\n\t\tthis.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\n\t\tthis.delayInputMult = delayInputMultStart;\n\t\tthis.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\n\t}\n\t\n\tpublic updateWaves(instrument: Instrument, samplesPerSecond: number): void {\n\t\tif (instrument.type == InstrumentType.chip) {\n\t\t\tthis.wave = Config.chipWaves[instrument.chipWave].samples;\n\t\t} else if (instrument.type == InstrumentType.noise) {\n\t\t\tthis.wave = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\n\t\t} else if (instrument.type == InstrumentType.harmonics) {\n\t\t\tthis.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n\t\t} else if (instrument.type == InstrumentType.pickedString) {\n\t\t\tthis.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n\t\t} else if (instrument.type == InstrumentType.spectrum) {\n\t\t\tthis.wave = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\n\t\t} else if (instrument.type == InstrumentType.drumset) {\n\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\n\t\t\t\tthis.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\n\t\t\t}\n\t\t\tthis.wave = null;\n\t\t} else {\n\t\t\tthis.wave = null;\n\t\t}\n\t}\n\t\n\tpublic getDrumsetWave(pitch: number): Float32Array {\n\t\tif (this.type == InstrumentType.drumset) {\n\t\t\treturn this.drumsetSpectrumWaves[pitch].wave!;\n\t\t} else {\n\t\t\tthrow new Error(\"Unhandled instrument type in getDrumsetWave\");\n\t\t}\n\t}\n\t\n\tpublic static drumsetIndexReferenceDelta(index: number): number {\n\t\treturn Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\n\t}\n\t\n\tprivate static _drumsetIndexToSpectrumOctave(index: number): number {\n\t\treturn 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\n\t}\n}\n\nclass ChannelState {\n\tpublic readonly instruments: InstrumentState[] = [];\n\tpublic muted: boolean = false;\n\tpublic singleSeamlessInstrument: number | null = null; // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\n}\n\nexport class Synth {\n\n\tprivate syncSongState(): void {\n\t\tconst channelCount: number = this.song!.getChannelCount();\n\t\tfor (let i: number = this.channels.length; i < channelCount; i++) {\n\t\t\tthis.channels[i] = new ChannelState();\n\t\t}\n\t\tthis.channels.length = channelCount;\n\t\tfor (let i: number = 0; i < channelCount; i++) {\n\t\t\tconst channel: Channel = this.song!.channels[i];\n\t\t\tconst channelState: ChannelState = this.channels[i];\n\t\t\tfor (let j: number = channelState.instruments.length; j < channel.instruments.length; j++) {\n\t\t\t\tchannelState.instruments[j] = new InstrumentState();\n\t\t\t}\n\t\t\tchannelState.instruments.length = channel.instruments.length;\n\t\t\t\n\t\t\tif (channelState.muted != channel.muted) {\n\t\t\t\tchannelState.muted = channel.muted;\n\t\t\t\tif (channelState.muted) {\n\t\t\t\t\tfor (const instrumentState of channelState.instruments) {\n\t\t\t\t\t\tinstrumentState.resetAllEffects();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate warmUpSynthesizer(song: Song | null): void {\n\t\tif (song != null) {\n\t\t\tthis.syncSongState();\n\t\t\tconst samplesPerTick: number = this.getSamplesPerTick();\n\t\t\tfor (let j: number = 0; j < song.getChannelCount(); j++) {\n\t\t\t\tfor (let i: number = 0; i < song.channels[j].instruments.length; i++) {\n\t\t\t\t\tconst instrument: Instrument = song.channels[j].instruments[i];\n\t\t\t\t\tconst instrumentState: InstrumentState = this.channels[j].instruments[i];\n\t\t\t\t\tSynth.getInstrumentSynthFunction(instrument);\n\t\t\t\t\tinstrumentState.updateWaves(instrument, this.samplesPerSecond);\n\t\t\t\t\tinstrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t// JummBox needed to run synth functions for at least one sample (for JIT purposes)\n\t\t// before starting audio callbacks to avoid skipping the initial output.\n\t\tvar dummyArray = new Float32Array(1);\n\t\tthis.synthesize(dummyArray, dummyArray, 1, true);\n\t\t*/\n\t}\n\t\n\tprivate static operatorAmplitudeCurve(amplitude: number): number {\n\t\treturn (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\n\t}\n\t\n\tpublic samplesPerSecond: number = 44100;\n\tpublic panningDelayBufferSize: number;\n\tpublic panningDelayBufferMask: number;\n\tpublic chorusDelayBufferSize: number;\n\tpublic chorusDelayBufferMask: number;\n\t// TODO: reverb\n\t\n\tpublic song: Song | null = null;\n\tpublic preferLowerLatency: boolean = false; // enable when recording performances from keyboard or MIDI. Takes effect next time you activate audio.\n\tpublic anticipatePoorPerformance: boolean = false; // enable on mobile devices to reduce audio stutter glitches. Takes effect next time you activate audio.\n\tpublic liveInputDuration: number = 0;\n\tpublic liveInputStarted: boolean = false;\n\tpublic liveInputPitches: number[] = [];\n\tpublic liveInputChannel: number = 0;\n\tpublic liveInputInstruments: number[] = [];\n\tpublic loopRepeatCount: number = -1;\n\tpublic volume: number = 1.0;\n\tpublic enableMetronome: boolean = false;\n\tpublic countInMetronome: boolean = false;\n\t\n\tprivate playheadInternal: number = 0.0;\n\tprivate bar: number = 0;\n\tprivate prevBar: number | null = null;\n\tprivate nextBar: number | null = null;\n\tprivate beat: number = 0;\n\tprivate part: number = 0;\n\tprivate tick: number = 0;\n\tpublic isAtStartOfTick: boolean = true;\n\tpublic tickSampleCountdown: number = 0;\n\tprivate isPlayingSong: boolean = false;\n\tprivate isRecording: boolean = false;\n\tprivate liveInputEndTime: number = 0.0;\n\tprivate browserAutomaticallyClearsAudioBuffer: boolean = true; // Assume true until proven otherwise. Older Chrome does not clear the buffer so it needs to be cleared manually.\n\t\n\tpublic static readonly tempFilterStartCoefficients: FilterCoefficients = new FilterCoefficients();\n\tpublic static readonly tempFilterEndCoefficients: FilterCoefficients = new FilterCoefficients();\n\tprivate tempDrumSetControlPoint: FilterControlPoint = new FilterControlPoint();\n\tpublic tempFrequencyResponse: FrequencyResponse = new FrequencyResponse();\n\t\n\tprivate static readonly fmSynthFunctionCache: Dictionary<Function> = {};\n\tprivate static readonly effectsFunctionCache: Function[] = Array(1 << 7).fill(undefined); // keep in sync with the number of post-process effects.\n\tprivate static readonly pickedStringFunctionCache: Function[] = Array(3).fill(undefined); // keep in sync with the number of unison voices.\n\t\n\tprivate readonly channels: ChannelState[] = [];\n\tprivate readonly tonePool: Deque<Tone> = new Deque<Tone>();\n\tprivate readonly tempMatchedPitchTones: Array<Tone | null> = Array(Config.maxChordSize).fill(null);\n\t\n\tprivate startedMetronome: boolean = false;\n\tprivate metronomeSamplesRemaining: number = -1;\n\tprivate metronomeAmplitude: number = 0.0;\n\tprivate metronomePrevAmplitude: number = 0.0;\n\tprivate metronomeFilter: number = 0.0;\n\tprivate limit: number = 0.0;\n\t\n\tprivate tempMonoInstrumentSampleBuffer: Float32Array | null = null;\n\t\n\tprivate audioCtx: any | null = null;\n\tprivate scriptNode: any | null = null;\n\t\n\tpublic get playing(): boolean {\n\t\treturn this.isPlayingSong;\n\t}\n\t\n\tpublic get recording(): boolean {\n\t\treturn this.isRecording;\n\t}\n\t\n\tpublic get playhead(): number {\n\t\treturn this.playheadInternal;\n\t}\n\t\n\tpublic set playhead(value: number) {\n\t\tif (this.song != null) {\n\t\t\tthis.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\n\t\t\tlet remainder: number = this.playheadInternal;\n\t\t\tthis.bar = Math.floor(remainder);\n\t\t\tremainder = this.song.beatsPerBar * (remainder - this.bar);\n\t\t\tthis.beat = Math.floor(remainder);\n\t\t\tremainder = Config.partsPerBeat * (remainder - this.beat);\n\t\t\tthis.part = Math.floor(remainder);\n\t\t\tremainder = Config.ticksPerPart * (remainder - this.part);\n\t\t\tthis.tick = Math.floor(remainder);\n\t\t\tthis.tickSampleCountdown = 0;\n\t\t\tthis.isAtStartOfTick = true;\n\t\t\tthis.prevBar = null;\n\t\t}\n\t}\n\t\n\tpublic getSamplesPerBar(): number {\n\t\tif (this.song == null) throw new Error();\n\t\treturn this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\n\t}\n\t\n\tpublic getTicksIntoBar(): number {\n\t\treturn (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n\t}\n\tpublic getCurrentPart(): number {\n\t\treturn (this.beat * Config.partsPerBeat + this.part);\n\t}\n\t\n\tpublic getTotalBars(enableIntro: boolean, enableOutro: boolean): number {\n\t\tif (this.song == null) throw new Error();\n\t\tlet bars: number = this.song.loopLength * (this.loopRepeatCount + 1);\n\t\tif (enableIntro) bars += this.song.loopStart;\n\t\tif (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\n\t\treturn bars;\n\t}\n\t\n\tconstructor(song: Song | string | null = null) {\n\t\tthis.computeDelayBufferSizes();\n\t\tif (song != null) this.setSong(song);\n\t}\n\t\n\tpublic setSong(song: Song | string): void {\n\t\tif (typeof(song) == \"string\") {\n\t\t\tthis.song = new Song(song);\n\t\t} else if (song instanceof Song) {\n\t\t\tthis.song = song;\n\t\t}\n\t\tthis.prevBar = null;\n\t}\n\t\n\tprivate computeDelayBufferSizes(): void {\n\t\tthis.panningDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\n\t\tthis.panningDelayBufferMask = this.panningDelayBufferSize - 1;\n\t\tthis.chorusDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\n\t\tthis.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\n\t}\n\t\n\tprivate activateAudio(): void {\n\t\tconst bufferSize: number = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\n\t\tif (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\n\t\t\tif (this.scriptNode != null) this.deactivateAudio();\n\t\t\tconst latencyHint: string = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\n\t\t\tthis.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({latencyHint: latencyHint});\n\t\t\tthis.samplesPerSecond = this.audioCtx.sampleRate;\n\t\t\tthis.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2); // bufferSize samples per callback buffer, 0 input channels, 2 output channels (left/right)\n\t\t\tthis.scriptNode.onaudioprocess = this.audioProcessCallback;\n\t\t\tthis.scriptNode.channelCountMode = 'explicit';\n\t\t\tthis.scriptNode.channelInterpretation = 'speakers';\n\t\t\tthis.scriptNode.connect(this.audioCtx.destination);\n\t\t\t\n\t\t\tthis.computeDelayBufferSizes();\n\t\t}\n\t\tthis.audioCtx.resume();\n\t}\n\t\n\tprivate deactivateAudio(): void {\n\t\tif (this.audioCtx != null && this.scriptNode != null) {\n\t\t\tthis.scriptNode.disconnect(this.audioCtx.destination);\n\t\t\tthis.scriptNode = null;\n\t\t\tif (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\n\t\t\tthis.audioCtx = null;\n\t\t}\n\t}\n\t\n\tpublic maintainLiveInput(): void {\n\t\tthis.activateAudio();\n\t\tthis.liveInputEndTime = performance.now() + 10000.0;\n\t}\n\t\n\tpublic play(): void {\n\t\tif (this.isPlayingSong) return;\n\t\tthis.isPlayingSong = true;\n\t\tthis.warmUpSynthesizer(this.song);\n\t\tthis.activateAudio();\n\t}\n\t\n\tpublic pause(): void {\n\t\tif (!this.isPlayingSong) return;\n\t\tthis.isPlayingSong = false;\n\t\tthis.isRecording = false;\n\t}\n\t\n\tpublic startRecording(): void {\n\t\tthis.preferLowerLatency = true;\n\t\tthis.isRecording = true;\n\t\tthis.play();\n\t}\n\t\n\tpublic snapToStart(): void {\n\t\tthis.bar = 0;\n\t\tthis.snapToBar();\n\t}\n\t\n\tpublic goToBar(bar: number): void {\n\t\tthis.bar = bar;\n\t\tthis.playheadInternal = this.bar;\n\t\tthis.prevBar = null;\n\t}\n\t\n\tpublic snapToBar(): void {\n\t\tthis.playheadInternal = this.bar;\n\t\tthis.beat = 0;\n\t\tthis.part = 0;\n\t\tthis.tick = 0;\n\t\tthis.tickSampleCountdown = 0;\n\t\tthis.isAtStartOfTick = true;\n\t\tthis.prevBar = null;\n\t}\n\t\n\tpublic resetEffects(): void {\n\t\tthis.limit = 0.0;\n\t\tthis.freeAllTones();\n\t\tif (this.song != null) {\n\t\t\tfor (const channelState of this.channels) {\n\t\t\t\tfor (const instrumentState of channelState.instruments) {\n\t\t\t\t\tinstrumentState.resetAllEffects();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic jumpIntoLoop(): void {\n\t\tif (!this.song) return;\n\t\tif (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\n\t\t\tconst oldBar: number = this.bar;\n\t\t\tthis.bar = this.song.loopStart;\n\t\t\tthis.playheadInternal += this.bar - oldBar;\n\t\t\tthis.prevBar = null;\n\t\t}\n\t}\n\t\n\tpublic goToNextBar(): void {\n\t\tif (!this.song) return;\n\t\tthis.prevBar = this.bar;\n\t\tconst oldBar: number = this.bar;\n\t\tthis.bar++;\n\t\tif (this.bar >= this.song.barCount) {\n\t\t\tthis.bar = 0;\n\t\t}\n\t\tthis.playheadInternal += this.bar - oldBar;\n\t}\n\t\n\tpublic goToPrevBar(): void {\n\t\tif (!this.song) return;\n\t\tthis.prevBar = null;\n\t\tconst oldBar: number = this.bar;\n\t\tthis.bar--;\n\t\tif (this.bar < 0 || this.bar >= this.song.barCount) {\n\t\t\tthis.bar = this.song.barCount - 1;\n\t\t}\n\t\tthis.playheadInternal += this.bar - oldBar;\n\t}\n\t\n\tprivate getNextBar(): number {\n\t\tlet nextBar: number = this.bar + 1;\n\t\tif (this.isRecording) {\n\t\t\tif (nextBar >= this.song!.barCount) {\n\t\t\t\tnextBar = this.song!.barCount - 1;\n\t\t\t}\n\t\t} else if (this.loopRepeatCount != 0 && nextBar == this.song!.loopStart + this.song!.loopLength) {\n\t\t\tnextBar = this.song!.loopStart;\n\t\t}\n\t\treturn nextBar;\n\t}\n\t\n\tprivate audioProcessCallback = (audioProcessingEvent: any): void => {\n\t\tconst outputBuffer = audioProcessingEvent.outputBuffer;\n\t\tconst outputDataL: Float32Array = outputBuffer.getChannelData(0);\n\t\tconst outputDataR: Float32Array = outputBuffer.getChannelData(1);\n\t\t\n\t\tif (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length-1] != 0.0 || outputDataR[outputBuffer.length-1] != 0.0)) {\n\t\t\t// If the buffer is ever initially nonzero, then this must be an older browser that doesn't automatically clear the audio buffer.\n\t\t\tthis.browserAutomaticallyClearsAudioBuffer = false;\n\t\t}\n\t\tif (!this.browserAutomaticallyClearsAudioBuffer) {\n\t\t\t// If this browser does not clear the buffer automatically, do so manually before continuing.\n\t\t\tconst length: number = outputBuffer.length;\n\t\t\tfor (let i: number = 0; i < length; i++) {\n\t\t\t\toutputDataL[i] = 0.0;\n\t\t\t\toutputDataR[i] = 0.0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\n\t\t\tthis.deactivateAudio();\n\t\t} else {\n\t\t\tthis.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\n\t\t}\n\t}\n\t\n\tpublic synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\n\t\tif (this.song == null) {\n\t\t\tfor (let i: number = 0; i < outputBufferLength; i++) {\n\t\t\t\toutputDataL[i] = 0.0;\n\t\t\t\toutputDataR[i] = 0.0;\n\t\t\t}\n\t\t\tthis.deactivateAudio();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst song: Song = this.song;\n\t\tconst samplesPerTick: number = this.getSamplesPerTick();\n\t\tlet ended: boolean = false;\n\t\t\n\t\t// Check the bounds of the playhead:\n\t\tif (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\n\t\t\tthis.tickSampleCountdown = samplesPerTick;\n\t\t\tthis.isAtStartOfTick = true;\n\t\t}\n\t\tif (playSong) {\n\t\t\tif (this.beat >= song.beatsPerBar) {\n\t\t\t\tthis.beat = 0;\n\t\t\t\tthis.part = 0;\n\t\t\t\tthis.tick = 0;\n\t\t\t\tthis.tickSampleCountdown = samplesPerTick;\n\t\t\t\tthis.isAtStartOfTick = true;\n\t\t\t\t\n\t\t\t\tthis.prevBar = this.bar;\n\t\t\t\tthis.bar = this.getNextBar();\n\t\t\t\tif (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\n\t\t\t}\n\t\t\tif (this.bar >= song.barCount) {\n\t\t\t\tthis.bar = 0;\n\t\t\t\tif (this.loopRepeatCount != -1) {\n\t\t\t\t\tended = true;\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t//const synthStartTime: number = performance.now();\n\t\t\n\t\tthis.syncSongState();\n\t\t\n\t\tif (this.tempMonoInstrumentSampleBuffer == null || this.tempMonoInstrumentSampleBuffer.length < outputBufferLength) {\n\t\t\tthis.tempMonoInstrumentSampleBuffer = new Float32Array(outputBufferLength);\n\t\t}\n\t\t\n\t\t// Post processing parameters:\n\t\tconst volume: number = +this.volume;\n\t\tconst limitDecay: number = 1.0 - Math.pow(0.5, 4.0 / this.samplesPerSecond);\n\t\tconst limitRise: number = 1.0 - Math.pow(0.5, 4000.0 / this.samplesPerSecond);\n\t\tlet limit: number = +this.limit;\n\t\t\n\t\tlet bufferIndex: number = 0;\n\t\twhile (bufferIndex < outputBufferLength && !ended) {\n\t\t\t\n\t\t\tthis.nextBar = this.getNextBar();\n\t\t\tif (this.nextBar >= song.barCount) this.nextBar = null;\n\t\t\t\n\t\t\tconst samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\n\t\t\tconst samplesLeftInTick: number = Math.ceil(this.tickSampleCountdown);\n\t\t\tconst runLength: number = Math.min(samplesLeftInTick, samplesLeftInBuffer);\n\t\t\tconst runEnd: number = bufferIndex + runLength;\n\t\t\tfor (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n\t\t\t\tconst channel: Channel = song.channels[channelIndex];\n\t\t\t\tconst channelState: ChannelState = this.channels[channelIndex];\n\t\t\t\t\n\t\t\t\tif (this.isAtStartOfTick) {\n\t\t\t\t\tthis.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\n\t\t\t\t\tthis.determineLiveInputTones(song, channelIndex, samplesPerTick);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n\t\t\t\t\tconst instrument: Instrument = channel.instruments[instrumentIndex];\n\t\t\t\t\tconst instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n\t\t\t\t\t\n\t\t\t\t\tif (this.isAtStartOfTick) {\n\t\t\t\t\t\tlet tonesPlayedInThisInstrument: number = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\n\t\t\t\t\t\tfor (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n\t\t\t\t\t\t\tconst tone: Tone = instrumentState.releasedTones.get(i);\n\t\t\t\t\t\t\tif (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\n\t\t\t\t\t\t\t\tthis.freeReleasedTone(instrumentState, i);\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst shouldFadeOutFast: boolean = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\n\t\t\t\t\t\t\tthis.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\n\t\t\t\t\t\t\ttonesPlayedInThisInstrument++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (instrumentState.awake) {\n\t\t\t\t\t\t\tif (!instrumentState.computed) {\n\t\t\t\t\t\t\t\tinstrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinstrumentState.computed = false;\n\t\t\t\t\t\t\t//instrumentState.envelopeComputer.clearEnvelopes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (let i: number = 0; i < instrumentState.activeTones.count(); i++) {\n\t\t\t\t\t\tconst tone: Tone = instrumentState.activeTones.get(i);\n\t\t\t\t\t\tthis.playTone(channelIndex, bufferIndex, runLength, tone);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (let i: number = 0; i < instrumentState.liveInputTones.count(); i++) {\n\t\t\t\t\t\tconst tone: Tone = instrumentState.liveInputTones.get(i);\n\t\t\t\t\t\tthis.playTone(channelIndex, bufferIndex, runLength, tone);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n\t\t\t\t\t\tconst tone: Tone = instrumentState.releasedTones.get(i);\n\t\t\t\t\t\tthis.playTone(channelIndex, bufferIndex, runLength, tone);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (instrumentState.awake) {\n\t\t\t\t\t\tSynth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (this.enableMetronome || this.countInMetronome) {\n\t\t\t\tif (this.part == 0) {\n\t\t\t\t\tif (!this.startedMetronome) {\n\t\t\t\t\t\tconst midBeat: boolean = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\n\t\t\t\t\t\tconst periods:   number = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\n\t\t\t\t\t\tconst hz:        number = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\n\t\t\t\t\t\tconst amplitude: number = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\n\t\t\t\t\t\tconst samplesPerPeriod: number = this.samplesPerSecond / hz;\n\t\t\t\t\t\tconst radiansPerSample: number = Math.PI * 2.0 / samplesPerPeriod;\n\t\t\t\t\t\tthis.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\n\t\t\t\t\t\tthis.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\n\t\t\t\t\t\tthis.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\n\t\t\t\t\t\tthis.metronomePrevAmplitude = 0.0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.startedMetronome = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.metronomeSamplesRemaining > 0) {\n\t\t\t\t\t\tconst stopIndex: number = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\n\t\t\t\t\t\tthis.metronomeSamplesRemaining -= stopIndex - bufferIndex;\n\t\t\t\t\t\tfor (let i: number = bufferIndex; i < stopIndex; i++) {\n\t\t\t\t\t\t\toutputDataL[i] += this.metronomeAmplitude;\n\t\t\t\t\t\t\toutputDataR[i] += this.metronomeAmplitude;\n\t\t\t\t\t\t\tconst tempAmplitude: number = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\n\t\t\t\t\t\t\tthis.metronomePrevAmplitude = this.metronomeAmplitude;\n\t\t\t\t\t\t\tthis.metronomeAmplitude = tempAmplitude;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.startedMetronome = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Post processing:\n\t\t\tfor (let i: number = bufferIndex; i < runEnd; i++) {\n\t\t\t\t// A compressor/limiter.\n\t\t\t\tconst sampleL = outputDataL[i];\n\t\t\t\tconst sampleR = outputDataR[i];\n\t\t\t\tconst abs: number = Math.max(Math.abs(sampleL), Math.abs(sampleR));\n\t\t\t\tlimit += (abs - limit) * (limit < abs ? limitRise : limitDecay * (1.0 + limit));\n\t\t\t\tconst limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\n\t\t\t\toutputDataL[i] = sampleL * limitedVolume;\n\t\t\t\toutputDataR[i] = sampleR * limitedVolume;\n\t\t\t}\n\t\t\t\n\t\t\tbufferIndex += runLength;\n\t\t\t\n\t\t\tthis.isAtStartOfTick = false;\n\t\t\tthis.tickSampleCountdown -= runLength;\n\t\t\tif (this.tickSampleCountdown <= 0) {\n\t\t\t\tthis.isAtStartOfTick = true;\n\t\t\t\t\n\t\t\t\t// Track how long tones have been released, and free ones that are marked as ending.\n\t\t\t\t// Also reset awake InstrumentStates that didn't have any Tones during this tick.\n\t\t\t\tfor (const channelState of this.channels) {\n\t\t\t\t\tfor (const instrumentState of channelState.instruments) {\n\t\t\t\t\t\tfor (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n\t\t\t\t\t\t\tconst tone: Tone = instrumentState.releasedTones.get(i);\n\t\t\t\t\t\t\tif (tone.isOnLastTick) {\n\t\t\t\t\t\t\t\tthis.freeReleasedTone(instrumentState, i);\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttone.ticksSinceReleased++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (instrumentState.deactivateAfterThisTick) {\n\t\t\t\t\t\t\tinstrumentState.deactivate();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinstrumentState.tonesAddedInThisTick = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.tick++;\n\t\t\t\tthis.tickSampleCountdown += samplesPerTick;\n\t\t\t\tif (this.tick == Config.ticksPerPart) {\n\t\t\t\t\tthis.tick = 0;\n\t\t\t\t\tthis.part++;\n\t\t\t\t\tthis.liveInputDuration--;\n\t\t\t\t\t\n\t\t\t\t\tif (this.part == Config.partsPerBeat) {\n\t\t\t\t\t\tthis.part = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (playSong) {\n\t\t\t\t\t\t\tthis.beat++;\n\t\t\t\t\t\t\tif (this.beat == song.beatsPerBar) {\n\t\t\t\t\t\t\t\t// bar changed, reset for next bar:\n\t\t\t\t\t\t\t\tthis.beat = 0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (this.countInMetronome) {\n\t\t\t\t\t\t\t\t\tthis.countInMetronome = false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.prevBar = this.bar;\n\t\t\t\t\t\t\t\t\tthis.bar = this.getNextBar();\n\t\t\t\t\t\t\t\t\tif (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (this.bar >= song.barCount) {\n\t\t\t\t\t\t\t\t\t\tthis.bar = 0;\n\t\t\t\t\t\t\t\t\t\tif (this.loopRepeatCount != -1) {\n\t\t\t\t\t\t\t\t\t\t\tended = true;\n\t\t\t\t\t\t\t\t\t\t\tthis.resetEffects();\n\t\t\t\t\t\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Avoid persistent denormal or NaN values.\n\t\tif (!Number.isFinite(limit) || Math.abs(limit) < epsilon) limit = 0.0;\n\t\tthis.limit = limit;\n\t\t\n\t\tif (playSong && !this.countInMetronome) {\n\t\t\tthis.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\n\t\t}\n\t\t\n\t\t/*\n\t\tconst synthDuration: number = performance.now() - synthStartTime;\n\t\t// Performance measurements:\n\t\tsamplesAccumulated += outputBufferLength;\n\t\tsamplePerformance += synthDuration;\n\t\t\n\t\tif (samplesAccumulated >= 44100 * 4) {\n\t\t\tconst secondsGenerated = samplesAccumulated / 44100;\n\t\t\tconst secondsRequired = samplePerformance / 1000;\n\t\t\tconst ratio = secondsRequired / secondsGenerated;\n\t\t\tconsole.log(ratio);\n\t\t\tsamplePerformance = 0;\n\t\t\tsamplesAccumulated = 0;\n\t\t}\n\t\t*/\n\t}\n\t\n\tprivate freeTone(tone: Tone): void {\n\t\tthis.tonePool.pushBack(tone);\n\t}\n\t\n\tprivate newTone(): Tone {\n\t\tif (this.tonePool.count() > 0) {\n\t\t\tconst tone: Tone = this.tonePool.popBack();\n\t\t\ttone.freshlyAllocated = true;\n\t\t\treturn tone;\n\t\t}\n\t\treturn new Tone();\n\t}\n\t\n\tprivate releaseTone(instrumentState: InstrumentState, tone: Tone): void {\n\t\tinstrumentState.releasedTones.pushFront(tone);\n\t\ttone.atNoteStart = false;\n\t\ttone.passedEndOfNote = true;\n\t}\n\t\n\tprivate freeReleasedTone(instrumentState: InstrumentState, toneIndex: number): void {\n\t\tthis.freeTone(instrumentState.releasedTones.get(toneIndex));\n\t\tinstrumentState.releasedTones.remove(toneIndex);\n\t}\n\t\n\tpublic freeAllTones(): void {\n\t\tfor (const channelState of this.channels) {\n\t\t\tfor (const instrumentState of channelState.instruments) {\n\t\t\t\twhile (instrumentState.activeTones.count()    > 0) this.freeTone(instrumentState.activeTones.popBack());\n\t\t\t\twhile (instrumentState.releasedTones.count()  > 0) this.freeTone(instrumentState.releasedTones.popBack());\n\t\t\t\twhile (instrumentState.liveInputTones.count() > 0) this.freeTone(instrumentState.liveInputTones.popBack());\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate determineLiveInputTones(song: Song, channelIndex: number, samplesPerTick: number): void {\n\t\tconst channel: Channel = song.channels[channelIndex];\n\t\tconst channelState: ChannelState = this.channels[channelIndex];\n\t\tconst pitches: number[] = this.liveInputPitches;\n\t\t\n\t\tfor (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n\t\t\tconst instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n\t\t\tconst toneList: Deque<Tone> = instrumentState.liveInputTones;\n\t\t\tlet toneCount: number = 0;\n\t\t\tif (this.liveInputDuration > 0 && channelIndex == this.liveInputChannel && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\n\t\t\t\tconst instrument: Instrument = channel.instruments[instrumentIndex];\n\t\t\t\t\n\t\t\t\tif (instrument.getChord().singleTone) {\n\t\t\t\t\tlet tone: Tone;\n\t\t\t\t\tif (toneList.count() <= toneCount) {\n\t\t\t\t\t\ttone = this.newTone();\n\t\t\t\t\t\ttoneList.pushBack(tone);\n\t\t\t\t\t} else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n\t\t\t\t\t\tthis.releaseTone(instrumentState, toneList.get(toneCount));\n\t\t\t\t\t\ttone = this.newTone();\n\t\t\t\t\t\ttoneList.set(toneCount, tone);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttone = toneList.get(toneCount);\n\t\t\t\t\t}\n\t\t\t\t\ttoneCount++;\n\t\t\t\t\t\n\t\t\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\n\t\t\t\t\t\ttone.pitches[i] = pitches[i];\n\t\t\t\t\t}\n\t\t\t\t\ttone.pitchCount = pitches.length;\n\t\t\t\t\ttone.chordSize = 1;\n\t\t\t\t\ttone.instrumentIndex = instrumentIndex;\n\t\t\t\t\ttone.note = tone.prevNote = tone.nextNote = null;\n\t\t\t\t\ttone.atNoteStart = this.liveInputStarted;\n\t\t\t\t\ttone.forceContinueAtStart = false;\n\t\t\t\t\ttone.forceContinueAtEnd = false;\n\t\t\t\t\tthis.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n\t\t\t\t} else {\n\t\t\t\t\t//const transition: Transition = instrument.getTransition();\n\t\t\t\t\t\n\t\t\t\t\tthis.moveTonesIntoOrderedTempMatchedList(toneList, pitches);\n\t\t\t\t\t\n\t\t\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\n\t\t\t\t\t\t//const strumOffsetParts: number = i * instrument.getChord().strumParts;\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet tone: Tone;\n\t\t\t\t\t\tif (this.tempMatchedPitchTones[toneCount] != null) {\n\t\t\t\t\t\t\ttone = this.tempMatchedPitchTones[toneCount]!;\n\t\t\t\t\t\t\tthis.tempMatchedPitchTones[toneCount] = null;\n\t\t\t\t\t\t\tif (tone.pitchCount != 1 || tone.pitches[0] != pitches[i]) {\n\t\t\t\t\t\t\t\tthis.releaseTone(instrumentState, tone);\n\t\t\t\t\t\t\t\ttone = this.newTone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttoneList.pushBack(tone);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttone = this.newTone();\n\t\t\t\t\t\t\ttoneList.pushBack(tone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttoneCount++;\n\t\t\t\t\t\t\n\t\t\t\t\t\ttone.pitches[0] = pitches[i];\n\t\t\t\t\t\ttone.pitchCount = 1;\n\t\t\t\t\t\ttone.chordSize = pitches.length;\n\t\t\t\t\t\ttone.instrumentIndex = instrumentIndex;\n\t\t\t\t\t\ttone.note = tone.prevNote = tone.nextNote = null;\n\t\t\t\t\t\ttone.atNoteStart = this.liveInputStarted;\n\t\t\t\t\t\ttone.forceContinueAtStart = false;\n\t\t\t\t\t\ttone.forceContinueAtEnd = false;\n\t\t\t\t\t\tthis.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\twhile (toneList.count() > toneCount) {\n\t\t\t\tthis.releaseTone(instrumentState, toneList.popBack());\n\t\t\t}\n\t\t\t\n\t\t\tthis.clearTempMatchedPitchTones(toneCount, instrumentState);\n\t\t}\n\t\t\n\t\tthis.liveInputStarted = false;\n\t}\n\t\n\t// Returns the chord type of the instrument in the adjacent pattern if it is compatible for a\n\t// seamless transition across patterns, otherwise returns null.\n\tprivate adjacentPatternHasCompatibleInstrumentTransition(song: Song, channel: Channel, pattern: Pattern, otherPattern: Pattern, instrumentIndex: number, transition: Transition, chord: Chord, note: Note, otherNote: Note, forceContinue: boolean): Chord | null {\n\t\tif (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\n\t\t\t// The adjacent pattern does not contain the same instrument as the current pattern.\n\t\t\t\n\t\t\tif (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\n\t\t\t\t// The current or adjacent pattern contains more than one instrument, don't bother\n\t\t\t\t// trying to connect them.\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// Otherwise, the two patterns each contain one instrument, but not the same instrument.\n\t\t\t// Try to connect them.\n\t\t\tconst otherInstrument: Instrument = channel.instruments[otherPattern.instruments[0]];\n\t\t\t\n\t\t\tif (forceContinue) {\n\t\t\t\t// Even non-seamless instruments can be connected across patterns if forced.\n\t\t\t\treturn otherInstrument.getChord();\n\t\t\t}\n\t\t\t\n\t\t\t// Otherwise, check that both instruments are seamless across patterns.\n\t\t\tconst otherTransition: Transition = otherInstrument.getTransition();\n\t\t\tif (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\n\t\t\t\treturn otherInstrument.getChord();\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\t// If both patterns contain the same instrument, check that it is seamless across patterns.\n\t\t\treturn (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\n\t\t}\n\t}\n\t\n\tpublic static adjacentNotesHaveMatchingPitches(firstNote: Note, secondNote: Note): boolean {\n\t\tif (firstNote.pitches.length != secondNote.pitches.length) return false;\n\t\tconst firstNoteInterval: number = firstNote.pins[firstNote.pins.length - 1].interval;\n\t\tfor (const pitch of firstNote.pitches) {\n\t\t\tif (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1) return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate moveTonesIntoOrderedTempMatchedList(toneList: Deque<Tone>, notePitches: number[]): void {\n\t\t// The tones are about to seamlessly transition to a new note. The pitches\n\t\t// from the old note may or may not match any of the pitches in the new\n\t\t// note, and not necessarily in order, but if any do match, they'll sound\n\t\t// better if those tones continue to have the same pitch. Attempt to find\n\t\t// the right spot for each old tone in the new chord if possible.\n\t\t\n\t\tfor (let i: number = 0; i < toneList.count(); i++) {\n\t\t\tconst tone: Tone = toneList.get(i);\n\t\t\tconst pitch: number = tone.pitches[0] + tone.lastInterval;\n\t\t\tfor (let j: number = 0; j < notePitches.length; j++) {\n\t\t\t\tif (notePitches[j] == pitch) {\n\t\t\t\t\tthis.tempMatchedPitchTones[j] = tone;\n\t\t\t\t\ttoneList.remove(i);\n\t\t\t\t\ti--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Any tones that didn't get matched should just fill in the gaps.\n\t\twhile (toneList.count() > 0) {\n\t\t\tconst tone: Tone = toneList.popFront();\n\t\t\tfor (let j: number = 0; j < this.tempMatchedPitchTones.length; j++) {\n\t\t\t\tif (this.tempMatchedPitchTones[j] == null) {\n\t\t\t\t\tthis.tempMatchedPitchTones[j] = tone;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate determineCurrentActiveTones(song: Song, channelIndex: number, samplesPerTick: number, playSong: boolean): void {\n\t\tconst channel: Channel = song.channels[channelIndex];\n\t\tconst channelState: ChannelState = this.channels[channelIndex];\n\t\tconst pattern: Pattern | null = song.getPattern(channelIndex, this.bar);\n\t\tconst currentPart: number = this.getCurrentPart();\n\t\tconst currentTick: number = this.tick + Config.ticksPerPart * currentPart;\n\t\tlet note: Note | null = null;\n\t\tlet prevNote: Note | null = null;\n\t\tlet nextNote: Note | null = null;\n\t\t\n\t\tif (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\n\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\n\t\t\t\tif (pattern.notes[i].end <= currentPart) {\n\t\t\t\t\tprevNote = pattern.notes[i];\n\t\t\t\t} else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n\t\t\t\t\tnote = pattern.notes[i];\n\t\t\t\t} else if (pattern.notes[i].start > currentPart) {\n\t\t\t\t\tnextNote = pattern.notes[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (note != null) {\n\t\t\t\tif (prevNote != null && prevNote.end != note.start) prevNote = null;\n\t\t\t\tif (nextNote != null && nextNote.start != note.end) nextNote = null;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\n\t\tif (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\n\t\t\tconst newInstrumentIndex: number = song.patternInstruments ? pattern.instruments[0] : 0;\n\t\t\tif (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n\t\t\t\tconst sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n\t\t\t\tconst destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n\t\t\t\twhile (sourceInstrumentState.activeTones.count() > 0) {\n\t\t\t\t\tdestInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\n\t\t\t\t}\n\t\t\t}\n\t\t\tchannelState.singleSeamlessInstrument = newInstrumentIndex;\n\t\t} else {\n\t\t\tchannelState.singleSeamlessInstrument = null;\n\t\t}\n\t\t\n\t\tfor (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n\t\t\tconst instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n\t\t\tconst toneList: Deque<Tone> = instrumentState.activeTones;\n\t\t\tlet toneCount: number = 0;\n\t\t\tif ((note != null) && (!song.patternInstruments || (pattern!.instruments.indexOf(instrumentIndex) != -1))) {\n\t\t\t\tconst instrument: Instrument = channel.instruments[instrumentIndex];\n\t\t\t\tlet prevNoteForThisInstrument: Note | null = prevNote;\n\t\t\t\tlet nextNoteForThisInstrument: Note | null = nextNote;\n\t\t\t\t\n\t\t\t\tconst partsPerBar: Number = Config.partsPerBeat * song.beatsPerBar;\n\t\t\t\tconst transition: Transition = instrument.getTransition();\n\t\t\t\tconst chord: Chord = instrument.getChord();\n\t\t\t\tlet forceContinueAtStart: boolean = false;\n\t\t\t\tlet forceContinueAtEnd: boolean = false;\n\t\t\t\tlet tonesInPrevNote: number = 0;\n\t\t\t\tlet tonesInNextNote: number = 0;\n\t\t\t\tif (note.start == 0) {\n\t\t\t\t\t// If the beginning of the note coincides with the beginning of the pattern,\n\t\t\t\t\t// look for an adjacent note at the end of the previous pattern.\n\t\t\t\t\tlet prevPattern: Pattern | null = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\n\t\t\t\t\tif (prevPattern != null) {\n\t\t\t\t\t\tconst lastNote: Note | null = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\n\t\t\t\t\t\tif (lastNote != null && lastNote.end == partsPerBar) {\n\t\t\t\t\t\t\tconst patternForcesContinueAtStart: boolean = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\n\t\t\t\t\t\t\tconst chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\n\t\t\t\t\t\t\tif (chordOfCompatibleInstrument != null) {\n\t\t\t\t\t\t\t\tprevNoteForThisInstrument = lastNote;\n\t\t\t\t\t\t\t\ttonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\n\t\t\t\t\t\t\t\tforceContinueAtStart = patternForcesContinueAtStart;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (prevNoteForThisInstrument != null) {\n\t\t\t\t\ttonesInPrevNote = chord.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\n\t\t\t\t}\n\t\t\t\tif (note.end == partsPerBar) {\n\t\t\t\t\t// If the end of the note coincides with the end of the pattern, look for an\n\t\t\t\t\t// adjacent note at the beginning of the next pattern.\n\t\t\t\t\tlet nextPattern: Pattern | null = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\n\t\t\t\t\tif (nextPattern != null) {\n\t\t\t\t\t\tconst firstNote: Note | null = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\n\t\t\t\t\t\tif (firstNote != null && firstNote.start == 0) {\n\t\t\t\t\t\t\tconst nextPatternForcesContinueAtStart: boolean = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\n\t\t\t\t\t\t\tconst chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\n\t\t\t\t\t\t\tif (chordOfCompatibleInstrument != null) {\n\t\t\t\t\t\t\t\tnextNoteForThisInstrument = firstNote;\n\t\t\t\t\t\t\t\ttonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\n\t\t\t\t\t\t\t\tforceContinueAtEnd = nextPatternForcesContinueAtStart;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (nextNoteForThisInstrument != null) {\n\t\t\t\t\ttonesInNextNote = chord.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (chord.singleTone) {\n\t\t\t\t\tconst atNoteStart: boolean = (Config.ticksPerPart * note.start == currentTick);\n\t\t\t\t\tlet tone: Tone;\n\t\t\t\t\tif (toneList.count() <= toneCount) {\n\t\t\t\t\t\ttone = this.newTone();\n\t\t\t\t\t\ttoneList.pushBack(tone);\n\t\t\t\t\t} else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\n\t\t\t\t\t\tconst oldTone: Tone = toneList.get(toneCount);\n\t\t\t\t\t\tif (oldTone.isOnLastTick) {\n\t\t\t\t\t\t\tthis.freeTone(oldTone);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.releaseTone(instrumentState, oldTone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttone = this.newTone();\n\t\t\t\t\t\ttoneList.set(toneCount, tone);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttone = toneList.get(toneCount);\n\t\t\t\t\t}\n\t\t\t\t\ttoneCount++;\n\t\t\t\t\t\n\t\t\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\n\t\t\t\t\t\ttone.pitches[i] = note.pitches[i];\n\t\t\t\t\t}\n\t\t\t\t\ttone.pitchCount = note.pitches.length;\n\t\t\t\t\ttone.chordSize = 1;\n\t\t\t\t\ttone.instrumentIndex = instrumentIndex;\n\t\t\t\t\ttone.note = note;\n\t\t\t\t\ttone.noteStartPart = note.start;\n\t\t\t\t\ttone.noteEndPart = note.end;\n\t\t\t\t\ttone.prevNote = prevNoteForThisInstrument;\n\t\t\t\t\ttone.nextNote = nextNoteForThisInstrument;\n\t\t\t\t\ttone.prevNotePitchIndex = 0;\n\t\t\t\t\ttone.nextNotePitchIndex = 0;\n\t\t\t\t\ttone.atNoteStart = atNoteStart;\n\t\t\t\t\ttone.passedEndOfNote = false;\n\t\t\t\t\ttone.forceContinueAtStart = forceContinueAtStart;\n\t\t\t\t\ttone.forceContinueAtEnd = forceContinueAtEnd;\n\t\t\t\t\tthis.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n\t\t\t\t} else {\n\t\t\t\t\tconst transition: Transition = instrument.getTransition();\n\t\t\t\t\t\n\t\t\t\t\tif (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\n\t\t\t\t\t\tthis.moveTonesIntoOrderedTempMatchedList(toneList, note.pitches);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet strumOffsetParts: number = 0;\n\t\t\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet prevNoteForThisTone: Note | null = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\n\t\t\t\t\t\tlet noteForThisTone: Note = note;\n\t\t\t\t\t\tlet nextNoteForThisTone: Note | null = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\n\t\t\t\t\t\tlet noteStartPart: number = noteForThisTone.start + strumOffsetParts;\n\t\t\t\t\t\tlet passedEndOfNote: boolean = false;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Strumming may mean that a note's actual start time may be after the\n\t\t\t\t\t\t// note's displayed start time. If the note start hasn't been reached yet,\n\t\t\t\t\t\t// carry over the previous tone if available and seamless, otherwise skip\n\t\t\t\t\t\t// the new tone until it is ready to start.\n\t\t\t\t\t\tif (noteStartPart > currentPart) {\n\t\t\t\t\t\t\tif (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\n\t\t\t\t\t\t\t\t// Continue the previous note's chord until the current one takes over.\n\t\t\t\t\t\t\t\tnextNoteForThisTone = noteForThisTone;\n\t\t\t\t\t\t\t\tnoteForThisTone = prevNoteForThisTone;\n\t\t\t\t\t\t\t\tprevNoteForThisTone = null;\n\t\t\t\t\t\t\t\tnoteStartPart = noteForThisTone.start + strumOffsetParts;\n\t\t\t\t\t\t\t\tpassedEndOfNote = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// This and the rest of the tones in the chord shouldn't start yet.\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet noteEndPart: number = noteForThisTone.end;\n\t\t\t\t\t\tif ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\n\t\t\t\t\t\t\tnoteEndPart = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEndPart + strumOffsetParts);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\n\t\t\t\t\t\t\tstrumOffsetParts += chord.strumParts;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst atNoteStart: boolean = (Config.ticksPerPart * noteStartPart == currentTick);\n\t\t\t\t\t\tlet tone: Tone;\n\t\t\t\t\t\tif (this.tempMatchedPitchTones[toneCount] != null) {\n\t\t\t\t\t\t\ttone = this.tempMatchedPitchTones[toneCount]!;\n\t\t\t\t\t\t\tthis.tempMatchedPitchTones[toneCount] = null;\n\t\t\t\t\t\t\ttoneList.pushBack(tone);\n\t\t\t\t\t\t} else if (toneList.count() <= toneCount) {\n\t\t\t\t\t\t\ttone = this.newTone();\n\t\t\t\t\t\t\ttoneList.pushBack(tone);\n\t\t\t\t\t\t} else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\n\t\t\t\t\t\t\tconst oldTone: Tone = toneList.get(toneCount);\n\t\t\t\t\t\t\tif (oldTone.isOnLastTick) {\n\t\t\t\t\t\t\t\tthis.freeTone(oldTone);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.releaseTone(instrumentState, oldTone);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttone = this.newTone();\n\t\t\t\t\t\t\ttoneList.set(toneCount, tone);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttone = toneList.get(toneCount);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttoneCount++;\n\t\t\t\t\t\t\n\t\t\t\t\t\ttone.pitches[0] = noteForThisTone.pitches[i];\n\t\t\t\t\t\ttone.pitchCount = 1;\n\t\t\t\t\t\ttone.chordSize = noteForThisTone.pitches.length;\n\t\t\t\t\t\ttone.instrumentIndex = instrumentIndex;\n\t\t\t\t\t\ttone.note = noteForThisTone;\n\t\t\t\t\t\ttone.noteStartPart = noteStartPart;\n\t\t\t\t\t\ttone.noteEndPart = noteEndPart;\n\t\t\t\t\t\ttone.prevNote = prevNoteForThisTone;\n\t\t\t\t\t\ttone.nextNote = nextNoteForThisTone;\n\t\t\t\t\t\ttone.prevNotePitchIndex = i;\n\t\t\t\t\t\ttone.nextNotePitchIndex = i;\n\t\t\t\t\t\ttone.atNoteStart = atNoteStart;\n\t\t\t\t\t\ttone.passedEndOfNote = passedEndOfNote;\n\t\t\t\t\t\ttone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\n\t\t\t\t\t\ttone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\n\t\t\t\t\t\tthis.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Automatically free or release seamless tones if there's no new note to take over.\n\t\t\twhile (toneList.count() > toneCount) {\n\t\t\t\tconst tone: Tone = toneList.popBack();\n\t\t\t\tconst channel: Channel = song.channels[channelIndex];\n\t\t\t\tif (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n\t\t\t\t\tconst instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n\t\t\t\t\tthis.releaseTone(instrumentState, tone);\n\t\t\t\t} else {\n\t\t\t\t\tthis.freeTone(tone);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.clearTempMatchedPitchTones(toneCount, instrumentState);\n\t\t}\n\t}\n\t\n\tprivate clearTempMatchedPitchTones(toneCount: number, instrumentState: InstrumentState): void {\n\t\tfor (let i: number = toneCount; i < this.tempMatchedPitchTones.length; i++) {\n\t\t\tconst oldTone: Tone | null = this.tempMatchedPitchTones[i];\n\t\t\tif (oldTone != null) {\n\t\t\t\tif (oldTone.isOnLastTick) {\n\t\t\t\t\tthis.freeTone(oldTone);\n\t\t\t\t} else {\n\t\t\t\t\tthis.releaseTone(instrumentState, oldTone);\n\t\t\t\t}\n\t\t\t\tthis.tempMatchedPitchTones[i] = null;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate playTone(channelIndex: number, bufferIndex: number, runLength: number, tone: Tone): void {\n\t\tconst channelState: ChannelState = this.channels[channelIndex];\n\t\tconst instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n\t\t\n\t\tinstrumentState.synthesizer!(this, bufferIndex, runLength, tone, instrumentState);\n\t\ttone.envelopeComputer.clearEnvelopes();\n\t}\n\t\n\tprivate static computeChordExpression(chordSize: number): number {\n\t\treturn 1.0 / ((chordSize - 1) * 0.25 + 1.0);\n\t}\n\t\n\tprivate computeTone(song: Song, channelIndex: number, samplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\n\t\tconst roundedSamplesPerTick: number = Math.ceil(samplesPerTick);\n\t\tconst channel: Channel = song.channels[channelIndex];\n\t\tconst channelState: ChannelState = this.channels[channelIndex];\n\t\tconst instrument: Instrument = channel.instruments[tone.instrumentIndex];\n\t\tconst instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n\t\tinstrumentState.awake = true;\n\t\tinstrumentState.tonesAddedInThisTick = true;\n\t\tif (!instrumentState.computed) {\n\t\t\tinstrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone);\n\t\t}\n\t\tconst isNoiseChannel: boolean = song.getChannelIsNoise(channelIndex);\n\t\tconst transition: Transition = instrument.getTransition();\n\t\tconst chord: Chord = instrument.getChord();\n\t\tconst chordExpression: number = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\n\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\n\t\tconst secondsPerPart: number = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\n\t\tconst sampleTime: number = 1.0 / this.samplesPerSecond;\n\t\tconst beatsPerPart: number = 1.0 / Config.partsPerBeat;\n\t\tconst ticksIntoBar: number = this.getTicksIntoBar();\n\t\tconst partTimeStart: number = (ticksIntoBar      ) / Config.ticksPerPart;\n\t\tconst partTimeEnd: number   = (ticksIntoBar + 1.0) / Config.ticksPerPart;\n\t\tconst currentPart: number = this.getCurrentPart();\n\t\t\n\t\tlet specialIntervalMult: number = 1.0;\n\t\ttone.specialIntervalExpressionMult = 1.0;\n\t\t\n\t\tlet toneIsOnLastTick: boolean = shouldFadeOutFast;\n\t\tlet intervalStart: number = 0.0;\n\t\tlet intervalEnd: number = 0.0;\n\t\tlet fadeExpressionStart: number = 1.0;\n\t\tlet fadeExpressionEnd: number = 1.0;\n\t\tlet chordExpressionStart: number = chordExpression;\n\t\tlet chordExpressionEnd:   number = chordExpression;\n\t\t\n\t\tlet expressionReferencePitch: number = 16; // A low \"E\" as a MIDI pitch.\n\t\tlet basePitch: number = Config.keys[song.key].basePitch;\n\t\tlet baseExpression: number = 1.0;\n\t\tlet pitchDamping: number = 48;\n\t\tif (instrument.type == InstrumentType.spectrum) {\n\t\t\tbaseExpression = Config.spectrumBaseExpression;\n\t\t\tif (isNoiseChannel) {\n\t\t\t\tbasePitch = Config.spectrumBasePitch;\n\t\t\t\tbaseExpression *= 2.0; // Note: spectrum is louder for drum channels than pitch channels!\n\t\t\t}\n\t\t\texpressionReferencePitch = Config.spectrumBasePitch;\n\t\t\tpitchDamping = 28;\n\t\t} else if (instrument.type == InstrumentType.drumset) {\n\t\t\tbasePitch = Config.spectrumBasePitch;\n\t\t\tbaseExpression = Config.drumsetBaseExpression;\n\t\t\texpressionReferencePitch = basePitch;\n\t\t} else if (instrument.type == InstrumentType.noise) {\n\t\t\tbasePitch = Config.chipNoises[instrument.chipNoise].basePitch;\n\t\t\tbaseExpression = Config.noiseBaseExpression;\n\t\t\texpressionReferencePitch = basePitch;\n\t\t\tpitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\n\t\t} else if (instrument.type == InstrumentType.fm) {\n\t\t\tbaseExpression = Config.fmBaseExpression;\n\t\t} else if (instrument.type == InstrumentType.chip) {\n\t\t\tbaseExpression = Config.chipBaseExpression;\n\t\t} else if (instrument.type == InstrumentType.harmonics) {\n\t\t\tbaseExpression = Config.harmonicsBaseExpression;\n\t\t} else if (instrument.type == InstrumentType.pwm) {\n\t\t\tbaseExpression = Config.pwmBaseExpression;\n\t\t} else if (instrument.type == InstrumentType.supersaw) {\n\t\t\tbaseExpression = Config.supersawBaseExpression;\n\t\t} else if (instrument.type == InstrumentType.pickedString) {\n\t\t\tbaseExpression = Config.pickedStringBaseExpression;\n\t\t} else {\n\t\t\tthrow new Error(\"Unknown instrument type in computeTone.\");\n\t\t}\n\t\t\n\t\tif ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\n\t\t\ttone.reset();\n\t\t}\n\t\ttone.freshlyAllocated = false;\n\t\t\n\t\tfor (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\n\t\t\ttone.phaseDeltas[i] = 0.0;\n\t\t\ttone.phaseDeltaScales[i] = 0.0;\n\t\t\ttone.operatorExpressions[i]      = 0.0;\n\t\t\ttone.operatorExpressionDeltas[i] = 0.0;\n\t\t}\n\t\ttone.expression = 0.0;\n\t\ttone.expressionDelta = 0.0;\n\n\t\tif (released) {\n\t\t\tconst startTicksSinceReleased: number = tone.ticksSinceReleased;\n\t\t\tconst endTicksSinceReleased:   number = tone.ticksSinceReleased + 1.0;\n\t\t\tintervalStart = intervalEnd = tone.lastInterval;\n\t\t\tconst fadeOutTicks: number = Math.abs(instrument.getFadeOutTicks());\n\t\t\tfadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n\t\t\tfadeExpressionEnd   = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n\t\t\t\n\t\t\tif (shouldFadeOutFast) {\n\t\t\t\tfadeExpressionEnd = 0.0;\n\t\t\t}\n\t\t\t\n\t\t\tif (tone.ticksSinceReleased + 1 >= fadeOutTicks) toneIsOnLastTick = true;\n\t\t} else if (tone.note == null) {\n\t\t\tfadeExpressionStart = fadeExpressionEnd = 1.0;\n\t\t\ttone.lastInterval = 0;\n\t\t\ttone.ticksSinceReleased = 0;\n\t\t\ttone.liveInputSamplesHeld += roundedSamplesPerTick;\n\t\t} else {\n\t\t\tconst note: Note = tone.note;\n\t\t\tconst nextNote: Note | null = tone.nextNote;\n\n\t\t\tconst noteStartPart: number = tone.noteStartPart;\n\t\t\tconst noteEndPart: number = tone.noteEndPart;\n\t\t\t\n\t\t\tconst endPinIndex: number = note.getEndPinIndex(currentPart);\n\t\t\tconst startPin: NotePin = note.pins[endPinIndex-1];\n\t\t\tconst endPin: NotePin = note.pins[endPinIndex];\n\t\t\tconst noteStartTick: number = noteStartPart * Config.ticksPerPart;\n\t\t\tconst noteEndTick:   number = noteEndPart   * Config.ticksPerPart;\n\t\t\tconst pinStart: number  = (note.start + startPin.time) * Config.ticksPerPart;\n\t\t\tconst pinEnd:   number  = (note.start +   endPin.time) * Config.ticksPerPart;\n\t\t\t\n\t\t\ttone.ticksSinceReleased = 0;\n\t\t\t\n\t\t\tconst tickTimeStart: number = currentPart * Config.ticksPerPart + this.tick;\n\t\t\tconst tickTimeEnd:   number = tickTimeStart + 1.0;\n\t\t\tconst noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\n\t\t\tconst noteTicksPassedTickEnd:   number = tickTimeEnd - noteStartTick;\n\t\t\tconst pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\n\t\t\tconst pinRatioEnd:   number = Math.min(1.0, (tickTimeEnd   - pinStart) / (pinEnd - pinStart));\n\t\t\tfadeExpressionStart = 1.0;\n\t\t\tfadeExpressionEnd   = 1.0;\n\t\t\tintervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\n\t\t\tintervalEnd   = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\n\t\t\ttone.lastInterval = intervalEnd;\n\t\t\t\n\t\t\tif ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\n\t\t\t\tconst fadeOutTicks: number = -instrument.getFadeOutTicks();\n\t\t\t\tif (fadeOutTicks > 0.0) {\n\t\t\t\t\t// If the tone should fade out before the end of the note, do so here.\n\t\t\t\t\tconst noteLengthTicks: number = noteEndTick - noteStartTick;\n\t\t\t\t\tfadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\n\t\t\t\t\tfadeExpressionEnd   *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\n\t\t\t\t\tif (tickTimeEnd >= noteStartTick + noteLengthTicks) toneIsOnLastTick = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\ttone.isOnLastTick = toneIsOnLastTick;\n\t\t\n\t\t// Compute envelopes *after* resetting the tone, otherwise the envelope computer gets reset too!\n\t\tconst envelopeComputer: EnvelopeComputer = tone.envelopeComputer;\n\t\tenvelopeComputer.computeEnvelopes(instrument, currentPart, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone);\n\t\tconst envelopeStarts: number[] = tone.envelopeComputer.envelopeStarts;\n\t\tconst envelopeEnds: number[] = tone.envelopeComputer.envelopeEnds;\n\t\t\n\t\tif (tone.note != null && transition.slides) {\n\t\t\t// Slide interval and chordExpression at the start and/or end of the note if necessary.\n\t\t\tconst prevNote: Note | null = tone.prevNote;\n\t\t\tconst nextNote: Note | null = tone.nextNote;\n\t\t\tif (prevNote != null) {\n\t\t\t\tconst intervalDiff: number = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length-1].interval - tone.pitches[0];\n\t\t\t\tif (envelopeComputer.prevSlideStart) intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\n\t\t\t\tif (envelopeComputer.prevSlideEnd)   intervalEnd   += intervalDiff * envelopeComputer.prevSlideRatioEnd;\n\t\t\t\tif (!chord.singleTone) {\n\t\t\t\t\tconst chordSizeDiff: number = prevNote.pitches.length - tone.chordSize;\n\t\t\t\t\tif (envelopeComputer.prevSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\n\t\t\t\t\tif (envelopeComputer.prevSlideEnd)   chordExpressionEnd   = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (nextNote != null) {\n\t\t\t\tconst intervalDiff: number = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length-1].interval);\n\t\t\t\tif (envelopeComputer.nextSlideStart) intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\n\t\t\t\tif (envelopeComputer.nextSlideEnd)   intervalEnd   += intervalDiff * envelopeComputer.nextSlideRatioEnd;\n\t\t\t\tif (!chord.singleTone) {\n\t\t\t\t\tconst chordSizeDiff: number = nextNote.pitches.length - tone.chordSize;\n\t\t\t\t\tif (envelopeComputer.nextSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\n\t\t\t\t\tif (envelopeComputer.nextSlideEnd)   chordExpressionEnd   = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (effectsIncludePitchShift(instrument.effects)) {\n\t\t\tconst pitchShift: number = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\n\t\t\tconst envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.pitchShift];\n\t\t\tconst envelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.pitchShift];\n\t\t\tintervalStart += pitchShift * envelopeStart;\n\t\t\tintervalEnd   += pitchShift * envelopeEnd;\n\t\t}\n\t\tif (effectsIncludeDetune(instrument.effects)) {\n\t\t\tconst envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.detune];\n\t\t\tconst envelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.detune];\n\t\t\tintervalStart += Synth.detuneToCents((instrument.detune - Config.detuneCenter) * envelopeStart) * Config.pitchesPerOctave / (12.0 * 100.0);\n\t\t\tintervalEnd   += Synth.detuneToCents((instrument.detune - Config.detuneCenter) * envelopeEnd  ) * Config.pitchesPerOctave / (12.0 * 100.0);\n\t\t}\n\t\t\n\t\tif (effectsIncludeVibrato(instrument.effects)) {\n\t\t\tconst delayTicks: number = Config.vibratos[instrument.vibrato].delayTicks;\n\t\t\tconst vibratoAmplitude: number = Config.vibratos[instrument.vibrato].amplitude;\n\t\t\t\n\t\t\t// To maintain pitch continuity, (mostly for picked string which retriggers impulse\n\t\t\t// otherwise) remember the vibrato at the end of this run and reuse it at the start\n\t\t\t// of the next run if available.\n\t\t\tlet vibratoStart: number;\n\t\t\tif (tone.prevVibrato != null) {\n\t\t\t\tvibratoStart = tone.prevVibrato;\n\t\t\t} else {\n\t\t\t\tlet lfoStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * partTimeStart);\n\t\t\t\tconst vibratoDepthEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.vibratoDepth];\n\t\t\t\tvibratoStart = vibratoAmplitude * lfoStart * vibratoDepthEnvelopeStart;\n\t\t\t\tif (delayTicks > 0.0) {\n\t\t\t\t\tconst ticksUntilVibratoStart: number = delayTicks - envelopeComputer.noteTicksStart;\n\t\t\t\t\tvibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tlet lfoEnd:   number = Synth.getLFOAmplitude(instrument, secondsPerPart * partTimeEnd);\n\t\t\tconst vibratoDepthEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.vibratoDepth];\n\t\t\tlet vibratoEnd:   number = vibratoAmplitude * lfoEnd   * vibratoDepthEnvelopeEnd;\n\t\t\tif (delayTicks > 0.0) {\n\t\t\t\tconst ticksUntilVibratoEnd:   number = delayTicks - envelopeComputer.noteTicksEnd;\n\t\t\t\tvibratoEnd   *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd   / 2.0));\n\t\t\t}\n\t\t\ttone.prevVibrato = vibratoEnd;\n\t\t\t\n\t\t\tintervalStart += vibratoStart;\n\t\t\tintervalEnd   += vibratoEnd;\n\t\t}\n\t\t\n\t\tif ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\n\t\t\t// Fade in the beginning of the note.\n\t\t\tconst fadeInSeconds: number = instrument.getFadeInSeconds();\n\t\t\tif (fadeInSeconds > 0.0) {\n\t\t\t\tfadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStart / fadeInSeconds);\n\t\t\t\tfadeExpressionEnd   *= Math.min(1.0, envelopeComputer.noteSecondsEnd   / fadeInSeconds);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (instrument.type == InstrumentType.drumset && tone.drumsetPitch == null) {\n\t\t\t// It's possible that the note will change while the user is editing it,\n\t\t\t// but the tone's pitches don't get updated because the tone has already\n\t\t\t// ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\n\t\t\ttone.drumsetPitch = tone.pitches[0];\n\t\t\tif (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\n\t\t\ttone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\n\t\t}\n\t\t\n\t\tlet noteFilterExpression: number = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n\t\tif (!effectsIncludeNoteFilter(instrument.effects)) {\n\t\t\ttone.noteFilterCount = 0;\n\t\t} else {\n\t\t\tconst noteFilterSettings: FilterSettings = instrument.noteFilter;\n\t\t\t\n\t\t\tconst noteAllFreqsEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterAllFreqs];\n\t\t\tconst noteAllFreqsEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.noteFilterAllFreqs];\n\t\t\tfor (let i: number = 0; i < noteFilterSettings.controlPointCount; i++) {\n\t\t\t\tconst noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0 + i];\n\t\t\t\tconst noteFreqEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.noteFilterFreq0 + i];\n\t\t\t\tconst notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0 + i];\n\t\t\t\tconst notePeakEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.noteFilterGain0 + i];\n\t\t\t\tconst point: FilterControlPoint = noteFilterSettings.controlPoints[i];\n\t\t\t\tpoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n\t\t\t\tpoint.toCoefficients(Synth.tempFilterEndCoefficients,   this.samplesPerSecond, noteAllFreqsEnvelopeEnd   * noteFreqEnvelopeEnd,   notePeakEnvelopeEnd);\n\t\t\t\tif (tone.noteFilters.length <= i) tone.noteFilters[i] = new DynamicBiquadFilter();\n\t\t\t\ttone.noteFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, point.type == FilterType.lowPass);\n\t\t\t\tnoteFilterExpression *= point.getVolumeCompensationMult();\n\t\t\t}\n\t\t\ttone.noteFilterCount = noteFilterSettings.controlPointCount;\n\t\t}\n\t\t\n\t\tif (instrument.type == InstrumentType.drumset) {\n\t\t\tconst drumsetFilterEnvelope: Envelope = instrument.getDrumsetEnvelope(tone.drumsetPitch!);\n\t\t\t// If the drumset lowpass cutoff decays, compensate by increasing expression.\n\t\t\tnoteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope)\n\t\t\t\n\t\t\t// Drumset filters use the same envelope timing as the rest of the envelopes, but do not include support for slide transitions.\n\t\t\tlet drumsetFilterEnvelopeStart: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.noteSizeStart);\n\t\t\tlet drumsetFilterEnvelopeEnd:   number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsEnd,   beatsPerPart * partTimeEnd,   envelopeComputer.noteSizeEnd);\n\t\t\t\n\t\t\t// Apply slide interpolation to drumset envelope.\n\t\t\tif (envelopeComputer.prevSlideStart) {\n\t\t\t\tconst other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.prevNoteSize);\n\t\t\t\tdrumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.prevSlideRatioStart;\n\t\t\t}\n\t\t\tif (envelopeComputer.prevSlideEnd) {\n\t\t\t\tconst other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.prevNoteSize);\n\t\t\t\tdrumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.prevSlideRatioEnd;\n\t\t\t}\n\t\t\tif (envelopeComputer.nextSlideStart) {\n\t\t\t\tconst other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeStart, envelopeComputer.nextNoteSize);\n\t\t\t\tdrumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.nextSlideRatioStart;\n\t\t\t}\n\t\t\tif (envelopeComputer.nextSlideEnd) {\n\t\t\t\tconst other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeEnd, envelopeComputer.nextNoteSize);\n\t\t\t\tdrumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.nextSlideRatioEnd;\n\t\t\t}\n\t\t\t\n\t\t\tconst point: FilterControlPoint = this.tempDrumSetControlPoint;\n\t\t\tpoint.type = FilterType.lowPass;\n\t\t\tpoint.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.5);\n\t\t\tpoint.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\n\t\t\t// Drumset envelopes are warped to better imitate the legacy simplified 2nd order lowpass at ~48000Hz that I used to use.\n\t\t\tpoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\n\t\t\tpoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\n\t\t\tif (tone.noteFilters.length == tone.noteFilterCount) tone.noteFilters[tone.noteFilterCount] = new DynamicBiquadFilter();\n\t\t\ttone.noteFilters[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\n\t\t\ttone.noteFilterCount++;\n\t\t}\n\t\t\n\t\tnoteFilterExpression = Math.min(3.0, noteFilterExpression);\n\t\t\n\t\tif (instrument.type == InstrumentType.fm) {\n\t\t\t// phase modulation!\n\t\t\t\n\t\t\tlet sineExpressionBoost: number = 1.0;\n\t\t\tlet totalCarrierExpression: number = 0.0;\n\n\t\t\tlet arpeggioInterval: number = 0;\n\t\t\tconst arpeggiates: boolean = chord.arpeggiates;\n\t\t\tif (tone.pitchCount > 1 && arpeggiates) {\n\t\t\t\tconst arpeggio: number = Math.floor((this.tick + this.part * Config.ticksPerPart) / Config.rhythms[song.rhythm].ticksPerArpeggio);\n\t\t\t\tarpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, song.rhythm, arpeggio)] - tone.pitches[0];\n\t\t\t}\n\t\t\t\n\t\t\tconst carrierCount: number = Config.algorithms[instrument.algorithm].carrierCount;\n\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\n\t\t\t\tconst associatedCarrierIndex: number = Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1;\n\t\t\t\tconst pitch: number = tone.pitches[arpeggiates ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\n\t\t\t\tconst freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\n\t\t\t\tconst interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\n\t\t\t\tconst pitchStart: number = basePitch + (pitch + intervalStart) * intervalScale + interval;\n\t\t\t\tconst pitchEnd: number = basePitch + (pitch + intervalEnd) * intervalScale + interval;\n\t\t\t\tconst baseFreqStart: number = Instrument.frequencyFromPitch(pitchStart);\n\t\t\t\tconst baseFreqEnd:   number = Instrument.frequencyFromPitch(pitchEnd);\n\t\t\t\tconst hzOffset: number = Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\n\t\t\t\tconst targetFreqStart: number = freqMult * baseFreqStart + hzOffset;\n\t\t\t\tconst targetFreqEnd:   number = freqMult * baseFreqEnd   + hzOffset;\n\t\t\t\t\n\t\t\t\tconst freqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.operatorFrequency0 + i];\n\t\t\t\tconst freqEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.operatorFrequency0 + i];\n\t\t\t\tlet freqStart: number;\n\t\t\t\tlet freqEnd:   number;\n\t\t\t\tif (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\n\t\t\t\t\tfreqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\n\t\t\t\t\tfreqEnd   = Math.pow(2.0, Math.log2(targetFreqEnd   / baseFreqEnd)   * freqEnvelopeEnd)   * baseFreqEnd;\n\t\t\t\t} else {\n\t\t\t\t\tfreqStart = targetFreqStart;\n\t\t\t\t\tfreqEnd   = targetFreqEnd;\n\t\t\t\t}\n\t\t\t\ttone.phaseDeltas[i] = freqStart * sampleTime;\n\t\t\t\ttone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\n\t\t\t\t\n\t\t\t\tconst amplitudeCurve: number = Synth.operatorAmplitudeCurve(instrument.operators[i].amplitude);\n\t\t\t\tconst amplitudeMult: number = amplitudeCurve * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n\t\t\t\tlet expressionStart: number = amplitudeMult;\n\t\t\t\tlet expressionEnd: number = amplitudeMult;\n\t\t\t\tif (i < carrierCount) {\n\t\t\t\t\t// carrier\n\t\t\t\t\tlet pitchExpressionStart: number;\n\t\t\t\t\tif (tone.prevPitchExpressions[i] != null) {\n\t\t\t\t\t\tpitchExpressionStart = tone.prevPitchExpressions[i]!;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\n\t\t\t\t\t}\n\t\t\t\t\tconst pitchExpressionEnd: number   = Math.pow(2.0, -(pitchEnd   - expressionReferencePitch) / pitchDamping);\n\t\t\t\t\ttone.prevPitchExpressions[i] = pitchExpressionEnd;\n\t\t\t\t\texpressionStart *= pitchExpressionStart;\n\t\t\t\t\texpressionEnd   *= pitchExpressionEnd;\n\t\t\t\t\t\n\t\t\t\t\ttotalCarrierExpression += amplitudeCurve;\n\t\t\t\t} else {\n\t\t\t\t\t// modulator\n\t\t\t\t\texpressionStart *= Config.sineWaveLength * 1.5;\n\t\t\t\t\texpressionEnd   *= Config.sineWaveLength * 1.5;\n\t\t\t\t\t\n\t\t\t\t\tsineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\texpressionStart *= envelopeStarts[EnvelopeComputeIndex.operatorAmplitude0 + i];\n\t\t\t\texpressionEnd   *= envelopeEnds[  EnvelopeComputeIndex.operatorAmplitude0 + i];\n\t\t\t\t\n\t\t\t\ttone.operatorExpressions[i] = expressionStart;\n\t\t\t\ttone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\t\t\t}\n\t\t\t\n\t\t\tsineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\n\t\t\tsineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\n\t\t\tsineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\n\t\t\tconst expressionStart: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume];\n\t\t\tconst expressionEnd:   number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[  EnvelopeComputeIndex.noteVolume];\n\t\t\ttone.expression = expressionStart;\n\t\t\ttone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\t\t\t\n\t\t\tconst feedbackAmplitude: number = Config.sineWaveLength * 0.3 * instrument.feedbackAmplitude / 15.0;\n\t\t\tlet feedbackStart: number = feedbackAmplitude * envelopeStarts[EnvelopeComputeIndex.feedbackAmplitude];\n\t\t\tlet feedbackEnd:   number = feedbackAmplitude * envelopeEnds[  EnvelopeComputeIndex.feedbackAmplitude];\n\t\t\ttone.feedbackMult = feedbackStart;\n\t\t\ttone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\n\t\t} else {\n\t\t\tconst freqEndRatio: number = Math.pow(2.0, (intervalEnd - intervalStart) * intervalScale / 12.0);\n\t\t\tconst basePhaseDeltaScale: number = Math.pow(freqEndRatio, 1.0 / roundedSamplesPerTick);\n\t\t\t\n\t\t\tlet pitch: number = tone.pitches[0];\n\t\t\tif (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval)) {\n\t\t\t\tconst arpeggio: number = Math.floor((this.tick + this.part * Config.ticksPerPart) / Config.rhythms[song.rhythm].ticksPerArpeggio);\n\t\t\t\tif (chord.customInterval) {\n\t\t\t\t\tconst intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, song.rhythm, arpeggio)] - tone.pitches[0];\n\t\t\t\t\tspecialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\n\t\t\t\t\ttone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\n\t\t\t\t} else {\n\t\t\t\t\tpitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, song.rhythm, arpeggio)];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tconst startPitch: number = basePitch + (pitch + intervalStart) * intervalScale;\n\t\t\tconst endPitch:   number = basePitch + (pitch + intervalEnd)   * intervalScale;\n\t\t\tlet pitchExpressionStart: number;\n\t\t\t// TODO: use the second element of prevPitchExpressions for the unison voice, compute a separate expression delta for it.\n\t\t\tif (tone.prevPitchExpressions[0] != null) {\n\t\t\t\tpitchExpressionStart = tone.prevPitchExpressions[0]!;\n\t\t\t} else {\n\t\t\t\tpitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\n\t\t\t}\n\t\t\tconst pitchExpressionEnd:   number = Math.pow(2.0,   -(endPitch - expressionReferencePitch) / pitchDamping);\n\t\t\ttone.prevPitchExpressions[0] = pitchExpressionEnd;\n\t\t\tlet settingsExpressionMult: number = baseExpression * noteFilterExpression;\n\t\t\t\n\t\t\tif (instrument.type == InstrumentType.noise) {\n\t\t\t\tsettingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\n\t\t\t}\n\t\t\tif (instrument.type == InstrumentType.chip) {\n\t\t\t\tsettingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\n\t\t\t}\n\t\t\tif (instrument.type == InstrumentType.pwm) {\n\t\t\t\tconst basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\n\t\t\t\tconst pulseWidthStart: number = basePulseWidth * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\n\t\t\t\tconst pulseWidthEnd:   number = basePulseWidth * envelopeEnds[  EnvelopeComputeIndex.pulseWidth];\n\t\t\t\ttone.pulseWidth = pulseWidthStart;\n\t\t\t\ttone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\n\t\t\t}\n\t\t\t\n\t\t\tif (instrument.type == InstrumentType.pickedString) {\n\t\t\t\t// Increase expression to compensate for string decay.\n\t\t\t\tsettingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - instrument.stringSustain / (Config.stringSustainRange - 1)));\n\t\t\t}\n\t\t\t\n\t\t\tconst startFreq: number = Instrument.frequencyFromPitch(startPitch);\n\t\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n\t\t\t\t// These instruments have two waves at different frequencies for the unison feature.\n\t\t\t\tconst unison: Unison = Config.unisons[instrument.unison];\n\t\t\t\tconst voiceCountExpression: number = (instrument.type == InstrumentType.pickedString) ? 1 : unison.voices / 2.0;\n\t\t\t\tsettingsExpressionMult *= unison.expression * voiceCountExpression;\n\t\t\t\tconst unisonEnvelopeStart = envelopeStarts[EnvelopeComputeIndex.unison];\n\t\t\t\tconst unisonEnvelopeEnd   = envelopeEnds[  EnvelopeComputeIndex.unison];\n\t\t\t\tconst unisonAStart: number = Math.pow(2.0, (unison.offset + unison.spread) * unisonEnvelopeStart / 12.0);\n\t\t\t\tconst unisonAEnd:   number = Math.pow(2.0, (unison.offset + unison.spread) * unisonEnvelopeEnd   / 12.0);\n\t\t\t\tconst unisonBStart: number = Math.pow(2.0, (unison.offset - unison.spread) * unisonEnvelopeStart / 12.0) * specialIntervalMult;\n\t\t\t\tconst unisonBEnd:   number = Math.pow(2.0, (unison.offset - unison.spread) * unisonEnvelopeEnd   / 12.0) * specialIntervalMult;\n\t\t\t\ttone.phaseDeltas[0] = startFreq * sampleTime * unisonAStart;\n\t\t\t\ttone.phaseDeltas[1] = startFreq * sampleTime * unisonBStart;\n\t\t\t\ttone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonAEnd / unisonAStart, 1.0 / roundedSamplesPerTick);\n\t\t\t\ttone.phaseDeltaScales[1] = basePhaseDeltaScale * Math.pow(unisonBEnd / unisonBStart, 1.0 / roundedSamplesPerTick);\n\t\t\t} else {\n\t\t\t\ttone.phaseDeltas[0] = startFreq * sampleTime;\n\t\t\t\ttone.phaseDeltaScales[0] = basePhaseDeltaScale;\n\t\t\t}\n\t\t\t\n\t\t\t// TODO: make expressionStart and expressionEnd variables earlier and modify those\n\t\t\t// instead of these supersawExpression variables.\n\t\t\tlet supersawExpressionStart: number = 1.0;\n\t\t\tlet supersawExpressionEnd: number = 1.0;\n\t\t\tif (instrument.type == InstrumentType.supersaw) {\n\t\t\t\tconst minFirstVoiceAmplitude: number = 1.0 / Math.sqrt(Config.supersawVoiceCount);\n\t\t\t\tconst baseDynamismSlider: number = instrument.supersawDynamism / Config.supersawDynamismMax;\n\t\t\t\tconst curvedDynamismStart: number = 1.0 - Math.pow(Math.max(0.0, 1.0 - baseDynamismSlider * envelopeStarts[EnvelopeComputeIndex.supersawDynamism]), 0.2);\n\t\t\t\tconst curvedDynamismEnd:   number = 1.0 - Math.pow(Math.max(0.0, 1.0 - baseDynamismSlider * envelopeEnds[  EnvelopeComputeIndex.supersawDynamism]), 0.2);\n\t\t\t\tconst firstVoiceAmplitudeStart: number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismStart);\n\t\t\t\tconst firstVoiceAmplitudeEnd:   number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismEnd);\n\t\t\t\t// TODO: automation\n\t\t\t\tconst dynamismStart: number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeStart, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n\t\t\t\tconst dynamismEnd:   number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeEnd, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n\t\t\t\ttone.supersawDynamism = dynamismStart;\n\t\t\t\ttone.supersawDynamismDelta = (dynamismEnd - dynamismStart) / roundedSamplesPerTick;\n\t\t\t\t\n\t\t\t\tconst initializeSupersaw: boolean = (tone.supersawDelayIndex == -1);\n\t\t\t\tif (initializeSupersaw) {\n\t\t\t\t\t// Goal: generate sawtooth phases such that the combined initial amplitude\n\t\t\t\t\t// cancel out to minimize pop. Algorithm: generate sorted phases, iterate over\n\t\t\t\t\t// their sawtooth drop points to find a combined zero crossing, then offset the\n\t\t\t\t\t// phases so they start there.\n\t\t\t\t\t\n\t\t\t\t\t// Generate random phases in ascending order by adding positive randomly\n\t\t\t\t\t// sized gaps between adjacent phases. For a proper distribution of random\n\t\t\t\t\t// events, the gaps sizes should be an \"exponential distribution\", which is\n\t\t\t\t\t// just: -Math.log(Math.random()). At the end, normalize the phases to a 0-1\n\t\t\t\t\t// range by dividing by the final value of the accumulator.\n\t\t\t\t\tlet accumulator: number = 0.0;\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\ttone.phases[i] = accumulator;\n\t\t\t\t\t\taccumulator += -Math.log(Math.random());\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst amplitudeSum: number = 1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart;\n\t\t\t\t\tconst slope: number = amplitudeSum;\n\t\t\t\t\t\n\t\t\t\t\t// Find the initial amplitude of the sum of sawtooths with the normalized\n\t\t\t\t\t// set of phases.\n\t\t\t\t\tlet sample: number = 0.0;\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\n\t\t\t\t\t\tconst normalizedPhase: number = tone.phases[i] / accumulator;\n\t\t\t\t\t\ttone.phases[i] = normalizedPhase;\n\t\t\t\t\t\tsample += (normalizedPhase - 0.5) * amplitude;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Find the phase of the zero crossing of the sum of the sawtooths. You can\n\t\t\t\t\t// use a constant slope and the distance between sawtooth drops to determine if\n\t\t\t\t\t// the zero crossing occurs between them. Note that a small phase means that\n\t\t\t\t\t// the corresponding drop for that wave is far away, and a big phase means the\n\t\t\t\t\t// drop is nearby, so to iterate forward through the drops we iterate backward\n\t\t\t\t\t// through the phases.\n\t\t\t\t\tlet zeroCrossingPhase: number = 1.0;\n\t\t\t\t\tlet prevDrop: number = 0.0;\n\t\t\t\t\tfor (let i: number = Config.supersawVoiceCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tconst nextDrop: number = 1.0 - tone.phases[i];\n\t\t\t\t\t\tconst phaseDelta: number = nextDrop - prevDrop;\n\t\t\t\t\t\tif (sample < 0.0) {\n\t\t\t\t\t\t\tconst distanceToZeroCrossing: number = -sample / slope;\n\t\t\t\t\t\t\tif (distanceToZeroCrossing < phaseDelta) {\n\t\t\t\t\t\t\t\tzeroCrossingPhase = prevDrop + distanceToZeroCrossing;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\n\t\t\t\t\t\tsample += phaseDelta * slope - amplitude;\n\t\t\t\t\t\tprevDrop = nextDrop;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\ttone.phases[i] += zeroCrossingPhase;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Randomize the (initially sorted) order of the phases (aside from the\n\t\t\t\t\t// first one) so that they don't correlate to the detunes that are also\n\t\t\t\t\t// based on index.\n\t\t\t\t\tfor (let i: number = 1; i < Config.supersawVoiceCount - 1; i++) {\n\t\t\t\t\t\tconst swappedIndex: number = i + Math.floor(Math.random() * (Config.supersawVoiceCount - i));\n\t\t\t\t\t\tconst temp: number = tone.phases[i];\n\t\t\t\t\t\ttone.phases[i] = tone.phases[swappedIndex];\n\t\t\t\t\t\ttone.phases[swappedIndex] = temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst baseSpreadSlider: number = instrument.supersawSpread / Config.supersawSpreadMax;\n\t\t\t\t// TODO: automation\n\t\t\t\tconst spreadSliderStart: number = baseSpreadSlider * envelopeStarts[EnvelopeComputeIndex.supersawSpread];\n\t\t\t\tconst spreadSliderEnd:   number = baseSpreadSlider * envelopeEnds[  EnvelopeComputeIndex.supersawSpread];\n\t\t\t\t// Just use the average detune for the current tick in the below loop.\n\t\t\t\tconst averageSpreadSlider: number = (spreadSliderStart + spreadSliderEnd) * 0.5;\n\t\t\t\tconst curvedSpread: number = Math.pow(1.0 - Math.sqrt(Math.max(0.0, 1.0 - averageSpreadSlider)), 1.75);\n\t\t\t\tfor (let i = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t// Spread out the detunes around the center;\n\t\t\t\t\tconst offset: number = (i == 0) ? 0.0 : Math.pow((((i + 1) >> 1) - 0.5 + 0.025 * ((i & 2) - 1)) / (Config.supersawVoiceCount >> 1), 1.1) * ((i & 1) * 2 - 1);\n\t\t\t\t\ttone.supersawUnisonDetunes[i] = Math.pow(2.0, curvedSpread * offset / 12.0);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst baseShape: number = instrument.supersawShape / Config.supersawShapeMax;\n\t\t\t\t// TODO: automation\n\t\t\t\tconst shapeStart: number = baseShape * envelopeStarts[EnvelopeComputeIndex.supersawShape];\n\t\t\t\tconst shapeEnd:   number = baseShape * envelopeEnds[  EnvelopeComputeIndex.supersawShape];\n\t\t\t\ttone.supersawShape = shapeStart;\n\t\t\t\ttone.supersawShapeDelta = (shapeEnd - shapeStart) / roundedSamplesPerTick;\n\t\t\t\t\n\t\t\t\tconst basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\n\t\t\t\t// TODO: automation\n\t\t\t\tconst pulseWidthStart: number = basePulseWidth * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\n\t\t\t\tconst pulseWidthEnd:   number = basePulseWidth * envelopeEnds[  EnvelopeComputeIndex.pulseWidth];\n\t\t\t\tconst phaseDeltaStart: number = (tone.supersawPrevPhaseDelta != null) ? tone.supersawPrevPhaseDelta : startFreq * sampleTime;\n\t\t\t\tconst phaseDeltaEnd: number = startFreq * sampleTime * freqEndRatio;\n\t\t\t\ttone.supersawPrevPhaseDelta = phaseDeltaEnd;\n\t\t\t\tconst delayLengthStart = pulseWidthStart / phaseDeltaStart;\n\t\t\t\tconst delayLengthEnd = pulseWidthEnd / phaseDeltaEnd;\n\t\t\t\ttone.supersawDelayLength = delayLengthStart;\n\t\t\t\ttone.supersawDelayLengthDelta = (delayLengthEnd - delayLengthStart) / roundedSamplesPerTick;\n\t\t\t\tconst minBufferLength: number = Math.ceil(Math.max(delayLengthStart, delayLengthEnd)) + 2;\n\t\t\t\t\n\t\t\t\tif (tone.supersawDelayLine == null || tone.supersawDelayLine.length <= minBufferLength) {\n\t\t\t\t\t// The delay line buffer will get reused for other tones so might as well\n\t\t\t\t\t// start off with a buffer size that is big enough for most notes.\n\t\t\t\t\tconst likelyMaximumLength: number = Math.ceil(0.5 * this.samplesPerSecond / Instrument.frequencyFromPitch(24));\n\t\t\t\t\tconst newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n\t\t\t\t\tif (!initializeSupersaw && tone.supersawDelayLine != null) {\n\t\t\t\t\t\t// If the tone has already started but the buffer needs to be reallocated,\n\t\t\t\t\t\t// transfer the old data to the new buffer.\n\t\t\t\t\t\tconst oldDelayBufferMask: number = (tone.supersawDelayLine.length - 1) >> 0;\n\t\t\t\t\t\tconst startCopyingFromIndex: number = tone.supersawDelayIndex;\n\t\t\t\t\t\tfor (let i: number = 0; i < tone.supersawDelayLine.length; i++) {\n\t\t\t\t\t\t\tnewDelayLine[i] = tone.supersawDelayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttone.supersawDelayLine = newDelayLine;\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\n\t\t\t\t} else if (initializeSupersaw) {\n\t\t\t\t\ttone.supersawDelayLine.fill(0.0);\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst pulseExpressionRatio: number = Config.pwmBaseExpression / Config.supersawBaseExpression;\n\t\t\t\tsupersawExpressionStart *= (1.0 + (pulseExpressionRatio - 1.0) * shapeStart) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart * dynamismStart);\n\t\t\t\tsupersawExpressionEnd *= (1.0 + (pulseExpressionRatio - 1.0) * shapeEnd) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismEnd * dynamismEnd);\n\t\t\t}\n\t\t\t\n\t\t\tconst expressionStart: number = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume] * supersawExpressionStart;\n\t\t\tconst expressionEnd:   number = settingsExpressionMult * fadeExpressionEnd   * chordExpressionEnd   * pitchExpressionEnd   * envelopeEnds[  EnvelopeComputeIndex.noteVolume] * supersawExpressionEnd;\n\t\t\ttone.expression = expressionStart;\n\t\t\ttone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\t\t\t\n\t\t\tif (instrument.type == InstrumentType.pickedString) {\n\t\t\t\tlet stringDecayStart: number;\n\t\t\t\tif (tone.prevStringDecay != null) {\n\t\t\t\t\tstringDecayStart = tone.prevStringDecay;\n\t\t\t\t} else {\n\t\t\t\t\tconst sustainEnvelopeStart: number = tone.envelopeComputer.envelopeStarts[EnvelopeComputeIndex.stringSustain];\n\t\t\t\t\tstringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * instrument.stringSustain / (Config.stringSustainRange - 1));\n\t\t\t\t}\n\t\t\t\tconst sustainEnvelopeEnd: number = tone.envelopeComputer.envelopeEnds[  EnvelopeComputeIndex.stringSustain];\n\t\t\t\tlet stringDecayEnd: number = 1.0 - Math.min(1.0, sustainEnvelopeEnd   * instrument.stringSustain / (Config.stringSustainRange - 1));\n\t\t\t\ttone.prevStringDecay = stringDecayEnd;\n\t\t\t\t\n\t\t\t\tconst unison: Unison = Config.unisons[instrument.unison];\n\t\t\t\tfor (let i: number = tone.pickedStrings.length; i < unison.voices; i++) {\n\t\t\t\t\ttone.pickedStrings[i] = new PickedString();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n\t\t\t\t\tfor (const pickedString of tone.pickedStrings) {\n\t\t\t\t\t\t// Force the picked string to retrigger the attack impulse at the start of the note.\n\t\t\t\t\t\tpickedString.delayIndex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (let i: number = 0; i < unison.voices; i++) {\n\t\t\t\t\ttone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, instrument.stringSustainType);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\n\t\tlet effect: number = 0.0;\n\t\tfor (const vibratoPeriodSeconds of Config.vibratos[instrument.vibrato].periodsSeconds) {\n\t\t\teffect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\n\t\t}\n\t\treturn effect;\n\t}\n\t\n\tpublic static getInstrumentSynthFunction(instrument: Instrument): Function {\n\t\tif (instrument.type == InstrumentType.fm) {\n\t\t\tconst fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\n\t\t\tif (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\n\t\t\t\tconst synthSource: string[] = [];\n\t\t\t\t\n\t\t\t\tfor (const line of Synth.fmSourceTemplate) {\n\t\t\t\t\tif (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n\t\t\t\t\t\tconst outputs: string[] = [];\n\t\t\t\t\t\tfor (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\n\t\t\t\t\t\t\toutputs.push(\"operator\" + j + \"Scaled\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsynthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n\t\t\t\t\t} else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n\t\t\t\t\t\tfor (let j: number = Config.operatorCount - 1; j >= 0; j--) {\n\t\t\t\t\t\t\tfor (const operatorLine of Synth.operatorSourceTemplate) {\n\t\t\t\t\t\t\t\tif (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n\t\t\t\t\t\t\t\t\tlet modulators = \"\";\n\t\t\t\t\t\t\t\t\tfor (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\n\t\t\t\t\t\t\t\t\t\tmodulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\n\t\t\t\t\t\t\t\t\tif (feedbackIndices.length > 0) {\n\t\t\t\t\t\t\t\t\t\tmodulators += \" + feedbackMult * (\";\n\t\t\t\t\t\t\t\t\t\tconst feedbacks: string[] = [];\n\t\t\t\t\t\t\t\t\t\tfor (const modulatorNumber of feedbackIndices) {\n\t\t\t\t\t\t\t\t\t\t\tfeedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tmodulators += feedbacks.join(\" + \") + \")\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsynthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsynthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (line.indexOf(\"#\") != -1) {\n\t\t\t\t\t\tfor (let j: number = 0; j < Config.operatorCount; j++) {\n\t\t\t\t\t\t\tsynthSource.push(line.replace(/\\#/g, j + \"\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsynthSource.push(line);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//console.log(synthSource.join(\"\\n\"));\n\t\t\t\t\n\t\t\t\tconst wrappedFmSynth: string = \"return (synth, bufferIndex, runLength, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n\t\t\t\t\n\t\t\t\tSynth.fmSynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFmSynth)(Config, Synth);\n\t\t\t}\n\t\t\treturn Synth.fmSynthFunctionCache[fingerprint];\n\t\t} else if (instrument.type == InstrumentType.chip) {\n\t\t\treturn Synth.chipSynth;\n\t\t} else if (instrument.type == InstrumentType.harmonics) {\n\t\t\treturn Synth.harmonicsSynth;\n\t\t} else if (instrument.type == InstrumentType.pwm) {\n\t\t\treturn Synth.pulseWidthSynth;\n\t\t} else if (instrument.type == InstrumentType.supersaw) {\n\t\t\treturn Synth.supersawSynth;\n\t\t} else if (instrument.type == InstrumentType.pickedString) {\n\t\t\treturn Synth.pickedStringSynth;\n\t\t} else if (instrument.type == InstrumentType.noise) {\n\t\t\treturn Synth.noiseSynth;\n\t\t} else if (instrument.type == InstrumentType.spectrum) {\n\t\t\treturn Synth.spectrumSynth;\n\t\t} else if (instrument.type == InstrumentType.drumset) {\n\t\t\treturn Synth.drumsetSynth;\n\t\t} else {\n\t\t\tthrow new Error(\"Unrecognized instrument type: \" + instrument.type);\n\t\t}\n\t}\n\t\n\tprivate static chipSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\t\tconst wave: Float32Array = instrumentState.wave!;\n\t\tconst waveLength: number = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n\t\t\n\t\tconst unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unison!.sign;\n\t\tif (instrumentState.unison!.voices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\n\t\tlet phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n\t\tlet phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n\t\tconst phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n\t\tconst phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n\t\tlet expression: number = +tone.expression;\n\t\tconst expressionDelta: number = +tone.expressionDelta;\n\t\tlet phaseA: number = (tone.phases[0] % 1) * waveLength;\n\t\tlet phaseB: number = (tone.phases[1] % 1) * waveLength;\n\t\t\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\n\t\tconst filterCount: number = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters: Function = Synth.applyFilters;\n\t\t\n\t\tconst phaseAInt: number = phaseA|0;\n\t\tconst phaseBInt: number = phaseB|0;\n\t\tconst indexA: number = phaseAInt % waveLength;\n\t\tconst indexB: number = phaseBInt % waveLength;\n\t\tconst phaseRatioA: number = phaseA - phaseAInt;\n\t\tconst phaseRatioB: number = phaseB - phaseBInt;\n\t\tlet prevWaveIntegralA: number = +wave[indexA];\n\t\tlet prevWaveIntegralB: number = +wave[indexB];\n\t\tprevWaveIntegralA += (wave[indexA+1] - prevWaveIntegralA) * phaseRatioA;\n\t\tprevWaveIntegralB += (wave[indexB+1] - prevWaveIntegralB) * phaseRatioB;\n\t\t\n\t\tconst stopIndex: number = bufferIndex + runLength;\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\n\t\t\tphaseA += phaseDeltaA;\n\t\t\tphaseB += phaseDeltaB;\n\t\t\t\n\t\t\tconst phaseAInt: number = phaseA|0;\n\t\t\tconst phaseBInt: number = phaseB|0;\n\t\t\tconst indexA: number = phaseAInt % waveLength;\n\t\t\tconst indexB: number = phaseBInt % waveLength;\n\t\t\tlet nextWaveIntegralA: number = wave[indexA];\n\t\t\tlet nextWaveIntegralB: number = wave[indexB];\n\t\t\tconst phaseRatioA: number = phaseA - phaseAInt;\n\t\t\tconst phaseRatioB: number = phaseB - phaseBInt;\n\t\t\tnextWaveIntegralA += (wave[indexA+1] - nextWaveIntegralA) * phaseRatioA;\n\t\t\tnextWaveIntegralB += (wave[indexB+1] - nextWaveIntegralB) * phaseRatioB;\n\t\t\tconst waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\n\t\t\tconst waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\n\t\t\tprevWaveIntegralA = nextWaveIntegralA;\n\t\t\tprevWaveIntegralB = nextWaveIntegralB;\n\t\t\t\n\t\t\tconst inputSample: number = waveA + waveB * unisonSign;\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\n\t\t\tphaseDeltaA *= phaseDeltaScaleA;\n\t\t\tphaseDeltaB *= phaseDeltaScaleB;\n\t\t\t\n\t\t\tconst output: number = sample * expression;\n\t\t\texpression += expressionDelta;\n\t\t\t\n\t\t\tdata[sampleIndex] += output;\n\t\t}\n\t\t\n\t\ttone.phases[0] = phaseA / waveLength;\n\t\ttone.phases[1] = phaseB / waveLength;\n\t\ttone.phaseDeltas[0] = phaseDeltaA / waveLength;\n\t\ttone.phaseDeltas[1] = phaseDeltaB / waveLength;\n\t\ttone.expression = expression;\n\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t}\n\t\n\tprivate static harmonicsSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\t\tconst wave: Float32Array = instrumentState.wave!;\n\t\tconst waveLength: number = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n\t\t\n\t\tconst unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unison!.sign;\n\t\tif (instrumentState.unison!.voices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\n\t\tlet phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n\t\tlet phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n\t\tconst phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n\t\tconst phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n\t\tlet expression: number = +tone.expression;\n\t\tconst expressionDelta: number = +tone.expressionDelta;\n\t\tlet phaseA: number = (tone.phases[0] % 1) * waveLength;\n\t\tlet phaseB: number = (tone.phases[1] % 1) * waveLength;\n\t\t\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\n\t\tconst filterCount: number = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters: Function = Synth.applyFilters;\n\t\t\n\t\tconst phaseAInt: number = phaseA|0;\n\t\tconst phaseBInt: number = phaseB|0;\n\t\tconst indexA: number = phaseAInt % waveLength;\n\t\tconst indexB: number = phaseBInt % waveLength;\n\t\tconst phaseRatioA: number = phaseA - phaseAInt;\n\t\tconst phaseRatioB: number = phaseB - phaseBInt;\n\t\tlet prevWaveIntegralA: number = +wave[indexA];\n\t\tlet prevWaveIntegralB: number = +wave[indexB];\n\t\tprevWaveIntegralA += (wave[indexA+1] - prevWaveIntegralA) * phaseRatioA;\n\t\tprevWaveIntegralB += (wave[indexB+1] - prevWaveIntegralB) * phaseRatioB;\n\t\t\n\t\tconst stopIndex: number = bufferIndex + runLength;\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\n\t\t\tphaseA += phaseDeltaA;\n\t\t\tphaseB += phaseDeltaB;\n\t\t\t\n\t\t\tconst phaseAInt: number = phaseA|0;\n\t\t\tconst phaseBInt: number = phaseB|0;\n\t\t\tconst indexA: number = phaseAInt % waveLength;\n\t\t\tconst indexB: number = phaseBInt % waveLength;\n\t\t\tlet nextWaveIntegralA: number = wave[indexA];\n\t\t\tlet nextWaveIntegralB: number = wave[indexB];\n\t\t\tconst phaseRatioA: number = phaseA - phaseAInt;\n\t\t\tconst phaseRatioB: number = phaseB - phaseBInt;\n\t\t\tnextWaveIntegralA += (wave[indexA+1] - nextWaveIntegralA) * phaseRatioA;\n\t\t\tnextWaveIntegralB += (wave[indexB+1] - nextWaveIntegralB) * phaseRatioB;\n\t\t\tconst waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\n\t\t\tconst waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\n\t\t\tprevWaveIntegralA = nextWaveIntegralA;\n\t\t\tprevWaveIntegralB = nextWaveIntegralB;\n\t\t\t\n\t\t\tconst inputSample: number = waveA + waveB * unisonSign;\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\n\t\t\tphaseDeltaA *= phaseDeltaScaleA;\n\t\t\tphaseDeltaB *= phaseDeltaScaleB;\n\t\t\t\n\t\t\tconst output: number = sample * expression;\n\t\t\texpression += expressionDelta;\n\t\t\t\n\t\t\tdata[sampleIndex] += output;\n\t\t}\n\t\t\n\t\ttone.phases[0] = phaseA / waveLength;\n\t\ttone.phases[1] = phaseB / waveLength;\n\t\ttone.phaseDeltas[0] = phaseDeltaA / waveLength;\n\t\ttone.phaseDeltas[1] = phaseDeltaB / waveLength;\n\t\ttone.expression = expression;\n\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t}\n\t\n\tprivate static pickedStringSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n\t\t// This algorithm is similar to the Karpluss-Strong algorithm in principle, but with an\n\t\t// all-pass filter for dispersion and with more control over the impulse harmonics.\n\t\t// The source code is processed as a string before being compiled, in order to\n\t\t// handle the unison feature. If unison is disabled or set to none, then only one\n\t\t// string voice is required, otherwise two string voices are required. We only want\n\t\t// to compute the minimum possible number of string voices, so omit the code for\n\t\t// processing extra ones if possible. Any line containing a \"#\" is duplicated for\n\t\t// each required voice, replacing the \"#\" with the voice index.\n\t\t\n\t\tconst voiceCount: number = instrumentState.unison!.voices;\n\t\tlet pickedStringFunction: Function = Synth.pickedStringFunctionCache[voiceCount];\n\t\tif (pickedStringFunction == undefined) {\n\t\t\tlet pickedStringSource: string = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n\t\t\t\n\t\t\tpickedStringSource += `\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unison.sign;\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (`\n\t\t\t\n\t\t\tconst sampleList: string[] = [];\n\t\t\tfor (let voice: number = 0; voice < voiceCount; voice++) {\n\t\t\t\tsampleList.push(\"fractionalDelaySample\" + voice + (voice == 1 ? \" * unisonSign\" : \"\"));\n\t\t\t}\n\t\t\t\n\t\t\tpickedStringSource += sampleList.join(\" + \");\n\t\t\t\n\t\t\tpickedStringSource += `) * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t\t}`\n\t\t\t\n\t\t\t// Duplicate lines containing \"#\" for each voice and replace the \"#\" with the voice index.\n\t\t\tpickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\n\t\t\t\tconst lines = [];\n\t\t\t\tfor (let voice: number = 0; voice < voiceCount; voice++) {\n\t\t\t\t\tlines.push(line.replace(/\\#/g, String(voice)));\n\t\t\t\t}\n\t\t\t\treturn lines.join(\"\\n\");\n\t\t\t});\n\t\t\t\n\t\t\t//console.log(pickedStringSource);\n\t\t\tpickedStringFunction = new Function(\"Config\", \"Synth\", pickedStringSource)(Config, Synth);\n\t\t\tSynth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\n\t\t}\n\t\t\n\t\tpickedStringFunction(synth, bufferIndex, runLength, tone, instrumentState);\n\t}\n\t\n\tprivate static effectsSynth(synth: Synth, outputDataL: Float32Array, outputDataR: Float32Array, bufferIndex: number, runLength: number, instrumentState: InstrumentState): void {\n\t\t// TODO: If automation is involved, don't assume sliders will stay at zero.\n\t\tconst usesDistortion: boolean = effectsIncludeDistortion(instrumentState.effects);\n\t\tconst usesBitcrusher: boolean = effectsIncludeBitcrusher(instrumentState.effects);\n\t\tconst usesEqFilter: boolean = instrumentState.eqFilterCount > 0;\n\t\tconst usesPanning: boolean = effectsIncludePanning(instrumentState.effects);\n\t\tconst usesChorus: boolean = effectsIncludeChorus(instrumentState.effects);\n\t\tconst usesEcho: boolean = effectsIncludeEcho(instrumentState.effects);\n\t\tconst usesReverb: boolean = effectsIncludeReverb(instrumentState.effects);\n\t\tlet signature: number = 0;  if (usesDistortion) signature = signature | 1;\n\t\tsignature = signature << 1; if (usesBitcrusher) signature = signature | 1;\n\t\tsignature = signature << 1; if (usesEqFilter) signature = signature | 1;\n\t\tsignature = signature << 1; if (usesPanning) signature = signature | 1;\n\t\tsignature = signature << 1; if (usesChorus) signature = signature | 1;\n\t\tsignature = signature << 1; if (usesEcho) signature = signature | 1;\n\t\tsignature = signature << 1; if (usesReverb) signature = signature | 1;\n\t\t\n\t\tlet effectsFunction: Function = Synth.effectsFunctionCache[signature];\n\t\tif (effectsFunction == undefined) {\n\t\t\tlet effectsSource: string = \"return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {\";\n\t\t\t\n\t\t\tconst usesDelays: boolean = usesChorus || usesReverb || usesEcho;\n\t\t\t\n\t\t\teffectsSource += `\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;`\n\t\t\t\n\t\t\tif (usesDelays) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesDistortion) {\n\t\t\t\t// Distortion can sometimes create noticeable aliasing.\n\t\t\t\t// It seems the established industry best practice for distortion antialiasing\n\t\t\t\t// is to upsample the inputs (\"zero stuffing\" followed by a brick wall lowpass\n\t\t\t\t// at the original nyquist frequency), perform the distortion, then downsample\n\t\t\t\t// (the lowpass again followed by dropping in-between samples). This is\n\t\t\t\t// \"mathematically correct\" in that it preserves only the intended frequencies,\n\t\t\t\t// but it has several unfortunate tradeoffs depending on the choice of filter,\n\t\t\t\t// introducing latency and/or time smearing, since no true brick wall filter\n\t\t\t\t// exists. For the time being, I've opted to instead generate in-between input\n\t\t\t\t// samples using fractional delay all-pass filters, and after distorting them,\n\t\t\t\t// I \"downsample\" these with a simple weighted sum.\n\t\t\t\t\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\n\t\t\t\tlet distortion = instrumentState.distortion;\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesBitcrusher) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesEqFilter) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;`\n\t\t\t}\n\t\t\t\n\t\t\t// The eq filter volume is also used to fade out the instrument state, so always include it.\n\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;`\n\t\t\t\n\t\t\tif (usesPanning) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesChorus) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesEcho) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesReverb) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;`\n\t\t\t}\n\t\t\t\n\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;`\n\t\t\t\n\t\t\tif (usesDistortion) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesBitcrusher) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesEqFilter) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;`\n\t\t\t}\n\t\t\t\n\t\t\t// The eq filter volume is also used to fade out the instrument state, so always include it.\n\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;`\n\t\t\t\n\t\t\tif (usesPanning) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;`\n\t\t\t} else {\n\t\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesChorus) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesEcho) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesReverb) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;`\n\t\t\t}\n\t\t\t\n\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;`\n\t\t\t\n\t\t\tif (usesDelays) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;`\n\t\t\t}\n\t\t\t\n\t\t\teffectsSource += `\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);`\n\t\t\t\n\t\t\tif (usesDelays) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesDistortion) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.distortion = distortion;\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesBitcrusher) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesEqFilter) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesPanning) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesChorus) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesEcho) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\tinstrumentState.echoMult = echoMult;\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;`\n\t\t\t}\n\t\t\t\n\t\t\tif (usesReverb) {\n\t\t\t\teffectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\n\t\t\t\tinstrumentState.reverbMult = reverb;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;`\n\t\t\t}\n\t\t\t\n\t\t\teffectsSource += \"}\";\n\t\t\t\n\t\t\t//console.log(effectsSource);\n\t\t\teffectsFunction = new Function(\"Config\", \"Synth\", effectsSource)(Config, Synth);\n\t\t\tSynth.effectsFunctionCache[signature] = effectsFunction;\n\t\t}\n\t\t\n\t\teffectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n\t}\n\t\n\tprivate static pulseWidthSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\t\t\n\t\tlet phaseDelta: number = tone.phaseDeltas[0];\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n\t\tlet expression: number = +tone.expression;\n\t\tconst expressionDelta: number = +tone.expressionDelta;\n\t\tlet phase: number = (tone.phases[0] % 1);\n\t\t\n\t\tlet pulseWidth: number = tone.pulseWidth;\n\t\tconst pulseWidthDelta: number = tone.pulseWidthDelta;\n\t\t\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\n\t\tconst filterCount: number = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters: Function = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex: number = bufferIndex + runLength;\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\n\t\t\tconst sawPhaseA: number = phase % 1;\n\t\t\tconst sawPhaseB: number = (phase + pulseWidth) % 1;\n\t\t\t\n\t\t\tlet pulseWave: number = sawPhaseB - sawPhaseA;\n\t\t\t\n\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n\t\t\tif (sawPhaseA < phaseDelta) {\n\t\t\t\tvar t = sawPhaseA / phaseDelta;\n\t\t\t\tpulseWave += (t+t-t*t-1) * 0.5;\n\t\t\t} else if (sawPhaseA > 1.0 - phaseDelta) {\n\t\t\t\tvar t = (sawPhaseA - 1.0) / phaseDelta;\n\t\t\t\tpulseWave += (t+t+t*t+1) * 0.5;\n\t\t\t}\n\t\t\tif (sawPhaseB < phaseDelta) {\n\t\t\t\tvar t = sawPhaseB / phaseDelta;\n\t\t\t\tpulseWave -= (t+t-t*t-1) * 0.5;\n\t\t\t} else if (sawPhaseB > 1.0 - phaseDelta) {\n\t\t\t\tvar t = (sawPhaseB - 1.0) / phaseDelta;\n\t\t\t\tpulseWave -= (t+t+t*t+1) * 0.5;\n\t\t\t}\n\t\t\t\n\t\t\tconst inputSample: number = pulseWave;\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\n\t\t\tphase += phaseDelta;\n\t\t\tphaseDelta *= phaseDeltaScale;\n\t\t\tpulseWidth += pulseWidthDelta;\n\t\t\t\n\t\t\tconst output: number = sample * expression;\n\t\t\texpression += expressionDelta;\n\t\t\t\n\t\t\tdata[sampleIndex] += output;\n\t\t}\n\t\t\n\t\ttone.phases[0] = phase;\n\t\ttone.phaseDeltas[0] = phaseDelta;\n\t\ttone.expression = expression;\n\t\ttone.pulseWidth = pulseWidth;\n\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t}\n\t\n\tprivate static supersawSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\t\tconst voiceCount: number = Config.supersawVoiceCount|0;\n\t\t\n\t\tlet phaseDelta: number = tone.phaseDeltas[0];\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n\t\tlet expression: number = +tone.expression;\n\t\tconst expressionDelta: number = +tone.expressionDelta;\n\t\tlet phases: number[] = tone.phases;\n\t\t\n\t\tlet dynamism: number = +tone.supersawDynamism;\n\t\tconst dynamismDelta: number = +tone.supersawDynamismDelta;\n\t\tconst unisonDetunes: number[] = tone.supersawUnisonDetunes;\n\t\tlet shape: number = +tone.supersawShape;\n\t\tconst shapeDelta: number = +tone.supersawShapeDelta;\n\t\tlet delayLength: number = +tone.supersawDelayLength;\n\t\tconst delayLengthDelta: number = +tone.supersawDelayLengthDelta;\n\t\tconst delayLine: Float32Array = tone.supersawDelayLine!;\n\t\tconst delayBufferMask: number = (delayLine.length - 1) >> 0;\n\t\tlet delayIndex: number = tone.supersawDelayIndex|0;\n\t\tdelayIndex = (delayIndex & delayBufferMask) + delayLine.length;\n\t\t\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\n\t\tconst filterCount: number = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters: Function = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex: number = bufferIndex + runLength;\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t// The phase initially starts at a zero crossing so apply\n\t\t\t// the delta before first sample to get a nonzero value.\n\t\t\tlet phase: number = (phases[0] + phaseDelta) % 1.0;\n\t\t\tlet supersawSample: number = phase - 0.5 * (1.0 + (voiceCount - 1.0) * dynamism);\n\t\t\t\n\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n\t\t\tif (phase < phaseDelta) {\n\t\t\t\tvar t: number = phase / phaseDelta;\n\t\t\t\tsupersawSample -= (t+t-t*t-1) * 0.5;\n\t\t\t} else if (phase > 1.0 - phaseDelta) {\n\t\t\t\tvar t: number = (phase - 1.0) / phaseDelta;\n\t\t\t\tsupersawSample -= (t+t+t*t+1) * 0.5;\n\t\t\t}\n\t\t\t\n\t\t\tphases[0] = phase;\n\t\t\t\n\t\t\tfor (let i: number = 1; i < voiceCount; i++) {\n\t\t\t\tconst detunedPhaseDelta: number = phaseDelta * unisonDetunes[i];\n\t\t\t\t// The phase initially starts at a zero crossing so apply\n\t\t\t\t// the delta before first sample to get a nonzero value.\n\t\t\t\tlet phase: number = (phases[i] + detunedPhaseDelta) % 1.0;\n\t\t\t\tsupersawSample += phase * dynamism;\n\t\t\t\t\n\t\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n\t\t\t\tif (phase < detunedPhaseDelta) {\n\t\t\t\t\tconst t: number = phase / detunedPhaseDelta;\n\t\t\t\t\tsupersawSample -= (t+t-t*t-1) * 0.5 * dynamism;\n\t\t\t\t} else if (phase > 1.0 - detunedPhaseDelta) {\n\t\t\t\t\tconst t: number = (phase - 1.0) / detunedPhaseDelta;\n\t\t\t\t\tsupersawSample -= (t+t+t*t+1) * 0.5 * dynamism;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tphases[i] = phase;\n\t\t\t}\n\t\t\t\n\t\t\tdelayLine[delayIndex & delayBufferMask] = supersawSample;\n\t\t\tconst delaySampleTime: number = delayIndex - delayLength;\n\t\t\tconst lowerIndex: number = delaySampleTime | 0;\n\t\t\tconst upperIndex: number = lowerIndex + 1;\n\t\t\tconst delayRatio: number = delaySampleTime - lowerIndex;\n\t\t\tconst prevDelaySample: number = delayLine[lowerIndex & delayBufferMask];\n\t\t\tconst nextDelaySample: number = delayLine[upperIndex & delayBufferMask];\n\t\t\tconst delaySample: number = prevDelaySample + (nextDelaySample - prevDelaySample) * delayRatio;\n\t\t\tdelayIndex++;\n\t\t\t\n\t\t\tconst inputSample: number = supersawSample - delaySample * shape;\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\n\t\t\tphaseDelta *= phaseDeltaScale;\n\t\t\tdynamism += dynamismDelta;\n\t\t\tshape += shapeDelta;\n\t\t\tdelayLength += delayLengthDelta;\n\t\t\t\n\t\t\tconst output: number = sample * expression;\n\t\t\texpression += expressionDelta;\n\t\t\t\n\t\t\tdata[sampleIndex] += output;\n\t\t}\n\t\t\n\t\ttone.phaseDeltas[0] = phaseDelta;\n\t\ttone.expression = expression;\n\t\ttone.supersawDynamism = dynamism;\n\t\ttone.supersawShape = shape;\n\t\ttone.supersawDelayLength = delayLength;\n\t\ttone.supersawDelayIndex = delayIndex;\n\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t}\n\t\n\tprivate static fmSourceTemplate: string[] = (`\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\tconst sineWave = Config.sineWave;\n\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta      = +tone.feedbackDelta;\n\t\tlet expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + runLength;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\n\t\t\tfeedbackMult += feedbackDelta;\n\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\t\t\t\n\t\t\tdata[sampleIndex] += output;\n\t\t}\n\t\t\n\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\n\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\n\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\ttone.feedbackOutputs[#] = operator#Output;\n\t\ttone.feedbackMult = feedbackMult;\n\t\ttone.expression = expression;\n\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t`).split(\"\\n\");\n\t\n\tprivate static operatorSourceTemplate: string[] = (`\n\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\n\t\t\tconst operator#Sample   = sineWave[operator#Index];\n\t\t\toperator#Output         = operator#Sample + (sineWave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t`).split(\"\\n\");\n\t\n\tprivate static noiseSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\t\tconst wave: Float32Array = instrumentState.wave!;\n\t\tlet phaseDelta: number = +tone.phaseDeltas[0];\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n\t\tlet expression: number = +tone.expression;\n\t\tconst expressionDelta: number = +tone.expressionDelta;\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\n\t\tif (tone.phases[0] == 0.0) {\n\t\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\n\t\t\tphase = Math.random() * Config.chipNoiseLength;\n\t\t}\n\t\tconst phaseMask: number = Config.chipNoiseLength - 1;\n\t\tlet noiseSample: number = +tone.noiseSample;\n\t\t\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\n\t\tconst filterCount: number = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters: Function = Synth.applyFilters;\n\t\t\n\t\t// This is for a \"legacy\" style simplified 1st order lowpass filter with\n\t\t// a cutoff frequency that is relative to the tone's fundamental frequency.\n\t\tconst pitchRelativefilter: number = Math.min(1.0, phaseDelta * instrumentState.noisePitchFilterMult);\n\t\t\n\t\tconst stopIndex: number = bufferIndex + runLength;\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\tconst waveSample: number = wave[phase & phaseMask];\n\t\t\t\n\t\t\tnoiseSample += (waveSample - noiseSample) * pitchRelativefilter;\n\t\t\t\n\t\t\tconst inputSample: number = noiseSample;\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\n\t\t\tphase += phaseDelta;\n\t\t\tphaseDelta *= phaseDeltaScale;\n\t\t\t\n\t\t\tconst output: number = sample * expression;\n\t\t\texpression += expressionDelta;\n\t\t\t\n\t\t\tdata[sampleIndex] += output;\n\t\t}\n\t\t\n\t\ttone.phases[0] = phase / Config.chipNoiseLength;\n\t\ttone.phaseDeltas[0] = phaseDelta;\n\t\ttone.expression = expression;\n\t\ttone.noiseSample = noiseSample;\n\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t}\n\t\n\tprivate static spectrumSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\t\tconst wave: Float32Array = instrumentState.wave!;\n\t\tconst samplesInPeriod: number = (1 << 7);\n\t\tlet phaseDelta: number = tone.phaseDeltas[0] * samplesInPeriod;\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n\t\tlet expression: number = +tone.expression;\n\t\tconst expressionDelta: number = +tone.expressionDelta;\n\t\tlet noiseSample: number = +tone.noiseSample;\n\t\t\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\n\t\tconst filterCount: number = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters: Function = Synth.applyFilters;\n\t\t\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\n\t\tif (tone.phases[0] == 0.0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\n\t\tconst phaseMask: number = Config.spectrumNoiseLength - 1;\n\t\t\n\t\t// This is for a \"legacy\" style simplified 1st order lowpass filter with\n\t\t// a cutoff frequency that is relative to the tone's fundamental frequency.\n\t\tconst pitchRelativefilter: number = Math.min(1.0, phaseDelta);\n\t\t\n\t\tconst stopIndex: number = bufferIndex + runLength;\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\tconst phaseInt: number = phase|0;\n\t\t\tconst index: number = phaseInt & phaseMask;\n\t\t\tlet waveSample: number = wave[index];\n\t\t\tconst phaseRatio: number = phase - phaseInt;\n\t\t\twaveSample += (wave[index + 1] - waveSample) * phaseRatio;\n\t\t\t\n\t\t\tnoiseSample += (waveSample - noiseSample) * pitchRelativefilter;\n\t\t\t\n\t\t\tconst inputSample: number = noiseSample;\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\n\t\t\tphase += phaseDelta;\n\t\t\tphaseDelta *= phaseDeltaScale;\n\t\t\t\n\t\t\tconst output: number = sample * expression;\n\t\t\texpression += expressionDelta;\n\t\t\t\n\t\t\tdata[sampleIndex] += output;\n\t\t}\n\t\t\n\t\ttone.phases[0] = phase / Config.spectrumNoiseLength;\n\t\ttone.phaseDeltas[0] = phaseDelta / samplesInPeriod;\n\t\ttone.expression = expression;\n\t\ttone.noiseSample = noiseSample;\n\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t}\n\t\n\tprivate static drumsetSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\t\tlet wave: Float32Array = instrumentState.getDrumsetWave(tone.drumsetPitch!);\n\t\tconst referenceDelta: number = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch!);\n\t\tlet phaseDelta: number = tone.phaseDeltas[0] / referenceDelta;\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n\t\tlet expression: number = +tone.expression;\n\t\tconst expressionDelta: number = +tone.expressionDelta;\n\t\t\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\n\t\tconst filterCount: number = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters: Function = Synth.applyFilters;\n\t\t\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\n\t\tif (tone.phases[0] == 0.0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\n\t\tconst phaseMask: number = Config.spectrumNoiseLength - 1;\n\t\t\n\t\tconst stopIndex: number = bufferIndex + runLength;\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\tconst phaseInt: number = phase|0;\n\t\t\tconst index: number = phaseInt & phaseMask;\n\t\t\tlet noiseSample: number = wave[index];\n\t\t\tconst phaseRatio: number = phase - phaseInt;\n\t\t\tnoiseSample += (wave[index + 1] - noiseSample) * phaseRatio;\n\t\t\t\n\t\t\tconst inputSample: number = noiseSample;\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\n\t\t\tphase += phaseDelta;\n\t\t\tphaseDelta *= phaseDeltaScale;\n\t\t\t\n\t\t\tconst output: number = sample * expression;\n\t\t\texpression += expressionDelta;\n\t\t\t\n\t\t\tdata[sampleIndex] += output;\n\t\t}\n\t\t\n\t\ttone.phases[0] = phase / Config.spectrumNoiseLength;\n\t\ttone.phaseDeltas[0] = phaseDelta * referenceDelta;\n\t\ttone.expression = expression;\n\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t}\n\t\n\tprivate static findRandomZeroCrossing(wave: Float32Array, waveLength: number): number {\n\t\tlet phase: number = Math.random() * waveLength;\n\t\tconst phaseMask: number = waveLength - 1;\n\t\t\n\t\t// Spectrum and drumset waves sounds best when they start at a zero crossing,\n\t\t// otherwise they pop. Try to find a zero crossing.\n\t\tlet indexPrev: number = phase & phaseMask;\n\t\tlet wavePrev: number = wave[indexPrev];\n\t\tconst stride: number = 16;\n\t\tfor (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\n\t\t\tconst indexNext: number = (indexPrev + stride) & phaseMask;\n\t\t\tconst waveNext: number = wave[indexNext];\n\t\t\tif (wavePrev * waveNext <= 0.0) {\n\t\t\t\t// Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\n\t\t\t\tfor (let i: number = 0; i < stride; i++) {\n\t\t\t\t\tconst innerIndexNext: number = (indexPrev + 1) & phaseMask;\n\t\t\t\t\tconst innerWaveNext: number = wave[innerIndexNext];\n\t\t\t\t\tif (wavePrev * innerWaveNext <= 0.0) {\n\t\t\t\t\t\t// Found the zero crossing again! Now let's find the exact intersection.\n\t\t\t\t\t\tconst slope: number = innerWaveNext - wavePrev;\n\t\t\t\t\t\tphase = indexPrev;\n\t\t\t\t\t\tif (Math.abs(slope) > 0.00000001) {\n\t\t\t\t\t\t\tphase += -wavePrev / slope;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tphase = Math.max(0, phase) % waveLength;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindexPrev = innerIndexNext;\n\t\t\t\t\t\twavePrev = innerWaveNext;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tindexPrev = indexNext;\n\t\t\t\twavePrev = waveNext;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn phase;\n\t}\n\t\n\tpublic static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\n\t\treturn (instrumentVolume == Config.volumeRange - 1) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\n\t}\n\tpublic static volumeMultToInstrumentVolume(volumeMult: number): number {\n\t\treturn (volumeMult <= 0.0) ? Config.volumeRange - 1 : Math.min(Config.volumeRange - 2, Math.log2(volumeMult) / Config.volumeLogScale);\n\t}\n\tpublic static noteSizeToVolumeMult(size: number): number {\n\t\treturn Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\n\t}\n\tpublic static volumeMultToNoteSize(volumeMult: number): number {\n\t\treturn Math.pow(Math.max(0.0, volumeMult), 1/1.5) * Config.noteSizeMax;\n\t}\n\t\n\tpublic static fadeInSettingToSeconds(setting: number): number {\n\t\treturn 0.0125 * (0.95 * setting + 0.05 * setting * setting);\n\t}\n\tpublic static secondsToFadeInSetting(seconds: number): number {\n\t\treturn clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\n\t}\n\tpublic static fadeOutSettingToTicks(setting: number): number {\n\t\treturn Config.fadeOutTicks[setting];\n\t}\n\tpublic static ticksToFadeOutSetting(ticks: number): number {\n\t\tlet lower: number = Config.fadeOutTicks[0];\n\t\tif (ticks <= lower) return 0;\n\t\tfor (let i: number = 1; i < Config.fadeOutTicks.length; i++) {\n\t\t\tlet upper: number = Config.fadeOutTicks[i];\n\t\t\tif (ticks <= upper) return (ticks < (lower + upper) / 2) ? i - 1 : i;\n\t\t\tlower = upper;\n\t\t}\n\t\treturn Config.fadeOutTicks.length - 1;\n\t}\n\t\n\tpublic static detuneToCents(detune: number): number {\n\t\treturn detune * (Math.abs(detune)+1) / 2;\n\t}\n\tpublic static centsToDetune(cents: number): number {\n\t\treturn Math.sign(cents) * (Math.sqrt(1 + 8 * Math.abs(cents)) - 1) / 2.0;\n\t}\n\t\n\tprivate getSamplesPerTick(): number {\n\t\tif (this.song == null) return 0;\n\t\tconst beatsPerMinute: number = this.song.getBeatsPerMinute();\n\t\tconst beatsPerSecond: number = beatsPerMinute / 60.0;\n\t\tconst partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\n\t\tconst tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\n\t\treturn this.samplesPerSecond / tickPerSecond;\n\t}\n\t\n\tpublic static fittingPowerOfTwo(x: number): number {\n\t\treturn 1 << (32 - Math.clz32(Math.ceil(x) - 1));\n\t}\n\t\n\tprivate sanitizeFilters(filters: DynamicBiquadFilter[]): void {\n\t\tlet reset: boolean = false;\n\t\tfor (const filter of filters) {\n\t\t\tconst output1: number = Math.abs(filter.output1);\n\t\t\tconst output2: number = Math.abs(filter.output2);\n\t\t\t// If either is a large value, Infinity, or NaN, then just reset all filter history.\n\t\t\tif (!(output1 < 100) || !(output2 < 100)) {\n\t\t\t\treset = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (output1 < epsilon) filter.output1 = 0.0;\n\t\t\tif (output2 < epsilon) filter.output2 = 0.0;\n\t\t}\n\t\tif (reset) {\n\t\t\tfor (const filter of filters) {\n\t\t\t\tfilter.output1 = 0.0;\n\t\t\t\tfilter.output2 = 0.0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static sanitizeDelayLine(delayLine: Float32Array, lastIndex: number, mask: number): void {\n\t\twhile (true) {\n\t\t\tlastIndex--;\n\t\t\tconst index: number = lastIndex & mask;\n\t\t\tconst sample: number = Math.abs(delayLine[index]);\n\t\t\tif (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon)) break;\n\t\t\tdelayLine[index] = 0.0;\n\t\t}\n\t}\n\t\n\tpublic static applyFilters(sample: number, input1: number, input2: number, filterCount: number, filters: DynamicBiquadFilter[]): number {\n\t\tfor (let i: number = 0; i < filterCount; i++) {\n\t\t\tconst filter: DynamicBiquadFilter = filters[i];\n\t\t\tconst output1: number = filter.output1;\n\t\t\tconst output2: number = filter.output2;\n\t\t\tconst a1: number = filter.a1;\n\t\t\tconst a2: number = filter.a2;\n\t\t\tconst b0: number = filter.b0;\n\t\t\tconst b1: number = filter.b1;\n\t\t\tconst b2: number = filter.b2;\n\t\t\tsample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\n\t\t\tfilter.a1 = a1 + filter.a1Delta;\n\t\t\tfilter.a2 = a2 + filter.a2Delta;\n\t\t\tif (filter.useMultiplicativeInputCoefficients) {\n\t\t\t\tfilter.b0 = b0 * filter.b0Delta;\n\t\t\t\tfilter.b1 = b1 * filter.b1Delta;\n\t\t\t\tfilter.b2 = b2 * filter.b2Delta;\n\t\t\t} else {\n\t\t\t\tfilter.b0 = b0 + filter.b0Delta;\n\t\t\t\tfilter.b1 = b1 + filter.b1Delta;\n\t\t\t\tfilter.b2 = b2 + filter.b2Delta;\n\t\t\t}\n\t\t\tfilter.output2 = output1;\n\t\t\tfilter.output1 = sample;\n\t\t\t// Updating the input values is waste if the next filter doesn't exist...\n\t\t\tinput2 = output2;\n\t\t\tinput1 = output1;\n\t\t}\n\t\treturn sample;\n\t}\n}\n\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these imported classes as members to JavaScript:\nexport {Dictionary, DictionaryArray, FilterType, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config};\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {Prompt} from \"./Prompt\";\nimport {SongDocument} from \"./SongDocument\";\n\nconst {button, div, p, h2} = HTML;\n\nexport class TipPrompt implements Prompt {\n\tprivate readonly _closeButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\n\tpublic readonly container: HTMLDivElement;\n\t\n\tconstructor(private _doc: SongDocument, type: string) {\n\t\tlet message: HTMLDivElement;\n\t\t\n\t\tswitch (type) {\n\t\t\tcase \"scale\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Scale\"),\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available pitches of a scale to get a sense for how it sounds.\"),\n\t\t\t\t\tp(\"Most of the scales have a major version, marked with a smiley face, and a minor version, marked with a sad face. Assuming your song uses all pitches in the scale and especially \\\"tonic\\\" pitches (the brown rows in the pattern editor) then major scales tend to sound more playful or optimistic, whereas minor scales sound more serious or sad.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"key\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Song Key\"),\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down, keeping the \\\"tonic\\\" pitches (the brown rows in the pattern editor) aligned with the selected \\\"key\\\" pitch.\"),\n\t\t\t\t\tp(\"If you've already placed some notes but they don't emphasize \\\"tonic\\\" pitches then the selected key isn't very meaningful. You can select the \\\"Detect Key\\\" option in the key menu to automatically align the most emphasized notes with \\\"tonic\\\" pitches.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"tempo\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Song Tempo\"),\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute. A \\\"beat\\\" is the duration of the little gray rectangles in the pattern editor. (In conventional music notation, a \\\"quarter note\\\" is usually equivalent to \\\"beat\\\".)\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"reverb\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Reverb\"),\n\t\t\t\t\tp(\"Reverb is like a continuous echo effect. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery, but too much reverb can kinda \\\"smear\\\" sounds so that it's harder to distinguish notes or instruments, especially for lower \\\"bass\\\" notes.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"rhythm\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Rhythm\"),\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\n\t\t\t\t\tp(\"If you've already placed some notes but they don't align with the selected rhythm, you can select the \\\"Snap Notes To Rhythm\\\" option in the rhythm menu to force the notes in the currently selected pattern(s) to align with the selected rhythm.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"instrumentIndex\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Number\"),\n\t\t\t\t\tp(\"In the \\\"Channel Settings\\\" option from BeepBox's \\\"Edit\\\" menu, there are a few ways to enable multiple instruments per channel.\"),\n\t\t\t\t\tp(\"First, you could enable multiple simultaneous instruments per channel. All of the channel's instruments will play all of the notes in the channel at the same time, and you can click an instrument number to view and edit its settings.\"),\n\t\t\t\t\tp(\"Second, you could enable different instruments per pattern. Only one of the instruments will play at any given time, but you can click the instrument number to change which instrument is used for the currently selected pattern(s).\"),\n\t\t\t\t\tp(\"Finally, you can enable them both, in which case you can click an instrument number once to view it, and again to toggle whether the instrument is used for the currently selected pattern(s).\"),\n\t\t\t\t\tp(\"Either way, you can click the + button to add more instruments to a channel, and you can press shift and a number key on your keyboard to select an instrument as if you had clicked the corresponding button here.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"instrumentVolume\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Volume\"),\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"pan\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Panning\"),\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\n\t\t\t\t\tp(\"As a suggestion, composers often put lead melodies, drums, and basses in the center, and spread other instruments toward either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"instrumentType\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Type\"),\n\t\t\t\t\tp(\"BeepBox comes with many instrument presets, try them out! You can also create your own custom instruments!\"),\n\t\t\t\t\tp(\"There are also options for copying and pasting instrument settings and for generating random instruments at the top of the instrument type menu.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"eqFilter\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"EQ Filter\"),\n\t\t\t\t\tp(\"Filters are a way of emphasizing or diminishing different parts of a sound. Musical notes have a fundamental (base) frequency, but the sound of a musical note also has parts at higher frequencies and filters can adjust the volume of each of these parts based on their frequency.\"),\n\t\t\t\t\tp(\"Click in the filter editor to insert, delete, or drag a filter control point. The horizontal position of the point determines which frequencies it affects, and the vertical position determines how the volume is affected at that frequency.\"),\n\t\t\t\t\tp(\"Insert a new point on the left side of the filter editor to add a \\\"high-pass\\\" filter point, which additionally reduces the volume of lower frequencies, or insert a new point on the right side to add a \\\"low-pass\\\" filter point which reduces the volume of higher frequencies.\"),\n\t\t\t\t\tp(\"You can also enable a \\\"Note Filter\\\" as an effect. EQ and note filters are mostly the same, but have different purposes. EQ filters are for overall adjustments, whereas note filters are for dynamic control and can be moved with envelopes. Note filters also change how the distortion effect sounds.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"noteFilter\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Note Filter\"),\n\t\t\t\t\tp(\"Note filters are mostly the same as EQ filters, but have a different purpose. EQ filters are for overall adjustments, whereas note filters are for dynamic control and can be moved with envelopes. Note filters also change how the distortion effect sounds.\"),\n\t\t\t\t\tp(\"Filters are a way of emphasizing or diminishing different parts of a sound. Musical notes have a fundamental (base) frequency, but the sound of a musical note also has parts at higher frequencies and filters can adjust the volume of each of these parts based on their frequency.\"),\n\t\t\t\t\tp(\"Click in the filter editor to insert, delete, or drag a filter control point. The horizontal position of the point determines which frequencies it affects, and the vertical position determines how the volume is affected at that frequency.\"),\n\t\t\t\t\tp(\"Insert a new point on the left side of the filter editor to add a \\\"high-pass\\\" filter point, which additionally reduces the volume of lower frequencies, or insert a new point on the right side to add a \\\"low-pass\\\" filter point which reduces the volume of higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"fadeInOut\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Fade In/Out\"),\n\t\t\t\t\tp(\"This setting controls how long it takes for notes to reach full volume at the beginning or decay to silence at the end.\"),\n\t\t\t\t\tp(\"An instant fade-in sounds like instruments that are played by hitting or plucking, whereas slower fade-ins sound like instruments that are played by blowing air.\"),\n\t\t\t\t\tp(\"You can also make the fade-out start before the note ends to leave a gap before the next note starts, or after the note ends to allow the sound of the end of the note to overlap with the start of the next note.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"transition\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Transition\"),\n\t\t\t\t\tp(\"Usually, when one note ends at the same time another begins, the old note will fade out and the new note will fade in based on the fade in/out settings, but this setting can override that, connecting the end of one note to the beginning of the next.\"),\n\t\t\t\t\tp(\"The \\\"interrupt\\\" transition makes the wave suddenly change from the old note's frequency to the new note's frequency without any fading, but still restarts envelopes at the beginning of the new note. The \\\"continue\\\" transition is similar but it doesn't even restart envelopes, and can be used to make each of the notes in a chord start or stop at different times!\"),\n\t\t\t\t\tp(\"The \\\"slide\\\" transition makes the pitch shift quickly but not instantaneously from the old note's frequency to the new note's frequency, and softly restarts envelopes. The \\\"slide in pattern\\\" transition is the same except it doesn't connect the last note in a pattern to the first note in the next pattern.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chipWave\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Chip Wave\"),\n\t\t\t\t\tp(\"BeepBox comes with some sound waves based on classic electronic sound chips, as well as several unique waves. This is the basic source of the sound of the instrument, which is modified by the other instrument settings.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chipNoise\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Noise\"),\n\t\t\t\t\tp(\"BeepBox comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"supersawDynamism\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Supersaw Dynamism\"),\n\t\t\t\t\tp(\"A supersaw is a combination of many sawtooth waves, and this setting controls the contribution of extra sawtooth waves.\"),\n\t\t\t\t\tp(\"At the low end of the slider, only the first wave is contributing to the sound, which sounds like an ordinary static sawtooth wave. At the maximum setting, all of the waves are contributing equally and the resulting tone can randomly shift depending on how the waves line up with each other, similar to the \\\"unison\\\" and \\\"chorus\\\" settings.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"supersawSpread\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Supersaw Spread\"),\n\t\t\t\t\tp(\"A supersaw is a combination of many sawtooth waves, and this setting controls the distance between their frequencies. The dynamism setting must be used for the extra waves to have any effect.\"),\n\t\t\t\t\tp(\"At the low end of the spread slider, all of the voices have the same frequency but random phase, resulting in a different sound every time a note starts. In the middle, the waves all have slightly different frequencies that shift in and out of phase over time similar to the \\\"unison\\\" and \\\"chorus\\\" settings, creating a classic supersaw sound. At the extreme end, the frequencies are so far apart they sound dissonant.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"supersawShape\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Supersaw Shape\"),\n\t\t\t\t\tp(\"This supersaw instrument includes an option to change the shape of the waves from sawtooth waves to pulse waves. Use this setting to morph between the two shapes.\"),\n\t\t\t\t\tp(\"When a pulse wave shape is used, you can also control the pulse width with a separate setting.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"pulseWidth\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Pulse Wave Width\"),\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"unison\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Unison\"),\n\t\t\t\t\tp(\"This instrument can play two identical waves at different frequencies. When two waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\n\t\t\t\t\tp(\"The distance between two frequencies is called an \\\"interval\\\", and this setting controls how large it is. If the interval is too wide, then the waves may sound out-of-tune and \\\"dissonant\\\". However, if the interval is even larger, then the two frequencies can even be distinct pitches.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chords\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Chords\"),\n\t\t\t\t\tp(\"When multiple different notes occur at the same time, this is called a chord. Chords can be created in BeepBox's pattern editor by adding notes above or below another note.\"),\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"simultaneous\\\" which starts playing all of the pitches in a chord at the same instant. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\n\t\t\t\t\tp(\"Some BeepBox instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"vibrato\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Vibrato\"),\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"algorithm\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"FM Algorithm\"),\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency and volume.'),\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"feedbackType\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Feedback Type\"),\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"feedbackVolume\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Feedback Distortion\"),\n\t\t\t\t\tp(\"This setting controls the amount of feedback distortion based on the feedback type setting.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"operatorFrequency\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Operator Frequency\"),\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave, relative to the fundamental frequency of the note. The multiplier 1× is the same as the fundamental frequency, whereas 2x would be an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"operatorVolume\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Operator Volume\"),\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"spectrum\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Spectrum\"),\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds.\"),\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft fade in/out, it's also possible to make howling wind sounds or even musical wind instruments.\"),\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"harmonics\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Harmonics\"),\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"effects\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Effects\"),\n\t\t\t\t\tp(\"BeepBox has many different kinds of special effects you can add to instruments. You can turn on multiple effects at once, and they can be configured individually. Try them all out!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"drumsetEnvelope\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Drumset Envelope\"),\n\t\t\t\t\tp(\"This drumset comes with a low-pass filter, and this setting can dynamically change the low-pass filter frequency over time. Each row in the pattern editor can have a different envelope shape.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"drumsetSpectrum\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Drumset Spectrum\"),\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chorus\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Chorus\"),\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices. Drag the slider to control how much chorus is added.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"echoSustain\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Echo Volume\"),\n\t\t\t\t\tp(\"The echo effect repeats the instrument's sound after a delay. Each echo is a little bit quieter than the last, and this setting controls how much quieter.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"echoDelay\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Echo Delay\"),\n\t\t\t\t\tp(\"The echo effect repeats the instrument's sound after a delay, and this setting controls how long the delay is.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"pitchShift\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Pitch Shift\"),\n\t\t\t\t\tp(\"This setting makes instruments play higher or lower pitches than the ones displayed in the pattern editor. Be careful that you don't confuse yourself!\"),\n\t\t\t\t\tp(\"You can combine this with envelopes to bend pitch over time, or play multiple simultaneous instruments with different pitch shifts for interesting layered sounds.\"),\n\t\t\t\t\tp(\"The intervals created by this setting are in \\\"just intonation\\\" which means they stay in phase with the original pitch instead of shifting in and out of phase over time. If you want the shifting, add the detune effect!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"detune\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Detune\"),\n\t\t\t\t\tp(\"This setting slightly adjusts the frequency of notes played by the instrument. You can use a little bit to add a pleasing shifting sound similar to the \\\"unison\\\" feature when combined with other instruments. If you use too much, then the instrument may sound unpleasantly out-of-tune.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"distortion\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Distortion\"),\n\t\t\t\t\tp(\"This is the famous electric guitar effect! However, there are some things to be aware of.\"),\n\t\t\t\t\tp(\"First, most chords don't sound right when combined with heavy distortion. The only chords commonly used with distorted electric guitars are \\\"power chords\\\" which consist of a root note, a \\\"fifth\\\" note above that, and/or any octaves of those two notes.\"),\n\t\t\t\t\tp(\"Second, the distortion sound depends a lot on filtering. In particular, I recommend enabling the note filter effect, and adding both high-pass and low-pass points to the note filter. (Note filters are applied first, then distortion which transforms the sound based on that filtering, then the EQ filter is applied last.)\"),\n\t\t\t\t\tp(\"Finally, I recommend adjusting the fade-out setting to allow the end of each note to overlap a little bit with the beginning of the next, but not too much!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"bitcrusherQuantization\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Bitcrusher Quantization\"),\n\t\t\t\t\tp(\"This effect makes stuff sounds harsher, artificial, and \\\"low quality\\\", which is great if that's what you're going for!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"bitcrusherFreq\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Frequency Quantization\"),\n\t\t\t\t\tp(\"The bitcrusher effect comes with an additional frequency quantization effect! This is a fun one to play with, especially when combined with the note filter effect.\"),\n\t\t\t\t\tp(\"Every other notch on this slider is aligned with the currently selected key of the song, and the in-between notches are aligned with the tritones of the key.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"envelopes\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Envelopes\"),\n\t\t\t\t\tp(\"Envelopes are a way to dynamically adjust various other settings over time, usually based on how long the note lasts. Press the + button to add an envelope, then use the menus below to select which setting to control and the curve of the envelope. Try different combinations to see how they sound!\"),\n\t\t\t\t\tp(\"Most envelope curves restart from the beginning every time a new note plays. The \\\"note size\\\" option is based on the note width as drawn in the pattern editor.\"),\n\t\t\t\t\tp(\"Envelope curves move in the range from 0 to 1 (or vice versa), where 0 means as quiet as possible and 1 is the same as the corresponding position selected in the instrument settings above. If multiple envelopes are targetting the same setting, they are multiplied before applying to the setting.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tdefault: throw new Error(\"Unhandled TipPrompt type: \" + type);\n\t\t}\n\t\t\n\t\tthis.container = div({class: \"prompt\", style: \"width: 300px;\"},\n\t\t\tmessage,\n\t\t\tthis._closeButton,\n\t\t);\n\t\t\n\t\tsetTimeout(()=>this._closeButton.focus());\n\t\t\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class Change {\n\tprivate _noop: boolean = true;\n\t\n\tprotected _didSomething(): void {\n\t\tthis._noop = false;\n\t}\n\t\n\tpublic isNoop(): boolean {\n\t\treturn this._noop;\n\t}\n\t\n\tpublic commit(): void {}\n}\n\nexport class UndoableChange extends Change {\n\tprivate _reversed: boolean;\n\tprivate _doneForwards: boolean;\n\tconstructor(reversed: boolean) {\n\t\tsuper();\n\t\tthis._reversed = reversed;\n\t\tthis._doneForwards = !reversed;\n\t}\n\t\n\tpublic undo(): void {\n\t\tif (this._reversed) {\n\t\t\tthis._doForwards();\n\t\t\tthis._doneForwards = true;\n\t\t} else {\n\t\t\tthis._doBackwards();\n\t\t\tthis._doneForwards = false;\n\t\t}\n\t}\n\t\n\tpublic redo(): void {\n\t\tif (this._reversed) {\n\t\t\tthis._doBackwards();\n\t\t\tthis._doneForwards = false;\n\t\t} else {\n\t\t\tthis._doForwards();\n\t\t\tthis._doneForwards = true;\n\t\t}\n\t}\n\t\n\t// isDoneForwards() returns whether or not the Change was most recently \n\t// performed forwards or backwards. If the change created something, do not \n\t// delete it in the change destructor unless the Change was performed \n\t// backwards: \n\tprotected _isDoneForwards(): boolean {\n\t\treturn this._doneForwards;\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\n\t}\n}\n\nexport class ChangeGroup extends Change {\n\tconstructor() {\n\t\tsuper();\n\t}\n\t\n\tpublic append(change: Change): void {\n\t\tif (change.isNoop()) return;\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeSequence extends UndoableChange {\n\tprivate _changes: UndoableChange[];\n\tconstructor(changes?: UndoableChange[]) {\n\t\tsuper(false);\n\t\tif (changes == undefined) {\n\t\t\tthis._changes = [];\n\t\t} else {\n\t\t\tthis._changes = changes.concat();\n\t\t}\n\t}\n\t\n\tpublic append(change: UndoableChange): void {\n\t\tif (change.isNoop()) return;\n\t\tthis._changes[this._changes.length] = change;\n\t\tthis._didSomething();\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\n\t\t\tthis._changes[i].redo();\n\t\t}\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tfor (let i: number = this._changes.length-1; i >= 0 ; i--) {\n\t\t\tthis._changes[i].undo();\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Algorithm, Dictionary, FilterType, SustainType, InstrumentType, EffectType, AutomationTarget, Config, effectsIncludePanning, effectsIncludeDistortion} from \"../synth/SynthConfig\";\nimport {NotePin, Note, makeNotePin, Pattern, FilterSettings, FilterControlPoint, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, Synth} from \"../synth/synth\";\nimport {Preset, PresetCategory, EditorConfig} from \"./EditorConfig\";\nimport {Change, ChangeGroup, ChangeSequence, UndoableChange} from \"./Change\";\nimport {SongDocument} from \"./SongDocument\";\n\nexport function patternsContainSameInstruments(pattern1Instruments: number[], pattern2Instruments: number[]): boolean {\n\tconst pattern2Has1Instruments: boolean = pattern1Instruments.every(instrument => pattern2Instruments.indexOf(instrument) != -1);\n\tconst pattern1Has2Instruments: boolean = pattern2Instruments.every(instrument => pattern1Instruments.indexOf(instrument) != -1);\n\treturn pattern2Has1Instruments && pattern1Has2Instruments && pattern2Instruments.length == pattern1Instruments.length;\n}\n\nexport function discardInvalidPatternInstruments(instruments: number[], song: Song, channelIndex: number) {\n\tconst uniqueInstruments: Set<number> = new Set(instruments);\n\tinstruments.length = 0;\n\tinstruments.push(...uniqueInstruments);\n\tfor (let i: number = 0; i < instruments.length; i++) {\n\t\tif (instruments[i] >= song.channels[channelIndex].instruments.length) {\n\t\t\tinstruments.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n\tif (instruments.length > song.getMaxInstrumentsPerPattern(channelIndex)) {\n\t\tinstruments.length = song.getMaxInstrumentsPerPattern(channelIndex);\n\t}\n\tif (instruments.length <= 0) {\n\t\tinstruments[0] = 0;\n\t}\n}\n\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\n\tfor (const note of pattern.notes) {\n\t\tfor (const pitch of note.pitches) {\n\t\t\tfor (const pin of note.pins) {\n\t\t\t\tconst key: number = (pitch + pin.interval) % 12;\n\t\t\t\tif (!flags[key]) {\n\t\t\t\t\tflags[key] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number): number[] {\n\tconst newScaleFlags: ReadonlyArray<boolean> = Config.scales[newScaleValue].flags;\n\tconst oldScale: number[] = [];\n\tconst newScale: number[] = [];\n\tfor (let i: number = 0; i <  12; i++) {\n\t\tif (oldScaleFlags[i]) oldScale.push(i);\n\t\tif (newScaleFlags[i]) newScale.push(i);\n\t}\n\tconst largerToSmaller: boolean = oldScale.length > newScale.length;\n\tconst smallerScale: number[] = largerToSmaller ? newScale : oldScale;\n\tconst largerScale: number[] = largerToSmaller ? oldScale : newScale;\n\n\tconst roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\n\tlet bestScore: number = Number.MAX_SAFE_INTEGER;\n\tlet bestIndexMap: number[] = [];\n\tconst stack: number[][] = [[0]]; // Root always maps to root.\n\n\twhile (stack.length > 0) {\n\t\tconst indexMap: number[] = stack.pop()!;\n\n\t\tif (indexMap.length == smallerScale.length) {\n\t\t\t// Score this mapping.\n\t\t\tlet score: number = 0;\n\t\t\tfor (let i: number = 0; i < indexMap.length; i++) {\n\t\t\t\tscore += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\n\t\t\t\tif (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\n\t\t\t\t\t// Penalize changing roles.\n\t\t\t\t\tscore += 0.75;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bestScore > score) {\n\t\t\t\tbestScore = score;\n\t\t\t\tbestIndexMap = indexMap;\n\t\t\t}\n\t\t} else {\n\t\t\t// Recursively choose next indices for mapping.\n\t\t\tconst lowIndex: number = indexMap[indexMap.length - 1] + 1;\n\t\t\tconst highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\n\t\t\tfor (let i: number = lowIndex; i <= highIndex; i++) {\n\t\t\t\tstack.push(indexMap.concat(i));\n\t\t\t}\n\t\t}\n\t}\n\n\tconst sparsePitchMap: number[][] = [];\n\tfor (let i: number = 0; i < bestIndexMap.length; i++) {\n\t\tconst smallerScalePitch = smallerScale[i];\n\t\tconst largerScalePitch = largerScale[bestIndexMap[i]];\n\t\tsparsePitchMap[i] = largerToSmaller\n\t\t\t? [largerScalePitch, smallerScalePitch]\n\t\t\t: [smallerScalePitch, largerScalePitch];\n\t}\n\n\t// To make it easier to wrap around.\n\tsparsePitchMap.push([12, 12]);\n\tnewScale.push(12);\n\n\tlet sparseIndex: number = 0;\n\tconst fullPitchMap: number[] = [];\n\tfor (let i: number = 0; i <  12; i++) {\n\t\tconst oldLow: number = sparsePitchMap[sparseIndex][0];\n\t\tconst newLow: number = sparsePitchMap[sparseIndex][1];\n\t\tconst oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\n\t\tconst newHigh: number = sparsePitchMap[sparseIndex + 1][1];\n\t\tif (i == oldHigh - 1) sparseIndex++;\n\n\t\tconst transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\n\n\t\tlet nearestPitch: number = 0;\n\t\tlet nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\n\t\tfor (const newPitch of newScale) {\n\t\t\tlet distance: number = Math.abs(newPitch - transformedPitch);\n\t\t\tif (roles[newPitch] != roles[i]) {\n\t\t\t\t// Again, penalize changing roles.\n\t\t\t\tdistance += 0.1;\n\t\t\t}\n\t\t\tif (nearestPitchDistance > distance) {\n\t\t\t\tnearestPitchDistance = distance;\n\t\t\t\tnearestPitch = newPitch;\n\t\t\t}\n\t\t}\n\n\t\tfullPitchMap[i] = nearestPitch;\n\t}\n\t\n\treturn fullPitchMap;\n}\n\nfunction removeRedundantPins(pins: NotePin[]): void {\n\tfor (let i: number = 1; i < pins.length - 1; ) {\n\t\tconst prevPin: NotePin = pins[i-1];\n\t\tconst pin: NotePin = pins[i];\n\t\tconst nextPin: NotePin = pins[i+1];\n\t\tconst prevTimeSpan: number = pin.time - prevPin.time;\n\t\tconst nextTimeSpan: number = nextPin.time - pin.time;\n\t\tif ((pin.interval - prevPin.interval) * nextTimeSpan == (nextPin.interval - pin.interval) * prevTimeSpan &&\n\t\t\t(pin.size - prevPin.size) * nextTimeSpan == (nextPin.size - pin.size) * prevTimeSpan)\n\t\t{\n\t\t\tpins.splice(i, 1);\n\t\t} else {\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\n\t// Create a new note, and interpret the pitch bend and size events\n\t// to determine where we need to insert pins to control interval and volume.\n\tconst newNote: Note = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, false);\n\tnewNote.pins.length = 0;\n\tnewNote.pitches.length = 0;\n\tconst newNoteLength: number = noteEndPart - noteStartPart;\n\n\tfor (const pitch of oldNote.pitches) {\n\t\tnewNote.pitches.push(pitch);\n\t}\n\t\n\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\n\t\tconst pin: NotePin = oldNote.pins[pinIndex];\n\t\tconst newPinTime: number = pin.time + timeOffset;\n\t\tif (newPinTime < 0) {\n\t\t\tif (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\n\t\t\tconst nextPin: NotePin = oldNote.pins[pinIndex + 1];\n\t\t\tconst nextPinTime: number = nextPin.time + timeOffset;\n\t\t\tif (nextPinTime > 0) {\n\t\t\t\t// Insert an interpolated pin at the start of the new note.\n\t\t\t\tconst ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.size + ratio * (nextPin.size - pin.size))));\n\t\t\t}\n\t\t} else if (newPinTime <= newNoteLength) {\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.size));\n\t\t} else {\n\t\t\tif (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\n\t\t\tconst prevPin: NotePin = oldNote.pins[pinIndex - 1];\n\t\t\tconst prevPinTime: number = prevPin.time + timeOffset;\n\t\t\tif (prevPinTime < newNoteLength) {\n\t\t\t\t// Insert an interpolated pin at the end of the new note.\n\t\t\t\tconst ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.size + ratio * (pin.size - prevPin.size))));\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\n\tconst offsetInterval: number = newNote.pins[0].interval;\n\tfor (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\n\t\tnewNote.pitches[pitchIdx] += offsetInterval;\n\t}\n\tfor (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\n\t\tnewNote.pins[pinIdx].interval -= offsetInterval;\n\t}\n\t\n\tlet joinedWithPrevNote: boolean = false;\n\tif (newNote.start == 0) {\n\t\tnewNote.continuesLastPattern = (timeOffset < 0 || oldNote.continuesLastPattern);\n\t} else {\n\t\tnewNote.continuesLastPattern = false;\n\t\tif (newNotes.length > 0 && oldNote.continuesLastPattern) {\n\t\t\tconst prevNote: Note = newNotes[newNotes.length - 1];\n\t\t\tif (prevNote.end == newNote.start && Synth.adjacentNotesHaveMatchingPitches(prevNote, newNote)) {\n\t\t\t\tjoinedWithPrevNote = true;\n\t\t\t\tconst newIntervalOffset: number = prevNote.pins[prevNote.pins.length - 1].interval;\n\t\t\t\tconst newTimeOffset: number = prevNote.end - prevNote.start;\n\t\t\t\tfor (let pinIndex: number = 1; pinIndex < newNote.pins.length; pinIndex++) {\n\t\t\t\t\tconst tempPin: NotePin = newNote.pins[pinIndex];\n\t\t\t\t\tconst transformedPin: NotePin = makeNotePin(tempPin.interval + newIntervalOffset, tempPin.time + newTimeOffset, tempPin.size);\n\t\t\t\t\tprevNote.pins.push(transformedPin);\n\t\t\t\t\tprevNote.end = prevNote.start + transformedPin.time;\n\t\t\t\t}\n\t\t\t\tremoveRedundantPins(prevNote.pins);\n\t\t\t}\n\t\t}\n\t}\n\tif (!joinedWithPrevNote) {\n\t\tnewNotes.push(newNote);\n\t}\n}\n\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\n\tconstructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\n\t\tsuper();\n\t\t\n\t\tconst pitchChannels: Channel[] = [];\n\t\tconst noiseChannels: Channel[] = [];\n\t\t\n\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n\t\t\tconst oldChannel: Channel = doc.song.channels[channelIndex];\n\t\t\tconst newChannel: Channel = new Channel();\n\t\t\tif (channelIndex < doc.song.pitchChannelCount) {\n\t\t\t\tpitchChannels.push(newChannel);\n\t\t\t} else {\n\t\t\t\tnoiseChannels.push(newChannel);\n\t\t\t}\n\t\t\t\n\t\t\tnewChannel.muted = oldChannel.muted;\n\t\t\tnewChannel.octave = oldChannel.octave;\n\t\t\tfor (const instrument of oldChannel.instruments) {\n\t\t\t\tnewChannel.instruments.push(instrument);\n\t\t\t}\n\t\t\t\n\t\t\tconst oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\n\t\t\tconst newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\n\t\t\tlet currentBar: number = -1;\n\t\t\tlet pattern: Pattern | null = null;\n\t\t\t\n\t\t\tfor (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\n\t\t\t\tconst oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\n\t\t\t\tif (oldPattern != null) {\n\t\t\t\t\tconst oldBarStart: number = oldBar * oldPartsPerBar;\n\t\t\t\t\tfor (const oldNote of oldPattern.notes) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\n\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\n\t\t\t\t\t\tconst endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\n\t\t\t\t\t\t\tconst barStartPart: number = bar * newPartsPerBar;\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\n\t\t\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\n\t\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = 0;\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\n\t\t\t\t\t\t\t\t\tnewChannel.patterns.push(pattern);\n\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = newChannel.patterns.length;\n\t\t\t\t\t\t\t\t\tpattern.instruments.length = 0;\n\t\t\t\t\t\t\t\t\tpattern.instruments.push(...oldPattern.instruments);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tremoveDuplicatePatterns(pitchChannels);\n\t\tremoveDuplicatePatterns(noiseChannels);\n\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels));\n\t}\n}\n\nclass ChangePins extends UndoableChange {\n\tprotected _oldStart: number;\n\tprotected _newStart: number;\n\tprotected _oldEnd: number;\n\tprotected _newEnd: number;\n\tprotected _oldPins: NotePin[];\n\tprotected _newPins: NotePin[];\n\tprotected _oldPitches: number[];\n\tprotected _newPitches: number[];\n\tprotected _oldContinuesLastPattern: boolean;\n\tprotected _newContinuesLastPattern: boolean;\n\tconstructor(protected _doc: SongDocument | null, protected _note: Note) {\n\t\tsuper(false);\n\t\tthis._oldStart = this._note.start;\n\t\tthis._oldEnd   = this._note.end;\n\t\tthis._newStart = this._note.start;\n\t\tthis._newEnd   = this._note.end;\n\t\tthis._oldPins = this._note.pins;\n\t\tthis._newPins = [];\n\t\tthis._oldPitches = this._note.pitches;\n\t\tthis._newPitches = [];\n\t\tthis._oldContinuesLastPattern = this._note.continuesLastPattern;\n\t\tthis._newContinuesLastPattern = this._note.continuesLastPattern;\n\t}\n\t\n\tprotected _finishSetup(continuesLastPattern?: boolean): void {\n\t\tfor (let i: number = 0; i < this._newPins.length - 1; ) {\n\t\t\tif (this._newPins[i].time >= this._newPins[i+1].time) {\n\t\t\t\tthis._newPins.splice(i, 1);\n\t\t\t} else {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tremoveRedundantPins(this._newPins);\n\t\t\n\t\tconst firstInterval: number = this._newPins[0].interval;\n\t\tconst firstTime: number = this._newPins[0].time;\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\n\t\t\tthis._newPitches[i] = this._oldPitches[i] + firstInterval;\n\t\t}\n\t\tfor (let i: number = 0; i < this._newPins.length; i++) {\n\t\t\tthis._newPins[i].interval -= firstInterval;\n\t\t\tthis._newPins[i].time -= firstTime;\n\t\t}\n\t\tthis._newStart = this._oldStart + firstTime;\n\t\tthis._newEnd   = this._newStart + this._newPins[this._newPins.length-1].time;\n\t\t\n\t\tif (continuesLastPattern != undefined) {\n\t\t\tthis._newContinuesLastPattern = continuesLastPattern;\n\t\t}\n\t\tif (this._newStart != 0) {\n\t\t\tthis._newContinuesLastPattern = false;\n\t\t}\n\t\t\n\t\tthis._doForwards();\n\t\tthis._didSomething();\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tthis._note.pins = this._newPins;\n\t\tthis._note.pitches = this._newPitches;\n\t\tthis._note.start = this._newStart;\n\t\tthis._note.end = this._newEnd;\n\t\tthis._note.continuesLastPattern = this._newContinuesLastPattern;\n\t\tif (this._doc != null) this._doc.notifier.changed();\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tthis._note.pins = this._oldPins;\n\t\tthis._note.pitches = this._oldPitches;\n\t\tthis._note.start = this._oldStart;\n\t\tthis._note.end = this._oldEnd;\n\t\tthis._note.continuesLastPattern = this._oldContinuesLastPattern;\n\t\tif (this._doc != null) this._doc.notifier.changed();\n\t}\n}\n\nexport class ChangeCustomizeInstrument extends Change {\n\tconstructor(doc: SongDocument) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tif (instrument.preset != instrument.type) {\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangePreset extends Change {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.preset;\n\t\tif (oldValue != newValue) {\n\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(newValue);\n\t\t\tif (preset != null) {\n\t\t\t\tif (preset.customType != undefined) {\n\t\t\t\t\tinstrument.type = preset.customType;\n\t\t\t\t\tif (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].customInterval) {\n\t\t\t\t\t\tinstrument.chord = 0;\n\t\t\t\t\t}\n\t\t\t\t\tinstrument.clearInvalidEnvelopeTargets();\n\t\t\t\t} else if (preset.settings != undefined) {\n\t\t\t\t\tconst tempVolume: number = instrument.volume;\n\t\t\t\t\tconst tempPan: number = instrument.pan;\n\t\t\t\t\tconst usesPanning: boolean = effectsIncludePanning(instrument.effects);\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), 1);\n\t\t\t\t\t// Reset the volume and panning effect to be whatever they were before loading a preset. The presets shouldn't override these.\n\t\t\t\t\tinstrument.volume = tempVolume;\n\t\t\t\t\tinstrument.pan = tempPan;\n\t\t\t\t\tif (usesPanning && instrument.pan != Config.panCenter) {\n\t\t\t\t\t\tinstrument.effects = (instrument.effects | (1 << EffectType.panning));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tinstrument.preset = newValue;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeRandomGeneratedInstrument extends Change {\n\tconstructor(doc: SongDocument) {\n\t\tsuper();\n\t\t\n\t\tinterface ItemWeight<T> {\n\t\t\treadonly item: T;\n\t\t\treadonly weight: number;\n\t\t}\n\t\tfunction selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\n\t\t\tlet total: number = 0;\n\t\t\tfor (const entry of entries) {\n\t\t\t\ttotal += entry.weight;\n\t\t\t}\n\t\t\tlet random: number = Math.random() * total;\n\t\t\tfor (const entry of entries) {\n\t\t\t\trandom -= entry.weight;\n\t\t\t\tif (random <= 0.0) return entry.item;\n\t\t\t}\n\t\t\treturn entries[(Math.random() * entries.length)|0].item;\n\t\t}\n\t\tfunction selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\n\t\t\tconst entries: Array<ItemWeight<number>> = [];\n\t\t\tfor (let i: number = min; i <= max; i++) {\n\t\t\t\tentries.push({item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0)});\n\t\t\t}\n\t\t\treturn selectWeightedRandom(entries);\n\t\t}\n\t\t\n\t\tclass PotentialFilterPoint {\n\t\t\tconstructor(\n\t\t\t\tpublic readonly chance: number,\n\t\t\t\tpublic readonly type: FilterType,\n\t\t\t\tpublic readonly minFreq: number,\n\t\t\t\tpublic readonly maxFreq: number,\n\t\t\t\tpublic readonly centerHz: number,\n\t\t\t\tpublic readonly centerGain: number,\n\t\t\t) {};\n\t\t}\n\t\tfunction applyFilterPoints(filter: FilterSettings, potentialPoints: ReadonlyArray<PotentialFilterPoint>): void {\n\t\t\tfilter.reset();\n\t\t\tconst usedFreqs: number[] = [];\n\t\t\tfor (const potentialPoint of potentialPoints) {\n\t\t\t\tif (Math.random() > potentialPoint.chance) continue;\n\t\t\t\tconst point: FilterControlPoint = new FilterControlPoint();\n\t\t\t\tpoint.type = potentialPoint.type;\n\t\t\t\tpoint.freq = selectCurvedDistribution(potentialPoint.minFreq, potentialPoint.maxFreq, FilterControlPoint.getRoundedSettingValueFromHz(potentialPoint.centerHz), 1.0 / Config.filterFreqStep);\n\t\t\t\tpoint.gain = selectCurvedDistribution(0, Config.filterGainRange - 1, Config.filterGainCenter + potentialPoint.centerGain, 2.0 / Config.filterGainStep);\n\t\t\t\tif (point.type == FilterType.peak && point.gain == Config.filterGainCenter) continue; // skip pointless points. :P\n\t\t\t\tif (usedFreqs.includes(point.freq)) continue;\n\t\t\t\tusedFreqs.push(point.freq);\n\t\t\t\tfilter.controlPoints[filter.controlPointCount] = point;\n\t\t\t\tfilter.controlPointCount++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tinstrument.effects &= 1 << EffectType.panning; // disable all existing effects except panning.\n\t\tinstrument.envelopeCount = 0;\n\t\t\n\t\tconst midFreq: number = FilterControlPoint.getRoundedSettingValueFromHz(700.0);\n\t\tconst maxFreq: number = Config.filterFreqRange - 1;\n\t\tapplyFilterPoints(instrument.eqFilter, [\n\t\t\tnew PotentialFilterPoint(0.8, FilterType.lowPass,  midFreq, maxFreq,     4000.0, -1),\n\t\t\tnew PotentialFilterPoint(0.4, FilterType.highPass, 0,       midFreq - 1,  250.0, -1),\n\t\t\tnew PotentialFilterPoint(0.5, FilterType.peak,     0,       maxFreq,     2000.0,  0),\n\t\t\tnew PotentialFilterPoint(0.4, FilterType.peak,     0,       maxFreq,     1400.0,  0),\n\t\t\tnew PotentialFilterPoint(0.3, FilterType.peak,     0,       maxFreq,     1000.0,  0),\n\t\t\tnew PotentialFilterPoint(0.2, FilterType.peak,     0,       maxFreq,      500.0,  0),\n\t\t]);\n\t\t\n\t\tif (isNoise) {\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\n\t\t\t\t{item: InstrumentType.noise,    weight: 1},\n\t\t\t\t{item: InstrumentType.spectrum, weight: 3},\n\t\t\t]);\n\t\t\tinstrument.preset = instrument.type = type;\n\t\t\t\n\t\t\tinstrument.fadeIn = (Math.random() < 0.8) ? 0 : selectCurvedDistribution(0, Config.fadeInRange - 1, 0, 2);\n\t\t\tinstrument.fadeOut = selectCurvedDistribution(0, Config.fadeOutTicks.length - 1, Config.fadeOutNeutral, 2);\n\t\t\t\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.transition;\n\t\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\n\t\t\t\t\t{item: \"normal\"     , weight: 30},\n\t\t\t\t\t{item: \"interrupt\"  , weight: 1},\n\t\t\t\t\t{item: \"slide\"      , weight: 2},\n\t\t\t\t])].index;\n\t\t\t}\n\t\t\tif (Math.random() < 0.2) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.chord;\n\t\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\n\t\t\t\t\t{item: \"strum\"   , weight: 2},\n\t\t\t\t\t{item: \"arpeggio\", weight: 1},\n\t\t\t\t])].index;\n\t\t\t}\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.pitchShift = selectCurvedDistribution(0, Config.pitchShiftRange - 1, Config.pitchShiftCenter, 2);\n\t\t\t\tif (instrument.pitchShift != Config.pitchShiftCenter) {\n\t\t\t\t\tinstrument.effects |= 1 << EffectType.pitchShift;\n\t\t\t\t\tinstrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pitchShift\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n\t\t\t\t\t\t{item: \"flare 1\" , weight: 2},\n\t\t\t\t\t\t{item: \"flare 2\" , weight: 1},\n\t\t\t\t\t\t{item: \"flare 3\" , weight: 1},\n\t\t\t\t\t\t{item: \"twang 1\" , weight: 16},\n\t\t\t\t\t\t{item: \"twang 2\" , weight: 8},\n\t\t\t\t\t\t{item: \"twang 3\" , weight: 4},\n\t\t\t\t\t\t{item: \"tremolo1\", weight: 1},\n\t\t\t\t\t\t{item: \"tremolo2\", weight: 1},\n\t\t\t\t\t\t{item: \"tremolo3\", weight: 1},\n\t\t\t\t\t\t{item: \"decay 1\" , weight: 4},\n\t\t\t\t\t\t{item: \"decay 2\" , weight: 2},\n\t\t\t\t\t\t{item: \"decay 3\" , weight: 1},\n\t\t\t\t\t])].index);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.vibrato;\n\t\t\t\tinstrument.vibrato = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n\t\t\t\tinstrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\n\t\t\t\t\t{item: \"light\"  , weight: 2},\n\t\t\t\t\t{item: \"delayed\", weight: 2},\n\t\t\t\t\t{item: \"heavy\"  , weight: 1},\n\t\t\t\t\t{item: \"shaky\"  , weight: 2},\n\t\t\t\t])].index;\n\t\t\t}\n\t\t\tif (Math.random() < 0.8) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.noteFilter;\n\t\t\t\tapplyFilterPoints(instrument.noteFilter, [\n\t\t\t\t\tnew PotentialFilterPoint(1.0, FilterType.lowPass,  midFreq, maxFreq, 8000.0, -1),\n\t\t\t\t]);\n\t\t\t\tinstrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n\t\t\t\t\t{item: \"punch\"   , weight: 4},\n\t\t\t\t\t{item: \"flare 1\" , weight: 2},\n\t\t\t\t\t{item: \"flare 2\" , weight: 2},\n\t\t\t\t\t{item: \"flare 3\" , weight: 2},\n\t\t\t\t\t{item: \"twang 1\" , weight: 8},\n\t\t\t\t\t{item: \"twang 2\" , weight: 8},\n\t\t\t\t\t{item: \"twang 3\" , weight: 8},\n\t\t\t\t\t{item: \"swell 1\" , weight: 2},\n\t\t\t\t\t{item: \"swell 2\" , weight: 2},\n\t\t\t\t\t{item: \"swell 3\" , weight: 1},\n\t\t\t\t\t{item: \"tremolo1\", weight: 1},\n\t\t\t\t\t{item: \"tremolo2\", weight: 1},\n\t\t\t\t\t{item: \"tremolo3\", weight: 1},\n\t\t\t\t\t{item: \"tremolo4\", weight: 1},\n\t\t\t\t\t{item: \"tremolo5\", weight: 1},\n\t\t\t\t\t{item: \"tremolo6\", weight: 1},\n\t\t\t\t\t{item: \"decay 1\" , weight: 4},\n\t\t\t\t\t{item: \"decay 2\" , weight: 4},\n\t\t\t\t\t{item: \"decay 3\" , weight: 4},\n\t\t\t\t])].index);\n\t\t\t}\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.distortion;\n\t\t\t\tinstrument.distortion = selectCurvedDistribution(1, Config.distortionRange - 1, Config.distortionRange - 1, 2);\n\t\t\t}\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.bitcrusher;\n\t\t\t\tinstrument.bitcrusherFreq = selectCurvedDistribution(0, Config.bitcrusherFreqRange - 1, Config.bitcrusherFreqRange >> 1, 2);\n\t\t\t\tinstrument.bitcrusherQuantization = selectCurvedDistribution(0, Config.bitcrusherQuantizationRange - 1, Config.bitcrusherQuantizationRange >> 1, 2);\n\t\t\t}\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.chorus;\n\t\t\t\tinstrument.chorus = selectCurvedDistribution(1, Config.chorusRange - 1, Config.chorusRange - 1, 1);\n\t\t\t}\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.echoSustain = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n\t\t\t\tinstrument.echoDelay = selectCurvedDistribution(0, Config.echoDelayRange - 1, Config.echoDelayRange >> 1, 2);\n\t\t\t\tif (instrument.echoSustain != 0 || instrument.echoDelay != 0) {\n\t\t\t\t\tinstrument.effects |= 1 << EffectType.echo;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Math.random() < 0.5) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.reverb;\n\t\t\t\tinstrument.reverb = selectCurvedDistribution(1, Config.reverbRange - 1, 1, 1);\n\t\t\t}\n\t\t\t\n\t\t\tfunction normalize(harmonics: number[]): void {\n\t\t\t\tlet max: number = 0;\n\t\t\t\tfor (const value of harmonics) {\n\t\t\t\t\tif (value > max) max = value;\n\t\t\t\t}\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase InstrumentType.noise: {\n\t\t\t\t\tinstrument.chipNoise = (Math.random() * Config.chipNoises.length)|0;\n\t\t\t\t} break;\n\t\t\t\tcase InstrumentType.spectrum: {\n\t\t\t\t\tconst spectrumGenerators: Function[] = [\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tconst spectrum: number[] = [];\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\t\t\tspectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn spectrum;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tlet current: number = 1.0;\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\n\t\t\t\t\t\t\t\tspectrum[i] = current;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn spectrum;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tlet current: number = 1.0;\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\n\t\t\t\t\t\t\t\tspectrum[i] = current * Math.random();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn spectrum;\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t\tconst generator = spectrumGenerators[(Math.random() * spectrumGenerators.length)|0];\n\t\t\t\t\tconst spectrum: number[] = generator();\n\t\t\t\t\tnormalize(spectrum);\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\n\t\t\t\t\t}\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\n\t\t\t\t} break;\n\t\t\t\tdefault: throw new Error(\"Unhandled noise instrument type in random generator.\");\n\t\t\t}\n\t\t} else {\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\n\t\t\t\t{item: InstrumentType.chip,         weight: 4},\n\t\t\t\t{item: InstrumentType.pwm,          weight: 4},\n\t\t\t\t{item: InstrumentType.supersaw,     weight: 5},\n\t\t\t\t{item: InstrumentType.harmonics,    weight: 5},\n\t\t\t\t{item: InstrumentType.pickedString, weight: 5},\n\t\t\t\t{item: InstrumentType.spectrum,     weight: 1},\n\t\t\t\t{item: InstrumentType.fm,           weight: 5},\n\t\t\t]);\n\t\t\tinstrument.preset = instrument.type = type;\n\t\t\t\n\t\t\tinstrument.fadeIn = (Math.random() < 0.5) ? 0 : selectCurvedDistribution(0, Config.fadeInRange - 1, 0, 2);\n\t\t\tinstrument.fadeOut = selectCurvedDistribution(0, Config.fadeOutTicks.length - 1, Config.fadeOutNeutral, 2);\n\t\t\tif (type == InstrumentType.chip || type == InstrumentType.harmonics || type == InstrumentType.pickedString) {\n\t\t\t\tinstrument.unison = Config.unisons.dictionary[selectWeightedRandom([\n\t\t\t\t\t{item: \"none\"      , weight: 10},\n\t\t\t\t\t{item: \"shimmer\"   , weight: 5},\n\t\t\t\t\t{item: \"hum\"       , weight: 4},\n\t\t\t\t\t{item: \"honky tonk\", weight: 3},\n\t\t\t\t\t{item: \"dissonant\" , weight: 1},\n\t\t\t\t\t{item: \"fifth\"     , weight: 1},\n\t\t\t\t\t{item: \"octave\"    , weight: 2},\n\t\t\t\t\t{item: \"bowed\"     , weight: 2},\n\t\t\t\t\t{item: \"piano\"     , weight: 5},\n\t\t\t\t])].index;\n\t\t\t}\n\t\t\t\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.transition;\n\t\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\n\t\t\t\t\t{item: \"interrupt\"  , weight: 1},\n\t\t\t\t\t{item: \"slide\"      , weight: 2},\n\t\t\t\t])].index;\n\t\t\t}\n\t\t\tif (Math.random() < 0.2) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.chord;\n\t\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\n\t\t\t\t\t{item: \"strum\"   ,     weight: 2},\n\t\t\t\t\t{item: \"arpeggio\",     weight: 1},\n\t\t\t\t])].index;\n\t\t\t}\n\t\t\tif (Math.random() < 0.05) {\n\t\t\t\tinstrument.pitchShift = selectCurvedDistribution(0, Config.pitchShiftRange - 1, Config.pitchShiftCenter, 1);\n\t\t\t\tif (instrument.pitchShift != Config.pitchShiftCenter) {\n\t\t\t\t\tinstrument.effects |= 1 << EffectType.pitchShift;\n\t\t\t\t\tinstrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pitchShift\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n\t\t\t\t\t\t{item: \"flare 1\" , weight: 2},\n\t\t\t\t\t\t{item: \"flare 2\" , weight: 1},\n\t\t\t\t\t\t{item: \"flare 3\" , weight: 1},\n\t\t\t\t\t\t{item: \"twang 1\" , weight: 16},\n\t\t\t\t\t\t{item: \"twang 2\" , weight: 8},\n\t\t\t\t\t\t{item: \"twang 3\" , weight: 4},\n\t\t\t\t\t\t{item: \"decay 1\" , weight: 4},\n\t\t\t\t\t\t{item: \"decay 2\" , weight: 2},\n\t\t\t\t\t\t{item: \"decay 3\" , weight: 1},\n\t\t\t\t\t])].index);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Math.random() < 0.25) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.vibrato;\n\t\t\t\tinstrument.vibrato = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n\t\t\t\tinstrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\n\t\t\t\t\t{item: \"light\"  , weight: 2},\n\t\t\t\t\t{item: \"delayed\", weight: 2},\n\t\t\t\t\t{item: \"heavy\"  , weight: 1},\n\t\t\t\t\t{item: \"shaky\"  , weight: 2},\n\t\t\t\t])].index;\n\t\t\t}\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.distortion;\n\t\t\t\tinstrument.distortion = selectCurvedDistribution(1, Config.distortionRange - 1, Config.distortionRange - 1, 2);\n\t\t\t}\n\t\t\tif (effectsIncludeDistortion(instrument.effects) && Math.random() < 0.8) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.noteFilter;\n\t\t\t\tapplyFilterPoints(instrument.noteFilter, [\n\t\t\t\t\tnew PotentialFilterPoint(1.0, FilterType.lowPass,  midFreq, maxFreq,     2000.0, -1),\n\t\t\t\t\tnew PotentialFilterPoint(0.9, FilterType.highPass, 0,       midFreq - 1,  500.0, -1),\n\t\t\t\t\tnew PotentialFilterPoint(0.4, FilterType.peak,     0,       maxFreq,     1400.0,  0),\n\t\t\t\t]);\n\t\t\t} else if (Math.random() < 0.5) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.noteFilter;\n\t\t\t\tapplyFilterPoints(instrument.noteFilter, [\n\t\t\t\t\tnew PotentialFilterPoint(1.0, FilterType.lowPass,  midFreq, maxFreq, 8000.0, -1),\n\t\t\t\t]);\n\t\t\t\tinstrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n\t\t\t\t\t{item: \"punch\"   , weight: 6},\n\t\t\t\t\t{item: \"flare 1\" , weight: 2},\n\t\t\t\t\t{item: \"flare 2\" , weight: 4},\n\t\t\t\t\t{item: \"flare 3\" , weight: 2},\n\t\t\t\t\t{item: \"twang 1\" , weight: 2},\n\t\t\t\t\t{item: \"twang 2\" , weight: 4},\n\t\t\t\t\t{item: \"twang 3\" , weight: 4},\n\t\t\t\t\t{item: \"swell 1\" , weight: 4},\n\t\t\t\t\t{item: \"swell 2\" , weight: 2},\n\t\t\t\t\t{item: \"swell 3\" , weight: 1},\n\t\t\t\t\t{item: \"tremolo1\", weight: 1},\n\t\t\t\t\t{item: \"tremolo2\", weight: 1},\n\t\t\t\t\t{item: \"tremolo3\", weight: 1},\n\t\t\t\t\t{item: \"tremolo4\", weight: 1},\n\t\t\t\t\t{item: \"tremolo5\", weight: 1},\n\t\t\t\t\t{item: \"tremolo6\", weight: 1},\n\t\t\t\t\t{item: \"decay 1\" , weight: 1},\n\t\t\t\t\t{item: \"decay 2\" , weight: 2},\n\t\t\t\t\t{item: \"decay 3\" , weight: 2},\n\t\t\t\t])].index);\n\t\t\t}\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.bitcrusher;\n\t\t\t\tinstrument.bitcrusherFreq = selectCurvedDistribution(0, Config.bitcrusherFreqRange - 1, 0, 2);\n\t\t\t\tinstrument.bitcrusherQuantization = selectCurvedDistribution(0, Config.bitcrusherQuantizationRange - 1, Config.bitcrusherQuantizationRange >> 1, 2);\n\t\t\t}\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.chorus;\n\t\t\t\tinstrument.chorus = selectCurvedDistribution(1, Config.chorusRange - 1, Config.chorusRange - 1, 1);\n\t\t\t}\n\t\t\tif (Math.random() < 0.1) {\n\t\t\t\tinstrument.echoSustain = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n\t\t\t\tinstrument.echoDelay = selectCurvedDistribution(0, Config.echoDelayRange - 1, Config.echoDelayRange >> 1, 2);\n\t\t\t\tif (instrument.echoSustain != 0 || instrument.echoDelay != 0) {\n\t\t\t\t\tinstrument.effects |= 1 << EffectType.echo;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Math.random() < 0.5) {\n\t\t\t\tinstrument.effects |= 1 << EffectType.reverb;\n\t\t\t\tinstrument.reverb = selectCurvedDistribution(1, Config.reverbRange - 1, 1, 1);\n\t\t\t}\n\t\t\t\n\t\t\tfunction normalize(harmonics: number[]): void {\n\t\t\t\tlet max: number = 0;\n\t\t\t\tfor (const value of harmonics) {\n\t\t\t\t\tif (value > max) max = value;\n\t\t\t\t}\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase InstrumentType.chip: {\n\t\t\t\t\tinstrument.chipWave = (Math.random() * Config.chipWaves.length)|0;\n\t\t\t\t} break;\n\t\t\t\tcase InstrumentType.pwm:\n\t\t\t\tcase InstrumentType.supersaw: {\n\t\t\t\t\tif (type == InstrumentType.supersaw) {\n\t\t\t\t\t\tinstrument.supersawDynamism = selectCurvedDistribution(0, Config.supersawDynamismMax, Config.supersawDynamismMax, 2);\n\t\t\t\t\t\tinstrument.supersawSpread = selectCurvedDistribution(0, Config.supersawSpreadMax, Math.ceil(Config.supersawSpreadMax / 3), 4);\n\t\t\t\t\t\tinstrument.supersawShape = selectCurvedDistribution(0, Config.supersawShapeMax, 0, 4);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tinstrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\n\t\t\t\t\t\n\t\t\t\t\tif (Math.random() < 0.6) {\n\t\t\t\t\t\tinstrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n\t\t\t\t\t\t\t{item: \"punch\"   , weight: 6},\n\t\t\t\t\t\t\t{item: \"flare 1\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"flare 2\" , weight: 4},\n\t\t\t\t\t\t\t{item: \"flare 3\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"twang 1\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"twang 2\" , weight: 4},\n\t\t\t\t\t\t\t{item: \"twang 3\" , weight: 4},\n\t\t\t\t\t\t\t{item: \"swell 1\" , weight: 4},\n\t\t\t\t\t\t\t{item: \"swell 2\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"swell 3\" , weight: 1},\n\t\t\t\t\t\t\t{item: \"tremolo1\", weight: 1},\n\t\t\t\t\t\t\t{item: \"tremolo2\", weight: 1},\n\t\t\t\t\t\t\t{item: \"tremolo3\", weight: 1},\n\t\t\t\t\t\t\t{item: \"tremolo4\", weight: 1},\n\t\t\t\t\t\t\t{item: \"tremolo5\", weight: 1},\n\t\t\t\t\t\t\t{item: \"tremolo6\", weight: 1},\n\t\t\t\t\t\t\t{item: \"decay 1\" , weight: 1},\n\t\t\t\t\t\t\t{item: \"decay 2\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"decay 3\" , weight: 2},\n\t\t\t\t\t\t])].index);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase InstrumentType.pickedString:\n\t\t\t\tcase InstrumentType.harmonics: {\n\t\t\t\t\tif (type == InstrumentType.pickedString) {\n\t\t\t\t\t\tinstrument.stringSustain = (Math.random() * Config.stringSustainRange)|0;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst harmonicGenerators: Function[] = [\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tconst harmonics: number[] = [];\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\t\t\t\t\tharmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tharmonics[(Math.random() * 8)|0] = Math.pow(Math.random(), 0.25);\n\t\t\t\t\t\t\treturn harmonics;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tlet current: number = 1.0;\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\n\t\t\t\t\t\t\t\tharmonics[i] = current;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn harmonics;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tlet current: number = 1.0;\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\n\t\t\t\t\t\t\t\tharmonics[i] = current * Math.random();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn harmonics;\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t\tconst generator = harmonicGenerators[(Math.random() * harmonicGenerators.length)|0];\n\t\t\t\t\tconst harmonics: number[] = generator();\n\t\t\t\t\tnormalize(harmonics);\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\n\t\t\t\t\t}\n\t\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\n\t\t\t\t} break;\n\t\t\t\tcase InstrumentType.spectrum: {\n\t\t\t\t\tconst spectrum: number[] = [];\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\tconst isHarmonic: boolean = i==0 || i==7 || i==11 || i==14 || i==16 || i==18 || i==21;\n\t\t\t\t\t\tif (isHarmonic) {\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 0.25);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 3) * 0.5;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnormalize(spectrum);\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\n\t\t\t\t\t}\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\n\t\t\t\t} break;\n\t\t\t\tcase InstrumentType.fm: {\n\t\t\t\t\tinstrument.algorithm = (Math.random() * Config.algorithms.length)|0;\n\t\t\t\t\tinstrument.feedbackType = (Math.random() * Config.feedbacks.length)|0;\n\t\t\t\t\tconst algorithm: Algorithm = Config.algorithms[instrument.algorithm];\n\t\t\t\t\tfor (let i: number = 0; i < algorithm.carrierCount; i++) {\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(0, Config.operatorFrequencies.length - 1, 0, 3);\n\t\t\t\t\t\tinstrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i: number = algorithm.carrierCount; i < Config.operatorCount; i++) {\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(3, Config.operatorFrequencies.length - 1, 0, 3);\n\t\t\t\t\t\tinstrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax)|0;\n\t\t\t\t\t\tif (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\n\t\t\t\t\t\t\tinstrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, Config.envelopes.dictionary[selectWeightedRandom([\n\t\t\t\t\t\t\t\t{item: \"punch\"   , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"flare 1\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"flare 2\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"flare 3\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"twang 1\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"twang 2\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"twang 3\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"swell 1\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"swell 2\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"swell 3\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"tremolo1\", weight: 1},\n\t\t\t\t\t\t\t\t{item: \"tremolo2\", weight: 1},\n\t\t\t\t\t\t\t\t{item: \"tremolo3\", weight: 1},\n\t\t\t\t\t\t\t\t{item: \"tremolo4\", weight: 1},\n\t\t\t\t\t\t\t\t{item: \"tremolo5\", weight: 1},\n\t\t\t\t\t\t\t\t{item: \"tremolo6\", weight: 1},\n\t\t\t\t\t\t\t\t{item: \"decay 1\" , weight: 1},\n\t\t\t\t\t\t\t\t{item: \"decay 2\" , weight: 1},\n\t\t\t\t\t\t\t\t{item: \"decay 3\" , weight: 1},\n\t\t\t\t\t\t\t])].index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.05) {\n\t\t\t\t\t\t\tinstrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorFrequency\"].index, i, Config.envelopes.dictionary[selectWeightedRandom([\n\t\t\t\t\t\t\t\t{item: \"punch\"   , weight: 4},\n\t\t\t\t\t\t\t\t{item: \"flare 1\" , weight: 4},\n\t\t\t\t\t\t\t\t{item: \"flare 2\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"flare 3\" , weight: 1},\n\t\t\t\t\t\t\t\t{item: \"twang 1\" , weight: 16},\n\t\t\t\t\t\t\t\t{item: \"twang 2\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"twang 3\" , weight: 1},\n\t\t\t\t\t\t\t\t{item: \"swell 1\" , weight: 4},\n\t\t\t\t\t\t\t\t{item: \"swell 2\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"swell 3\" , weight: 1},\n\t\t\t\t\t\t\t\t{item: \"decay 1\" , weight: 2},\n\t\t\t\t\t\t\t\t{item: \"decay 2\" , weight: 1},\n\t\t\t\t\t\t\t\t{item: \"decay 3\" , weight: 1},\n\t\t\t\t\t\t\t])].index);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tinstrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax)|0;\n\t\t\t\t\tif (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\n\t\t\t\t\t\tinstrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n\t\t\t\t\t\t\t{item: \"punch\"   , weight: 2},\n\t\t\t\t\t\t\t{item: \"flare 1\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"flare 2\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"flare 3\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"twang 1\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"twang 2\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"twang 3\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"swell 1\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"swell 2\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"swell 3\" , weight: 2},\n\t\t\t\t\t\t\t{item: \"tremolo1\", weight: 1},\n\t\t\t\t\t\t\t{item: \"tremolo2\", weight: 1},\n\t\t\t\t\t\t\t{item: \"tremolo3\", weight: 1},\n\t\t\t\t\t\t\t{item: \"tremolo4\", weight: 1},\n\t\t\t\t\t\t\t{item: \"tremolo5\", weight: 1},\n\t\t\t\t\t\t\t{item: \"tremolo6\", weight: 1},\n\t\t\t\t\t\t\t{item: \"decay 1\" , weight: 1},\n\t\t\t\t\t\t\t{item: \"decay 2\" , weight: 1},\n\t\t\t\t\t\t\t{item: \"decay 3\" , weight: 1},\n\t\t\t\t\t\t])].index);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tdefault: throw new Error(\"Unhandled pitched instrument type in random generator.\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeTransition extends Change {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.transition;\n\t\tif (oldValue != newValue) {\n\t\t\tthis._didSomething();\n\t\t\tinstrument.transition = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t}\n\t}\n}\n\nexport class ChangeToggleEffects extends Change {\n\tconstructor(doc: SongDocument, toggleFlag: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.effects;\n\t\tconst wasSelected: boolean = ((oldValue & (1 << toggleFlag)) != 0);\n\t\tconst newValue: number = wasSelected ? (oldValue & (~(1 << toggleFlag))) : (oldValue | (1 << toggleFlag));\n\t\tinstrument.effects = newValue;\n\t\t// As a special case, toggling the panning effect doesn't remove the preset.\n\t\tif (toggleFlag != EffectType.panning) instrument.preset = instrument.type;\n\t\tif (wasSelected) instrument.clearInvalidEnvelopeTargets();\n\t\tthis._didSomething();\n\t\tdoc.notifier.changed();\n\t}\n}\n\nexport class ChangePatternNumbers extends Change {\n\tconstructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\n\t\tsuper();\n\t\tif (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\n\t\t\n\t\tfor (let bar: number = startBar; bar < startBar + width; bar++) {\n\t\t\tfor (let channelIndex: number = startChannel; channelIndex < startChannel + height; channelIndex++) {\n\t\t\t\tif (doc.song.channels[channelIndex].bars[bar] != value) {\n\t\t\t\t\tdoc.song.channels[channelIndex].bars[bar] = value;\n\t\t\t\t\tthis._didSomething();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tdoc.notifier.changed();\n\t}\n}\n\nexport class ChangeBarCount extends Change {\n\tconstructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\n\t\tsuper();\n\t\tif (doc.song.barCount != newValue) {\n\t\t\tfor (const channel of doc.song.channels) {\n\t\t\t\tif (atBeginning) {\n\t\t\t\t\twhile (channel.bars.length < newValue) {\n\t\t\t\t\t\tchannel.bars.unshift(0);\n\t\t\t\t\t}\n\t\t\t\t\tif (doc.song.barCount > newValue) {\n\t\t\t\t\t\tchannel.bars.splice(0, doc.song.barCount - newValue);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twhile (channel.bars.length < newValue) {\n\t\t\t\t\t\tchannel.bars.push(0);\n\t\t\t\t\t}\n\t\t\t\t\tchannel.bars.length = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (atBeginning) {\n\t\t\t\tconst diff: number = newValue - doc.song.barCount;\n\t\t\t\tdoc.bar = Math.max(0, doc.bar + diff);\n\t\t\t\tif (diff < 0 || doc.barScrollPos > 0) {\n\t\t\t\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\n\t\t\t\t}\n\t\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\n\t\t\t}\n\t\t\tdoc.bar = Math.min(doc.bar, newValue - 1);\n\t\t\tdoc.song.loopLength = Math.min(newValue, doc.song.loopLength);\n\t\t\tdoc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\n\t\t\tdoc.song.barCount = newValue;\n\t\t\tdoc.notifier.changed();\n\t\t\t\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeInsertBars extends Change {\n\tconstructor(doc: SongDocument, start: number, count: number) {\n\t\tsuper();\n\t\t\n\t\tconst newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\n\t\tcount = newLength - doc.song.barCount;\n\t\tif (count == 0) return;\n\t\t\n\t\tfor (const channel of doc.song.channels) {\n\t\t\twhile (channel.bars.length < newLength) {\n\t\t\t\tchannel.bars.splice(start, 0, 0);\n\t\t\t}\n\t\t}\n\t\tdoc.song.barCount = newLength;\n\t\t\n\t\tdoc.bar += count;\n\t\tdoc.barScrollPos += count;\n\t\tif (doc.song.loopStart >= start) {\n\t\t\tdoc.song.loopStart += count;\n\t\t} else if (doc.song.loopStart + doc.song.loopLength >= start) {\n\t\t\tdoc.song.loopLength += count;\n\t\t}\n\t\t\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeDeleteBars extends Change {\n\tconstructor(doc: SongDocument, start: number, count: number) {\n\t\tsuper();\n\t\t\n\t\tfor (const channel of doc.song.channels) {\n\t\t\tchannel.bars.splice(start, count);\n\t\t\tif (channel.bars.length == 0) channel.bars.push(0);\n\t\t}\n\t\tdoc.song.barCount = Math.max(1, doc.song.barCount - count);\n\t\t\n\t\tdoc.bar = Math.max(0, doc.bar - count);\n\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos - count);\n\t\tif (doc.song.loopStart >= start) {\n\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart - count);\n\t\t} else if (doc.song.loopStart + doc.song.loopLength > start) {\n\t\t\tdoc.song.loopLength -= count;\n\t\t}\n\t\tdoc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\n\t\t\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeChannelOrder extends Change {\n\tconstructor(doc: SongDocument, selectionMin: number, selectionMax: number, offset: number) {\n\t\tsuper();\n\t\tdoc.song.channels.splice(selectionMin + offset, 0, ...doc.song.channels.splice(selectionMin, selectionMax - selectionMin + 1));\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeChannelCount extends Change {\n\tconstructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number) {\n\t\tsuper();\n\t\tif (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount) {\n\t\t\tconst newChannels: Channel[] = [];\n\t\t\t\n\t\t\tfunction changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean): void {\n\t\t\t\tfor (let i: number = 0; i < newCount; i++) {\n\t\t\t\t\tconst channelIndex = i + newStart;\n\t\t\t\t\tconst oldChannel = i + oldStart;\n\t\t\t\t\tif (i < oldCount) {\n\t\t\t\t\t\tnewChannels[channelIndex] = doc.song.channels[oldChannel]\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewChannels[channelIndex] = new Channel();\n\t\t\t\t\t\tnewChannels[channelIndex].octave = octave;\n\t\t\t\t\t\tfor (let j: number = 0; j < Config.instrumentCountMin; j++) {\n\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoise);\n\t\t\t\t\t\t\tconst presetValue: number = pickRandomPresetValue(isNoise);\n\t\t\t\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoise);\n\t\t\t\t\t\t\tinstrument.preset = presetValue;\n\t\t\t\t\t\t\tinstrument.volume = 1;\n\t\t\t\t\t\t\tnewChannels[channelIndex].instruments[j] = instrument;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\n\t\t\t\t\t\t\tnewChannels[channelIndex].patterns[j] = new Pattern();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.barCount; j++) {\n\t\t\t\t\t\t\tnewChannels[channelIndex].bars[j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tchangeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 3, false);\n\t\t\tchangeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true);\n\t\t\t\n\t\t\tdoc.song.pitchChannelCount = newPitchChannelCount;\n\t\t\tdoc.song.noiseChannelCount = newNoiseChannelCount;\n\t\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n\t\t\t\tdoc.song.channels[channelIndex] = newChannels[channelIndex];\n\t\t\t}\n\t\t\tdoc.song.channels.length = doc.song.getChannelCount();\n\t\t\t\n\t\t\tdoc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount - 1);\n\t\t\tdoc.notifier.changed();\n\t\t\t\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeAddChannel extends ChangeGroup {\n\tconstructor(doc: SongDocument, index: number, isNoise: boolean) {\n\t\tsuper();\n\t\tconst newPitchChannelCount: number = doc.song.pitchChannelCount + (isNoise ? 0 : 1);\n\t\tconst newNoiseChannelCount: number = doc.song.noiseChannelCount + (isNoise ? 1 : 0);\n\t\tif (newPitchChannelCount <= Config.pitchChannelCountMax && newNoiseChannelCount <= Config.noiseChannelCountMax) {\n\t\t\tconst addedChannelIndex: number = isNoise ? doc.song.pitchChannelCount + doc.song.noiseChannelCount : doc.song.pitchChannelCount;\n\t\t\tthis.append(new ChangeChannelCount(doc, newPitchChannelCount, newNoiseChannelCount));\n\t\t\tthis.append(new ChangeChannelOrder(doc, index, addedChannelIndex - 1, 1));\n\t\t}\n\t}\n}\n\nexport class ChangeRemoveChannel extends ChangeGroup {\n\tconstructor(doc: SongDocument, minIndex: number, maxIndex: number) {\n\t\tsuper();\n\t\t\n\t\twhile (maxIndex >= minIndex) {\n\t\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(maxIndex);\n\t\t\tdoc.song.channels.splice(maxIndex, 1);\n\t\t\tif (isNoise) {\n\t\t\t\tdoc.song.noiseChannelCount--;\n\t\t\t} else {\n\t\t\t\tdoc.song.pitchChannelCount--;\n\t\t\t}\n\t\t\tmaxIndex--;\n\t\t}\n\t\t\n\t\tif (doc.song.pitchChannelCount < Config.pitchChannelCountMin) {\n\t\t\tthis.append(new ChangeChannelCount(doc, Config.pitchChannelCountMin, doc.song.noiseChannelCount));\n\t\t}\n\t\t\n\t\tthis.append(new ChangeChannelBar(doc, Math.max(0, minIndex - 1), doc.bar));\n\t\t\n\t\tthis._didSomething();\n\t\tdoc.notifier.changed();\n\t}\n}\n\nexport class ChangeChannelBar extends Change {\n\tconstructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\n\t\tsuper();\n\t\tconst oldChannel: number = doc.channel;\n\t\tconst oldBar: number = doc.bar;\n\t\tdoc.channel = newChannel;\n\t\tdoc.bar = newBar;\n\t\tif (!silently) {\n\t\t\tdoc.selection.scrollToSelectedPattern();\n\t\t}\n\t\tdoc.notifier.changed();\n\t\tif (oldChannel != newChannel || oldBar != newBar) {\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeUnison extends Change {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.unison;\n\t\tif (oldValue != newValue) {\n\t\t\tthis._didSomething();\n\t\t\tinstrument.unison = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t}\n\t}\n}\n\nexport class ChangeChord extends Change {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.chord;\n\t\tif (oldValue != newValue) {\n\t\t\tthis._didSomething();\n\t\t\tinstrument.chord = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t}\n\t}\n}\n\nexport class ChangeVibrato extends Change {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.vibrato;\n\t\tif (oldValue != newValue) {\n\t\t\tinstrument.vibrato = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeSpectrum extends Change {\n\tconstructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\n\t\tsuper();\n\t\tspectrumWave.markCustomWaveDirty();\n\t\tinstrument.preset = instrument.type;\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeHarmonics extends Change {\n\tconstructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\n\t\tsuper();\n\t\tharmonicsWave.markCustomWaveDirty();\n\t\tinstrument.preset = instrument.type;\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeDrumsetEnvelope extends Change {\n\tconstructor(doc: SongDocument, drumIndex: number, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.drumsetEnvelopes[drumIndex];\n\t\tif (oldValue != newValue) {\n\t\t\tinstrument.drumsetEnvelopes[drumIndex] = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nclass ChangeInstrumentSlider extends Change {\n\tprotected _instrument: Instrument;\n\tconstructor(private _doc: SongDocument) {\n\t\tsuper();\n\t\tthis._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t}\n\t\n\tpublic commit(): void {\n\t\tif (!this.isNoop()) {\n\t\t\tthis._instrument.preset = this._instrument.type;\n\t\t\tthis._doc.notifier.changed();\n\t\t}\n\t}\n}\n\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.pulseWidth = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeSupersawDynamism extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.supersawDynamism = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\nexport class ChangeSupersawSpread extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.supersawSpread = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\nexport class ChangeSupersawShape extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.supersawShape = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangePitchShift extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.pitchShift = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeDetune extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.detune = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeDistortion extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.distortion = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeBitcrusherFreq extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.bitcrusherFreq = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeBitcrusherQuantization extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.bitcrusherQuantization = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeStringSustain extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.stringSustain = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeStringSustainType extends Change {\n\tconstructor(doc: SongDocument, newValue: SustainType) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: SustainType = instrument.stringSustainType;\n\t\tif (oldValue != newValue) {\n\t\t\tinstrument.stringSustainType = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeFilterAddPoint extends UndoableChange {\n\tprivate _doc: SongDocument;\n\tprivate _instrument: Instrument;\n\tprivate _instrumentPrevPreset: number;\n\tprivate _instrumentNextPreset: number;\n\tprivate _filterSettings: FilterSettings;\n\tprivate _point: FilterControlPoint;\n\tprivate _index: number;\n\tprivate _envelopeTargetsAdd: number[] = [];\n\tprivate _envelopeIndicesAdd: number[] = [];\n\tprivate _envelopeTargetsRemove: number[] = [];\n\tprivate _envelopeIndicesRemove: number[] = [];\n\tconstructor(doc: SongDocument, filterSettings: FilterSettings, point: FilterControlPoint, index: number, isNoteFilter: boolean, deletion: boolean = false) {\n\t\tsuper(deletion);\n\t\tthis._doc = doc;\n\t\tthis._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tthis._instrumentNextPreset = deletion ? this._instrument.preset : this._instrument.type;\n\t\tthis._instrumentPrevPreset = deletion ? this._instrument.type : this._instrument.preset;\n\t\tthis._filterSettings = filterSettings;\n\t\tthis._point = point;\n\t\tthis._index = index;\n\t\t\n\t\tfor (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\n\t\t\tlet target: number = this._instrument.envelopes[envelopeIndex].target;\n\t\t\tlet targetIndex: number = this._instrument.envelopes[envelopeIndex].index;\n\t\t\tthis._envelopeTargetsAdd.push(target);\n\t\t\tthis._envelopeIndicesAdd.push(targetIndex);\n\t\t\tif (deletion) {\n\t\t\t\t// When deleting a filter control point, find all envelopes that targeted that\n\t\t\t\t// point and clear them, and all envelopes that targeted later points and\n\t\t\t\t// decrement those to keep them in sync with the new list of points.\n\t\t\t\tconst automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\n\t\t\t\tif (automationTarget.isFilter && (automationTarget.effect == EffectType.noteFilter) == isNoteFilter) {\n\t\t\t\t\tif (automationTarget.maxCount == Config.filterMaxPoints) {\n\t\t\t\t\t\tif (targetIndex == index) {\n\t\t\t\t\t\t\ttarget = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n\t\t\t\t\t\t\ttargetIndex = 0;\n\t\t\t\t\t\t} else if (targetIndex > index) {\n\t\t\t\t\t\t\ttargetIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (filterSettings.controlPointCount <= 1) {\n\t\t\t\t\t\t\ttarget = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n\t\t\t\t\t\t\ttargetIndex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._envelopeTargetsRemove.push(target);\n\t\t\tthis._envelopeIndicesRemove.push(targetIndex);\n\t\t}\n\t\t\n\t\tthis._didSomething();\n\t\tthis.redo();\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tthis._filterSettings.controlPoints.splice(this._index, 0, this._point);\n\t\tthis._filterSettings.controlPointCount++;\n\t\tthis._filterSettings.controlPoints.length = this._filterSettings.controlPointCount;\n\t\tthis._instrument.preset = this._instrumentNextPreset;\n\t\tfor (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\n\t\t\tthis._instrument.envelopes[envelopeIndex].target = this._envelopeTargetsAdd[envelopeIndex];\n\t\t\tthis._instrument.envelopes[envelopeIndex].index  = this._envelopeIndicesAdd[envelopeIndex];\n\t\t}\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tthis._filterSettings.controlPoints.splice(this._index, 1);\n\t\tthis._filterSettings.controlPointCount--;\n\t\tthis._filterSettings.controlPoints.length = this._filterSettings.controlPointCount;\n\t\tthis._instrument.preset = this._instrumentPrevPreset;\n\t\tfor (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\n\t\t\tthis._instrument.envelopes[envelopeIndex].target = this._envelopeTargetsRemove[envelopeIndex];\n\t\t\tthis._instrument.envelopes[envelopeIndex].index  = this._envelopeIndicesRemove[envelopeIndex];\n\t\t}\n\t\tthis._doc.notifier.changed();\n\t}\n}\n\nexport class ChangeFilterMovePoint extends UndoableChange {\n\tprivate _doc: SongDocument;\n\tprivate _instrument: Instrument;\n\tprivate _instrumentPrevPreset: number;\n\tprivate _instrumentNextPreset: number;\n\tprivate _point: FilterControlPoint;\n\tprivate _oldFreq: number;\n\tprivate _newFreq: number;\n\tprivate _oldGain: number;\n\tprivate _newGain: number;\n\tconstructor(doc: SongDocument, point: FilterControlPoint, oldFreq: number, newFreq: number, oldGain: number, newGain: number) {\n\t\tsuper(false);\n\t\tthis._doc = doc;\n\t\tthis._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tthis._instrumentNextPreset = this._instrument.type;\n\t\tthis._instrumentPrevPreset = this._instrument.preset;\n\t\tthis._point = point;\n\t\tthis._oldFreq = oldFreq;\n\t\tthis._newFreq = newFreq;\n\t\tthis._oldGain = oldGain;\n\t\tthis._newGain = newGain;\n\t\tthis._didSomething();\n\t\tthis.redo();\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tthis._point.freq = this._newFreq;\n\t\tthis._point.gain = this._newGain;\n\t\tthis._instrument.preset = this._instrumentNextPreset;\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tthis._point.freq = this._oldFreq;\n\t\tthis._point.gain = this._oldGain;\n\t\tthis._instrument.preset = this._instrumentPrevPreset;\n\t\tthis._doc.notifier.changed();\n\t}\n}\n\nexport class ChangeFadeInOut extends UndoableChange {\n\tprivate _doc: SongDocument;\n\tprivate _instrument: Instrument;\n\tprivate _instrumentPrevPreset: number;\n\tprivate _instrumentNextPreset: number;\n\tprivate _oldFadeIn: number;\n\tprivate _oldFadeOut: number;\n\tprivate _newFadeIn: number;\n\tprivate _newFadeOut: number;\n\tconstructor(doc: SongDocument, fadeIn: number, fadeOut: number) {\n\t\tsuper(false);\n\t\tthis._doc = doc;\n\t\tthis._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tthis._instrumentNextPreset = this._instrument.type;\n\t\tthis._instrumentPrevPreset = this._instrument.preset;\n\t\tthis._oldFadeIn = this._instrument.fadeIn;\n\t\tthis._oldFadeOut = this._instrument.fadeOut;\n\t\tthis._newFadeIn = fadeIn;\n\t\tthis._newFadeOut = fadeOut;\n\t\tthis._didSomething();\n\t\tthis.redo();\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tthis._instrument.fadeIn = this._newFadeIn;\n\t\tthis._instrument.fadeOut = this._newFadeOut;\n\t\tthis._instrument.preset = this._instrumentNextPreset;\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tthis._instrument.fadeIn = this._oldFadeIn;\n\t\tthis._instrument.fadeOut = this._oldFadeOut;\n\t\tthis._instrument.preset = this._instrumentPrevPreset;\n\t\tthis._doc.notifier.changed();\n\t}\n}\n\nexport class ChangeAlgorithm extends Change {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.algorithm;\n\t\tif (oldValue != newValue) {\n\t\t\tinstrument.algorithm = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeFeedbackType extends Change {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.feedbackType;\n\t\tif (oldValue != newValue) {\n\t\t\tinstrument.feedbackType = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeOperatorFrequency extends Change {\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.operators[operatorIndex].frequency;\n\t\tif (oldValue != newValue) {\n\t\t\tinstrument.operators[operatorIndex].frequency = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.operators[operatorIndex].amplitude = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.feedbackAmplitude = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeAddChannelInstrument extends Change {\n\tconstructor(doc: SongDocument) {\n\t\tsuper();\n\t\tconst channel: Channel = doc.song.channels[doc.channel];\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\n\t\tconst maxInstruments: number = doc.song.getMaxInstrumentsPerChannel();\n\t\tif (channel.instruments.length >= maxInstruments) return;\n\t\tconst presetValue: number = pickRandomPresetValue(isNoise);\n\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n\t\tconst instrument: Instrument = new Instrument(isNoise);\n\t\tinstrument.fromJsonObject(preset.settings, isNoise, 1);\n\t\tinstrument.preset = presetValue;\n\t\tinstrument.volume = 1;\n\t\tchannel.instruments.push(instrument);\n\t\tdoc.viewedInstrument[doc.channel] = channel.instruments.length - 1;\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeRemoveChannelInstrument extends Change {\n\tconstructor(doc: SongDocument) {\n\t\tsuper();\n\t\tconst channel: Channel = doc.song.channels[doc.channel];\n\t\tif (channel.instruments.length <= Config.instrumentCountMin) return;\n\t\tconst removedIndex: number = doc.viewedInstrument[doc.channel];\n\t\tchannel.instruments.splice(removedIndex, 1);\n\t\tif (doc.song.patternInstruments) {\n\t\t\tfor (const pattern of channel.patterns) {\n\t\t\t\tfor (let i: number = 0; i < pattern.instruments.length; i++) {\n\t\t\t\t\tif (pattern.instruments[i] == removedIndex) {\n\t\t\t\t\t\tpattern.instruments.splice(i, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t} else if (pattern.instruments[i] > removedIndex) {\n\t\t\t\t\t\tpattern.instruments[i]--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pattern.instruments.length <= 0) {\n\t\t\t\t\tpattern.instruments[0] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeViewInstrument extends Change {\n\tconstructor(doc: SongDocument, index: number) {\n\t\tsuper();\n\t\tif (doc.viewedInstrument[doc.channel] != index) {\n\t\t\tdoc.viewedInstrument[doc.channel] = index;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeInstrumentsFlags extends Change {\n\tconstructor(doc: SongDocument, newLayeredInstruments: boolean, newPatternInstruments: boolean) {\n\t\tsuper();\n\t\tconst oldLayeredInstruments: boolean = doc.song.layeredInstruments;\n\t\tconst oldPatternInstruments: boolean = doc.song.patternInstruments;\n\t\tif (oldLayeredInstruments == newLayeredInstruments && oldPatternInstruments == newPatternInstruments) return;\n\t\tdoc.song.layeredInstruments = newLayeredInstruments;\n\t\tdoc.song.patternInstruments = newPatternInstruments;\n\t\t\n\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n\t\t\tconst channel: Channel = doc.song.channels[channelIndex];\n\t\t\tif (channel.instruments.length > doc.song.getMaxInstrumentsPerChannel()) {\n\t\t\t\tchannel.instruments.length = doc.song.getMaxInstrumentsPerChannel();\n\t\t\t}\n\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\n\t\t\t\tconst pattern: Pattern = channel.patterns[j];\n\t\t\t\tif (!oldPatternInstruments && newPatternInstruments) {\n\t\t\t\t\t// patternInstruments was enabled, set up pattern instruments as appropriate.\n\t\t\t\t\tfor (let i: number = 0; i < channel.instruments.length; i++) {\n\t\t\t\t\t\tpattern.instruments[i] = i;\n\t\t\t\t\t}\n\t\t\t\t\tpattern.instruments.length = channel.instruments.length;\n\t\t\t\t}\n\t\t\t\tdiscardInvalidPatternInstruments(pattern.instruments, doc.song, channelIndex);\n\t\t\t}\n\t\t}\n\t\t\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeKey extends Change {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tif (doc.song.key != newValue) {\n\t\t\tdoc.song.key = newValue;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeLoop extends Change {\n\tconstructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\n\t\tsuper();\n\t\tthis._doc.song.loopStart = this.newStart;\n\t\tthis._doc.song.loopLength = this.newLength;\n\t\tthis._doc.notifier.changed();\n\t\tif (this.oldStart != this.newStart || this.oldLength != this.newLength) {\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangePitchAdded extends UndoableChange {\n\tprivate _doc: SongDocument;\n\tprivate _note: Note;\n\tprivate _pitch: number;\n\tprivate _index: number;\n\tconstructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\n\t\tsuper(deletion);\n\t\tthis._doc = doc;\n\t\tthis._note = note;\n\t\tthis._pitch = pitch;\n\t\tthis._index = index;\n\t\tthis._didSomething();\n\t\tthis.redo();\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tthis._note.pitches.splice(this._index, 0, this._pitch);\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tthis._note.pitches.splice(this._index, 1);\n\t\tthis._doc.notifier.changed();\n\t}\n}\n\nexport class ChangeOctave extends Change {\n\tconstructor(doc: SongDocument, public oldValue: number, newValue: number) {\n\t\tsuper();\n\t\tdoc.song.channels[doc.channel].octave = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeRhythm extends ChangeGroup {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\t\n\t\tif (doc.song.rhythm != newValue) {\n\t\t\tdoc.song.rhythm = newValue;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangePaste extends ChangeGroup {\n\tconstructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\n\t\tsuper();\n\t\t\n\t\t// Erase the current contents of the selection:\n\t\tthis.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd));\n\t\t\n\t\tlet noteInsertionIndex: number = 0;\n\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\n\t\t\tif (pattern.notes[i].start < selectionStart) {\n\t\t\t\tif (pattern.notes[i].end > selectionStart) throw new Error();\n\t\t\t\t\n\t\t\t\tnoteInsertionIndex = i + 1;\n\t\t\t} else if (pattern.notes[i].start < selectionEnd) {\n\t\t\t\tthrow new Error();\n\t\t\t}\n\t\t}\n\t\t\n\t\twhile (selectionStart < selectionEnd) {\n\t\t\tfor (const noteObject of notes) {\n\t\t\t\tconst noteStart: number = noteObject[\"start\"] + selectionStart;\n\t\t\t\tconst noteEnd: number = noteObject[\"end\"] + selectionStart;\n\t\t\t\tif (noteStart >= selectionEnd) break;\n\t\t\t\tconst note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"size\"], false);\n\t\t\t\tnote.pitches.length = 0;\n\t\t\t\tfor (const pitch of noteObject[\"pitches\"]) {\n\t\t\t\t\tnote.pitches.push(pitch);\n\t\t\t\t}\n\t\t\t\tnote.pins.length = 0;\n\t\t\t\tfor (const pin of noteObject[\"pins\"]) {\n\t\t\t\t\tnote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\n\t\t\t\t}\n\t\t\t\tnote.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true) && (note.start == 0);\n\t\t\t\tpattern.notes.splice(noteInsertionIndex++, 0, note);\n\t\t\t\tif (note.end > selectionEnd) {\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tselectionStart += oldPartDuration;\n\t\t}\n\t\t\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangePasteInstrument extends ChangeGroup {\n\tconstructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\n\t\tsuper();\n\t\tinstrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"]);\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeSetPatternInstruments extends Change {\n\tconstructor(doc: SongDocument, channelIndex: number, instruments: number[], pattern: Pattern) {\n\t\tsuper();\n\t\tif (!patternsContainSameInstruments(instruments, pattern.instruments)) {\n\t\t\tpattern.instruments.length = 0;\n\t\t\tpattern.instruments.push(...instruments);\n\t\t\tdiscardInvalidPatternInstruments(pattern.instruments, doc.song, channelIndex);\n\t\t\tthis._didSomething();\n\t\t\tdoc.notifier.changed();\n\t\t}\n\t}\n}\n\nexport class ChangePatternsPerChannel extends Change {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tif (doc.song.patternsPerChannel != newValue) {\n\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\n\t\t\t\tconst channelBars: number[] = doc.song.channels[i].bars;\n\t\t\t\tconst channelPatterns: Pattern[] = doc.song.channels[i].patterns;\n\t\t\t\tfor (let j: number = 0; j < channelBars.length; j++) {\n\t\t\t\t\tif (channelBars[j] > newValue) channelBars[j] = 0;\n\t\t\t\t}\n\t\t\t\tfor (let j: number = channelPatterns.length; j < newValue; j++) {\n\t\t\t\t\tchannelPatterns[j] = new Pattern();\n\t\t\t\t}\n\t\t\t\tchannelPatterns.length = newValue;\n\t\t\t}\n\t\t\tdoc.song.patternsPerChannel = newValue;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeEnsurePatternExists extends UndoableChange {\n\tprivate _doc: SongDocument;\n\tprivate _bar: number;\n\tprivate _channelIndex: number;\n\tprivate _patternIndex: number;\n\tprivate _patternOldNotes: Note[] | null = null;\n\tprivate _oldPatternCount: number;\n\tprivate _newPatternCount: number;\n\tprivate _oldPatternInstruments: number[] | null = null;\n\tprivate _newPatternInstruments: number[];\n\t\n\tconstructor(doc: SongDocument, channelIndex: number, bar: number) {\n\t\tsuper(false);\n\t\tconst song: Song = doc.song;\n\t\tif (song.channels[channelIndex].bars[bar] != 0) return;\n\t\t\n\t\tthis._doc = doc;\n\t\tthis._bar = bar;\n\t\tthis._channelIndex = channelIndex;\n\t\tthis._oldPatternCount = song.patternsPerChannel;\n\t\tthis._newPatternCount = song.patternsPerChannel;\n\t\tthis._newPatternInstruments = doc.recentPatternInstruments[channelIndex].concat();\n\t\t\n\t\tlet firstEmptyUnusedIndex: number | null = null;\n\t\tlet firstUnusedIndex: number | null = null;\n\t\tfor (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\n\t\t\tlet used = false;\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\n\t\t\t\tif (song.channels[channelIndex].bars[barIndex] == patternIndex) {\n\t\t\t\t\tused = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (used) continue;\n\t\t\tif (firstUnusedIndex == null) {\n\t\t\t\tfirstUnusedIndex = patternIndex;\n\t\t\t}\n\t\t\tconst pattern: Pattern = song.channels[channelIndex].patterns[patternIndex - 1];\n\t\t\tif (pattern.notes.length == 0) {\n\t\t\t\tfirstEmptyUnusedIndex = patternIndex;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (firstEmptyUnusedIndex != null) {\n\t\t\tthis._patternIndex = firstEmptyUnusedIndex;\n\t\t\tthis._oldPatternInstruments = song.channels[channelIndex].patterns[firstEmptyUnusedIndex - 1].instruments.concat();\n\t\t} else if (song.patternsPerChannel < song.barCount) {\n\t\t\tthis._newPatternCount = song.patternsPerChannel + 1;\n\t\t\tthis._patternIndex = song.patternsPerChannel + 1;\n\t\t} else if (firstUnusedIndex != null) {\n\t\t\tthis._patternIndex = firstUnusedIndex;\n\t\t\tthis._patternOldNotes = song.channels[channelIndex].patterns[firstUnusedIndex - 1].notes;\n\t\t\tthis._oldPatternInstruments = song.channels[channelIndex].patterns[firstUnusedIndex - 1].instruments.concat();\n\t\t} else {\n\t\t\tthrow new Error();\n\t\t}\n\t\t\n\t\tthis._didSomething();\n\t\tthis._doForwards();\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tconst song: Song = this._doc.song;\n\t\tfor (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\n\t\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\n\t\t\t\tsong.channels[i].patterns[j] = new Pattern();\n\t\t\t}\n\t\t}\n\t\tsong.patternsPerChannel = this._newPatternCount;\n\t\tconst pattern: Pattern = song.channels[this._channelIndex].patterns[this._patternIndex - 1];\n\t\tpattern.notes = [];\n\t\tpattern.instruments.length = 0;\n\t\tpattern.instruments.push(...this._newPatternInstruments);\n\t\tsong.channels[this._channelIndex].bars[this._bar] = this._patternIndex;\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tconst song: Song = this._doc.song;\n\t\tconst pattern: Pattern = song.channels[this._channelIndex].patterns[this._patternIndex - 1];\n\t\tif (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\n\t\tif (this._oldPatternInstruments != null) {\n\t\t\tpattern.instruments.length = 0;\n\t\t\tpattern.instruments.push(...this._oldPatternInstruments);\n\t\t}\n\t\tsong.channels[this._channelIndex].bars[this._bar] = 0;\n\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\n\t\t\tsong.channels[i].patterns.length = this._oldPatternCount;\n\t\t}\n\t\tsong.patternsPerChannel = this._oldPatternCount;\n\t\tthis._doc.notifier.changed();\n\t}\n}\n\nexport class ChangePinTime extends ChangePins {\n\tconstructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number, continuesLastPattern: boolean) {\n\t\tsuper(doc, note);\n\t\t\n\t\tshiftedTime -= this._oldStart;\n\t\tconst originalTime: number = this._oldPins[pinIndex].time;\n\t\tconst skipStart: number = Math.min(originalTime, shiftedTime);\n\t\tconst skipEnd: number = Math.max(originalTime, shiftedTime);\n\t\tlet setPin: boolean = false;\n\t\tfor (let i: number = 0; i < this._oldPins.length; i++) {\n\t\t\tconst oldPin: NotePin = note.pins[i];\n\t\t\tconst time: number = oldPin.time;\n\t\t\tif (time < skipStart) {\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.size));\n\t\t\t} else if (time > skipEnd) {\n\t\t\t\tif (!setPin) {\n\t\t\t\t\tif (this._newPins.length > 0) continuesLastPattern = note.continuesLastPattern;\n\t\t\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].size));\n\t\t\t\t\tsetPin = true;\n\t\t\t\t}\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.size));\n\t\t\t}\n\t\t}\n\t\tif (!setPin) {\n\t\t\tcontinuesLastPattern = note.continuesLastPattern;\n\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].size));\n\t\t}\n\t\t\n\t\tthis._finishSetup(continuesLastPattern);\n\t}\n}\n\nexport class ChangePitchBend extends ChangePins {\n\tconstructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\n\t\tsuper(doc, note);\n\t\t\n\t\tbendStart -= this._oldStart;\n\t\tbendEnd   -= this._oldStart;\n\t\tbendTo    -= note.pitches[pitchIndex];\n\t\t\n\t\tlet setStart: boolean = false;\n\t\tlet setEnd: boolean   = false;\n\t\tlet prevInterval: number = 0;\n\t\tlet prevSize: number = Config.noteSizeMax;\n\t\tlet persist: boolean = true;\n\t\tlet i: number;\n\t\tlet direction: number;\n\t\tlet stop: number;\n\t\tlet push: (item: NotePin)=>void;\n\t\tif (bendEnd > bendStart) {\n\t\t\ti = 0;\n\t\t\tdirection = 1;\n\t\t\tstop = note.pins.length;\n\t\t\tpush = (item: NotePin)=>{ this._newPins.push(item); };\n\t\t} else {\n\t\t\ti = note.pins.length - 1;\n\t\t\tdirection = -1;\n\t\t\tstop = -1;\n\t\t\tpush = (item: NotePin)=>{ this._newPins.unshift(item); };\n\t\t}\n\t\tfor (; i != stop; i += direction) {\n\t\t\tconst oldPin: NotePin = note.pins[i];\n\t\t\tconst time: number = oldPin.time;\n\t\t\tfor (;;) {\n\t\t\t\tif (!setStart) {\n\t\t\t\t\tif (time * direction <= bendStart * direction) {\n\t\t\t\t\t\tprevInterval = oldPin.interval;\n\t\t\t\t\t\tprevSize = oldPin.size;\n\t\t\t\t\t}\n\t\t\t\t\tif (time * direction < bendStart * direction) {\n\t\t\t\t\t\tpush(makeNotePin(oldPin.interval, time, oldPin.size));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpush(makeNotePin(prevInterval, bendStart, prevSize));\n\t\t\t\t\t\tsetStart = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (!setEnd) {\n\t\t\t\t\tif (time * direction <= bendEnd * direction) {\n\t\t\t\t\t\tprevInterval = oldPin.interval;\n\t\t\t\t\t\tprevSize = oldPin.size;\n\t\t\t\t\t}\n\t\t\t\t\tif (time * direction < bendEnd * direction) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpush(makeNotePin(bendTo, bendEnd, prevSize));\n\t\t\t\t\t\tsetEnd = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (time * direction == bendEnd * direction) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (oldPin.interval != prevInterval) persist = false;\n\t\t\t\t\t\tpush(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.size));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!setEnd) {\n\t\t\tpush(makeNotePin(bendTo, bendEnd, prevSize));\n\t\t}\n\t\t\n\t\tthis._finishSetup();\n\t}\n}\n\nexport class ChangePatternRhythm extends ChangeSequence {\n\tconstructor(doc: SongDocument, pattern: Pattern) {\n\t\tsuper();\n\t\tconst minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\n\t\t\n\t\tconst changeRhythm: (oldTime:number)=>number = function(oldTime: number): number {\n\t\t\tlet thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\n\t\t\tif (thresholds != null) {\n\t\t\t\tconst beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\n\t\t\t\tconst remainder: number = oldTime - beatStart;\n\t\t\t\tlet newTime: number = beatStart;\n\t\t\t\tfor (const threshold of thresholds) {\n\t\t\t\t\tif (remainder >= threshold) {\n\t\t\t\t\t\tnewTime += minDivision;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn newTime;\n\t\t\t} else {\n\t\t\t\treturn Math.round(oldTime / minDivision) * minDivision;\n\t\t\t}\n\t\t};\n\t\t\n\t\tlet i: number = 0;\n\t\twhile (i < pattern.notes.length) {\n\t\t\tconst note: Note = pattern.notes[i];\n\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\n\t\t\t} else {\n\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ChangeRhythmNote extends ChangePins {\n\tconstructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime:number)=>number) {\n\t\tsuper(doc, note);\n\t\t\n\t\tfor (const oldPin of this._oldPins) {\n\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.size));\n\t\t}\n\t\t\n\t\tthis._finishSetup();\n\t}\n}\n\nexport class ChangeMoveNotesSideways extends ChangeGroup {\n\tconstructor(doc: SongDocument, beatsToMove: number, strategy: string) {\n\t\tsuper();\n\t\tlet partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\n\t\tif (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\n\t\tif (partsToMove == 0.0) return;\n\t\t\n\t\tswitch (strategy) {\n\t\t\tcase \"wrapAround\": {\n\t\t\t\tconst partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\n\t\t\t\tfor (const channel of doc.song.channels) {\n\t\t\t\t\tfor (const pattern of channel.patterns) {\n\t\t\t\t\t\tconst newNotes: Note[] = [];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let bar: number = 1; bar >= 0; bar--) {\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (const oldNote of pattern.notes) {\n\t\t\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + partsToMove;\n\t\t\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + partsToMove;\n\t\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\n\t\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\n\t\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tpattern.notes = newNotes;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase \"overflow\": {\n\t\t\t\tlet originalBarCount: number = doc.song.barCount;\n\t\t\t\tlet originalLoopStart: number = doc.song.loopStart;\n\t\t\t\tlet originalLoopLength: number = doc.song.loopLength;\n\t\t\t\t\n\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\n\t\t\t\t\n\t\t\t\tif (beatsToMove < 0) {\n\t\t\t\t\tlet firstBarIsEmpty: boolean = true;\n\t\t\t\t\tfor (const channel of doc.song.channels) {\n\t\t\t\t\t\tif (channel.bars[0] != 0) firstBarIsEmpty = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (firstBarIsEmpty) {\n\t\t\t\t\t\tfor (const channel of doc.song.channels) {\n\t\t\t\t\t\t\tchannel.bars.shift();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdoc.song.barCount--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toriginalBarCount++;\n\t\t\t\t\t\toriginalLoopStart++;\n\t\t\t\t\t\tdoc.bar++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (doc.song.barCount < originalBarCount) {\n\t\t\t\t\tfor (const channel of doc.song.channels) {\n\t\t\t\t\t\tchannel.bars.push(0);\n\t\t\t\t\t}\n\t\t\t\t\tdoc.song.barCount++;\n\t\t\t\t}\n\t\t\t\tdoc.song.loopStart = originalLoopStart;\n\t\t\t\tdoc.song.loopLength = originalLoopLength;\n\t\t\t} break;\n\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\n\t\t}\n\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeBeatsPerBar extends ChangeGroup {\n\tconstructor(doc: SongDocument, newValue: number, strategy: string) {\n\t\tsuper();\n\t\tif (doc.song.beatsPerBar != newValue) {\n\t\t\tswitch (strategy) {\n\t\t\t\tcase \"splice\": {\n\t\t\t\t\tif (doc.song.beatsPerBar > newValue) {\n\t\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\n\t\t\t\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\n\t\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\n\t\t\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase \"stretch\": {\n\t\t\t\t\tconst changeRhythm = function(oldTime: number): number {\n\t\t\t\t\t\treturn Math.round(oldTime * newValue / doc.song.beatsPerBar);\n\t\t\t\t\t};\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n\t\t\t\t\t\tfor (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\n\t\t\t\t\t\t\tconst pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex]; \n\t\t\t\t\t\t\tlet noteIndex: number = 0;\n\t\t\t\t\t\t\twhile (noteIndex < pattern.notes.length) {\n\t\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\n\t\t\t\t\t\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\n\t\t\t\t\t\t\t\t\tnoteIndex++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\n\t\t\t\t} break;\n\t\t\t\tcase \"overflow\": {\n\t\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\n\t\t\t\t\tdoc.song.loopStart = 0;\n\t\t\t\t\tdoc.song.loopLength = doc.song.barCount;\n\t\t\t\t} break;\n\t\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\n\t\t\t}\n\n\t\t\tdoc.song.beatsPerBar = newValue;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeScale extends ChangeGroup {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tif (doc.song.scale != newValue) {\n\t\t\tdoc.song.scale = newValue;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeDetectKey extends ChangeGroup {\n\tconstructor(doc: SongDocument) {\n\t\tsuper();\n\t\tconst song: Song = doc.song;\n\t\tconst basePitch: number = Config.keys[song.key].basePitch;\n\t\tconst keyWeights: number[] = [0,0,0,0,0,0,0,0,0,0,0,0];\n\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\n\t\t\t\tconst pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\n\t\t\t\tif (pattern != null) {\n\t\t\t\t\tfor (const note of pattern.notes) {\n\t\t\t\t\t\tconst prevPin: NotePin = note.pins[0];\n\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\n\t\t\t\t\t\t\tconst nextPin: NotePin = note.pins[pinIndex];\n\t\t\t\t\t\t\tif (prevPin.interval == nextPin.interval) {\n\t\t\t\t\t\t\t\tlet weight: number = nextPin.time - prevPin.time;\n\t\t\t\t\t\t\t\tweight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\n\t\t\t\t\t\t\t\tweight *= nextPin.size + prevPin.size;\n\t\t\t\t\t\t\t\tfor (const pitch of note.pitches) {\n\t\t\t\t\t\t\t\t\tconst key = (basePitch + prevPin.interval + pitch) % 12;\n\t\t\t\t\t\t\t\t\tkeyWeights[key] += weight;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet bestKey: number = 0;\n\t\tlet bestKeyWeight: number = 0;\n\t\tfor (let key: number = 0; key < 12; key++) {\n\t\t\t// Look for the root of the most prominent major or minor chord.\n\t\t\tconst keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\n\t\t\tif (bestKeyWeight < keyWeight) {\n\t\t\t\tbestKeyWeight = keyWeight;\n\t\t\t\tbestKey = key;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (bestKey != song.key) {\n\t\t\tconst diff: number = song.key - bestKey;\n\t\t\tconst absoluteDiff: number = Math.abs(diff);\n\t\t\t\n\t\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\n\t\t\t\tfor (const pattern of song.channels[channelIndex].patterns) {\n\t\t\t\t\tfor (let i: number = 0; i < absoluteDiff; i++) {\n\t\t\t\t\t\tthis.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsong.key = bestKey;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport function pickRandomPresetValue(isNoise: boolean): number {\n\tconst eligiblePresetValues: number[] = [];\n\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n\t\tif (category.name == \"Novelty Presets\") continue;\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n\t\t\tconst preset: Preset = category.presets[presetIndex];\n\t\t\tif (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\n\t\t\t\teligiblePresetValues.push((categoryIndex << 6) + presetIndex);\n\t\t\t}\n\t\t}\n\t}\n\treturn eligiblePresetValues[(Math.random() * eligiblePresetValues.length)|0];\n}\n\nexport function setDefaultInstruments(song: Song): void {\n\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\n\t\tfor (const instrument of song.channels[channelIndex].instruments) {\n\t\t\tconst isNoise: boolean = song.getChannelIsNoise(channelIndex);\n\t\t\tconst presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\n\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, 1);\n\t\t\tinstrument.preset = presetValue;\n\t\t\tinstrument.volume = 1;\n\t\t}\n\t}\n}\n\nexport class ChangeSong extends ChangeGroup {\n\tconstructor(doc: SongDocument, newHash: string) {\n\t\tsuper();\n\t\tdoc.song.fromBase64String(newHash);\n\t\tif (newHash == \"\") {\n\t\t\tthis.append(new ChangePatternSelection(doc, 0, 0));\n\t\t\tdoc.selection.resetBoxSelection();\n\t\t\tsetDefaultInstruments(doc.song);\n\t\t\tdoc.song.scale = doc.prefs.defaultScale;\n\t\t\t\n\t\t\tfor (let i: number = 0; i <= doc.song.channels.length; i++) {\n\t\t\t\tdoc.viewedInstrument[i] = 0;\n\t\t\t\tdoc.recentPatternInstruments[i] = [0];\n\t\t\t}\n\t\t\tdoc.viewedInstrument.length = doc.song.channels.length;\n\t\t} else {\n\t\t\tthis.append(new ChangeValidateTrackSelection(doc));\n\t\t}\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeValidateTrackSelection extends Change {\n\tconstructor(doc: SongDocument) {\n\t\tsuper();\n\t\tconst channelIndex: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\n\t\tconst bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\n\t\tif (doc.channel != channelIndex || doc.bar != bar) {\n\t\t\tdoc.bar = bar;\n\t\t\tdoc.channel = channelIndex;\n\t\t\tthis._didSomething();\n\t\t}\n\t\tdoc.selection.scrollToSelectedPattern();\n\t\tdoc.notifier.changed();\n\t}\n}\n\nexport class ChangeReplacePatterns extends ChangeGroup {\n\tconstructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[]) {\n\t\tsuper();\n\t\t\n\t\tconst song: Song = doc.song;\n\t\t\n\t\tfunction removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\n\t\t\twhile (channels.length > maxLength) {\n\t\t\t\tlet sparsestIndex: number = channels.length - 1;\n\t\t\t\tlet mostZeroes: number = 0;\n\t\t\t\tfor (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\n\t\t\t\t\tlet zeroes: number = 0;\n\t\t\t\t\tfor (const bar of channels[channelIndex].bars) {\n\t\t\t\t\t\tif (bar == 0) zeroes++;\n\t\t\t\t\t}\n\t\t\t\t\tif (zeroes >= mostZeroes) {\n\t\t\t\t\t\tsparsestIndex = channelIndex;\n\t\t\t\t\t\tmostZeroes = zeroes;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tchannels.splice(sparsestIndex, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\tremoveExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\n\t\tremoveExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\n\t\t\n\t\twhile (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\n\t\twhile (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\n\t\t\n\t\t// Set minimum counts.\n\t\tsong.barCount = 1;\n\t\tsong.patternsPerChannel = 8;\n\t\tconst combinedChannels: Channel[] = pitchChannels.concat(noiseChannels);\n\t\tfor (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\n\t\t\tconst channel: Channel = combinedChannels[channelIndex];\n\t\t\tsong.barCount = Math.max(song.barCount, channel.bars.length);\n\t\t\tsong.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\n\t\t\tsong.channels[channelIndex] = channel;\n\t\t}\n\t\tsong.channels.length = combinedChannels.length;\n\t\tsong.pitchChannelCount = pitchChannels.length;\n\t\tsong.noiseChannelCount = noiseChannels.length;\n\t\t\n\t\tsong.barCount = Math.min(Config.barCountMax, song.barCount);\n\t\tsong.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\n\t\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\n\t\t\tconst channel: Channel = song.channels[channelIndex];\n\t\t\t\n\t\t\tfor (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\n\t\t\t\tif (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\n\t\t\t\t\tchannel.bars[barIndex] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (channel.bars.length < song.barCount) {\n\t\t\t\tchannel.bars.push(0);\n\t\t\t}\n\t\t\tchannel.bars.length = song.barCount;\n\t\t\t\n\t\t\tif (channel.instruments.length > song.getMaxInstrumentsPerChannel()) {\n\t\t\t\tchannel.instruments.length = song.getMaxInstrumentsPerChannel();\n\t\t\t}\n\t\t\t\n\t\t\tfor (const pattern of channel.patterns) {\n\t\t\t\tdiscardInvalidPatternInstruments(pattern.instruments, song, channelIndex);\n\t\t\t}\n\t\t\twhile (channel.patterns.length < song.patternsPerChannel) {\n\t\t\t\tchannel.patterns.push(new Pattern());\n\t\t\t}\n\t\t\tchannel.patterns.length = song.patternsPerChannel;\n\t\t}\n\t\t\n\t\tsong.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\n\t\tsong.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\n\t\t\n\t\tthis.append(new ChangeValidateTrackSelection(doc));\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\n\tif (a.length != b.length) return false;\n\t\n\tfor (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\n\t\tconst oldNote: Note = a[noteIndex];\n\t\tconst newNote: Note = b[noteIndex];\n\t\tif (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tfor (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\n\t\t\tif (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\n\t\t\tif (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].size != oldNote.pins[pinIndex].size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nexport function removeDuplicatePatterns(channels: Channel[]): void {\n\tfor (const channel of channels) {\n\t\tconst newPatterns: Pattern[] = [];\n\t\tfor (let bar: number = 0; bar < channel.bars.length; bar++) {\n\t\t\tif (channel.bars[bar] == 0) continue;\n\t\t\t\n\t\t\tconst oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\n\t\t\t\n\t\t\tlet foundMatchingPattern: boolean = false;\n\t\t\tfor (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\n\t\t\t\tconst newPattern: Pattern = newPatterns[newPatternIndex];\n\t\t\t\t\n\t\t\t\tif (!patternsContainSameInstruments(oldPattern.instruments, newPattern.instruments) || newPattern.notes.length != oldPattern.notes.length) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\n\t\t\t\t\tfoundMatchingPattern = true;\n\t\t\t\t\tchannel.bars[bar] = newPatternIndex + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!foundMatchingPattern) {\n\t\t\t\tnewPatterns.push(oldPattern);\n\t\t\t\tchannel.bars[bar] = newPatterns.length;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\n\t\t\tchannel.patterns[patternIndex] = newPatterns[patternIndex];\n\t\t}\n\t\tchannel.patterns.length = newPatterns.length;\n\t}\n}\n\nexport class ChangeTempo extends Change {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper();\n\t\tdoc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeEchoDelay extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.echoDelay = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeEchoSustain extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.echoSustain = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeChorus extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.chorus = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeReverb extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.reverb = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeNoteAdded extends UndoableChange {\n\tprivate _doc: SongDocument;\n\tprivate _pattern: Pattern;\n\tprivate _note: Note;\n\tprivate _index: number;\n\tconstructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\n\t\tsuper(deletion);\n\t\tthis._doc = doc;\n\t\tthis._pattern = pattern;\n\t\tthis._note = note;\n\t\tthis._index = index;\n\t\tthis._didSomething();\n\t\tthis.redo();\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tthis._pattern.notes.splice(this._index, 0, this._note);\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tthis._pattern.notes.splice(this._index, 1);\n\t\tthis._doc.notifier.changed();\n\t}\n}\n\nexport class ChangeNoteLength extends ChangePins {\n\tconstructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\n\t\tsuper(doc, note);\n\t\tconst continuesLastPattern: boolean = ((this._oldStart < 0 || note.continuesLastPattern) && truncStart == 0);\n\t\t\n\t\ttruncStart -= this._oldStart;\n\t\ttruncEnd   -= this._oldStart;\n\t\tlet setStart: boolean = false;\n\t\tlet prevSize: number = this._oldPins[0].size;\n\t\tlet prevInterval: number = this._oldPins[0].interval;\n\t\tlet pushLastPin: boolean = true;\n\t\tlet i: number;\n\t\tfor (i = 0; i < this._oldPins.length; i++) {\n\t\t\tconst oldPin: NotePin = this._oldPins[i];\n\t\t\tif (oldPin.time < truncStart) {\n\t\t\t\tprevSize = oldPin.size;\n\t\t\t\tprevInterval = oldPin.interval;\n\t\t\t} else {\n\t\t\t\tif (oldPin.time > truncStart && !setStart) {\n\t\t\t\t\tthis._newPins.push(makeNotePin(prevInterval, truncStart, prevSize));\n\t\t\t\t\tsetStart = true;\n\t\t\t\t}\n\t\t\t\tif (oldPin.time <= truncEnd) {\n\t\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.size));\n\t\t\t\t\tif (oldPin.time == truncEnd) {\n\t\t\t\t\t\tpushLastPin = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].size));\n\t\t\n\t\tthis._finishSetup(continuesLastPattern);\n\t}\n}\n\nexport class ChangeNoteTruncate extends ChangeSequence {\n\tconstructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote?: Note) {\n\t\tsuper();\n\t\tlet i: number = 0;\n\t\twhile (i < pattern.notes.length) {\n\t\t\tconst note: Note = pattern.notes[i];\n\t\t\tif (note == skipNote && skipNote != undefined) {\n\t\t\t\ti++;\n\t\t\t} else if (note.end <= start) {\n\t\t\t\ti++;\n\t\t\t} else if (note.start >= end) {\n\t\t\t\tbreak;\n\t\t\t} else if (note.start < start && note.end > end) {\n\t\t\t\tconst copy: Note = note.clone();\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\n\t\t\t\ti++;\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, end, copy.end));\n\t\t\t\ti++;\n\t\t\t} else if (note.start < start) {\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\n\t\t\t\ti++;\n\t\t\t} else if (note.end > end) {\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, end, note.end));\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\n\tconstructor(doc: SongDocument, pattern: Pattern) {\n\t\tsuper();\n\t\tlet i: number = 0;\n\t\twhile (i < pattern.notes.length) {\n\t\t\tconst note: Note = pattern.notes[i];\n\t\t\tif (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\n\t\t\t\tconst copy: Note = note.clone();\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\n\t\t\t\ti++;\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\n\t\t\t\t// i++; // The second note might be split again at the end of the selection. Check it again.\n\t\t\t} else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\n\t\t\t\tconst copy: Note = note.clone();\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\n\t\t\t\ti++;\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ChangeTransposeNote extends UndoableChange {\n\tprotected _doc: SongDocument;\n\tprotected _note: Note;\n\tprotected _oldStart: number;\n\tprotected _newStart: number;\n\tprotected _oldEnd: number;\n\tprotected _newEnd: number;\n\tprotected _oldPins: NotePin[];\n\tprotected _newPins: NotePin[];\n\tprotected _oldPitches: number[];\n\tprotected _newPitches: number[];\n\tconstructor(doc: SongDocument, channelIndex: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\n\t\tsuper(false);\n\t\tthis._doc = doc;\n\t\tthis._note = note;\n\t\tthis._oldPins = note.pins;\n\t\tthis._newPins = [];\n\t\tthis._oldPitches = note.pitches;\n\t\tthis._newPitches = [];\n\t\t\n\t\t// I'm disabling pitch transposing for noise channels to avoid\n\t\t// accidentally messing up noise channels when pitch shifting all\n\t\t// channels at once.\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(channelIndex);\n\t\tif (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\n\t\t\n\t\tconst maxPitch: number = (isNoise ? Config.drumCount - 1 : Config.maxPitch);\n\t\t\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\n\t\t\tlet pitch: number = this._oldPitches[i];\n\t\t\tif (octave && !isNoise) {\n\t\t\t\tif (upward) {\n\t\t\t\t\tpitch = Math.min(maxPitch, pitch + 12);\n\t\t\t\t} else {\n\t\t\t\t\tpitch = Math.max(0, pitch - 12);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (upward) {\n\t\t\t\t\tfor (let j: number = pitch + 1; j <= maxPitch; j++) {\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j%12]) {\n\t\t\t\t\t\t\tpitch = j;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (let j: number = pitch - 1; j >= 0; j--) {\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j%12]) {\n\t\t\t\t\t\t\tpitch = j;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tlet foundMatch: boolean = false;\n\t\t\tfor (let j: number = 0; j < this._newPitches.length; j++) {\n\t\t\t\tif (this._newPitches[j] == pitch) {\n\t\t\t\t\tfoundMatch = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!foundMatch) this._newPitches.push(pitch);\n\t\t}\n\t\t\n\t\tlet min: number = 0;\n\t\tlet max: number = maxPitch;\n\t\t\n\t\tfor (let i: number = 1; i < this._newPitches.length; i++) {\n\t\t\tconst diff: number = this._newPitches[0] - this._newPitches[i];\n\t\t\tif (min < diff) min = diff;\n\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\n\t\t}\n\t\t\n\t\tfor (const oldPin of this._oldPins) {\n\t\t\tlet interval: number = oldPin.interval + this._oldPitches[0];\n\t\t\t\n\t\t\tif (interval < min) interval = min;\n\t\t\tif (interval > max) interval = max;\n\t\t\tif (octave && !isNoise) {\n\t\t\t\tif (upward) {\n\t\t\t\t\tinterval = Math.min(max, interval + 12);\n\t\t\t\t} else {\n\t\t\t\t\tinterval = Math.max(min, interval - 12);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (upward) {\n\t\t\t\t\tfor (let i: number = interval + 1; i <= max; i++) {\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i%12]) {\n\t\t\t\t\t\t\tinterval = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i: number = interval - 1; i >= min; i--) {\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i%12]) {\n\t\t\t\t\t\t\tinterval = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tinterval -= this._newPitches[0];\n\t\t\tthis._newPins.push(makeNotePin(interval, oldPin.time, oldPin.size));\n\t\t}\n\t\t\n\t\tif (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\n\t\t\n\t\tfor (let i: number = 1; i < this._newPins.length - 1; ) {\n\t\t\tif (this._newPins[i-1].interval == this._newPins[i].interval &&\n\t\t\t\tthis._newPins[i].interval == this._newPins[i+1].interval &&\n\t\t\t\tthis._newPins[i-1].size == this._newPins[i].size &&\n\t\t\t\tthis._newPins[i].size == this._newPins[i+1].size)\n\t\t\t{\n\t\t\t\tthis._newPins.splice(i, 1);\n\t\t\t} else {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._doForwards();\n\t\tthis._didSomething();\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tthis._note.pins = this._newPins;\n\t\tthis._note.pitches = this._newPitches;\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tthis._note.pins = this._oldPins;\n\t\tthis._note.pitches = this._oldPitches;\n\t\tthis._doc.notifier.changed();\n\t}\n}\n\nexport class ChangeTranspose extends ChangeSequence {\n\tconstructor(doc: SongDocument, channelIndex: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\n\t\tsuper();\n\t\tif (doc.selection.patternSelectionActive) {\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\n\t\t}\n\t\tfor (const note of pattern.notes) {\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.append(new ChangeTransposeNote(doc, channelIndex, note, upward, ignoreScale, octave));\n\t\t}\n\t}\n}\n\nexport class ChangeTrackSelection extends Change {\n\tconstructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\n\t\tsuper();\n\t\tdoc.selection.boxSelectionX0 = newX0;\n\t\tdoc.selection.boxSelectionX1 = newX1;\n\t\tdoc.selection.boxSelectionY0 = newY0;\n\t\tdoc.selection.boxSelectionY1 = newY1;\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangePatternSelection extends UndoableChange {\n\tprivate _doc: SongDocument;\n\tprivate _oldStart: number;\n\tprivate _oldEnd: number;\n\tprivate _oldActive: boolean;\n\tprivate _newStart: number;\n\tprivate _newEnd: number;\n\tprivate _newActive: boolean;\n\t\n\tconstructor(doc: SongDocument, newStart: number, newEnd: number) {\n\t\tsuper(false);\n\t\tthis._doc = doc;\n\t\tthis._oldStart = doc.selection.patternSelectionStart;\n\t\tthis._oldEnd = doc.selection.patternSelectionEnd;\n\t\tthis._oldActive = doc.selection.patternSelectionActive;\n\t\tthis._newStart = newStart;\n\t\tthis._newEnd = newEnd;\n\t\tthis._newActive = newStart < newEnd;\n\t\tthis._doForwards();\n\t\tthis._didSomething();\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tthis._doc.selection.patternSelectionStart = this._newStart;\n\t\tthis._doc.selection.patternSelectionEnd = this._newEnd;\n\t\tthis._doc.selection.patternSelectionActive = this._newActive;\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tthis._doc.selection.patternSelectionStart = this._oldStart;\n\t\tthis._doc.selection.patternSelectionEnd = this._oldEnd;\n\t\tthis._doc.selection.patternSelectionActive = this._oldActive;\n\t\tthis._doc.notifier.changed();\n\t}\n}\n\nexport class ChangeDragSelectedNotes extends ChangeSequence {\n\tconstructor(doc: SongDocument, channelIndex: number, pattern: Pattern, parts: number, transpose: number) {\n\t\tsuper();\n\t\t\n\t\tif (parts == 0 && transpose == 0) return;\n\t\tif (doc.selection.patternSelectionActive) {\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\n\t\t}\n\t\t\n\t\tconst oldStart: number = doc.selection.patternSelectionStart;\n\t\tconst oldEnd: number = doc.selection.patternSelectionEnd;\n\t\tconst newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\n\t\tconst newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\n\t\tif (newStart == newEnd) {\n\t\t\t// Just erase the current contents of the selection:\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd));\n\t\t} else if (parts < 0) {\n\t\t\t// Clear space for the dragged notes:\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd)));\n\t\t} else {\n\t\t\t// Clear space for the dragged notes:\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd));\n\t\t}\n\t\t\n\t\tthis.append(new ChangePatternSelection(doc, newStart, newEnd));\n\t\tconst draggedNotes = [];\n\t\tlet noteInsertionIndex: number = 0;\n\t\tlet i: number = 0;\n\t\twhile (i < pattern.notes.length) {\n\t\t\tconst note: Note = pattern.notes[i];\n\t\t\tif (note.end <= oldStart || note.start >= oldEnd) {\n\t\t\t\ti++;\n\t\t\t\tif (note.end <= newStart) noteInsertionIndex = i;\n\t\t\t} else {\n\t\t\t\tdraggedNotes.push(note.clone());\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (const note of draggedNotes) {\n\t\t\tnote.start += parts;\n\t\t\tnote.end += parts;\n\t\t\tif (note.end <= newStart) continue;\n\t\t\tif (note.start >= newEnd) continue;\n\t\t\t\n\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\n\t\t\t\n\t\t\tthis.append(new ChangeNoteLength(doc, note, Math.max(note.start, newStart), Math.min(newEnd, note.end)));\n\t\t\t\n\t\t\tfor (let i: number = 0; i < Math.abs(transpose); i++) {\n\t\t\t\tthis.append(new ChangeTransposeNote(doc, channelIndex, note, transpose > 0, doc.prefs.notesOutsideScale));\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\n\tconstructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\n\t\tsuper();\n\t\tfor (let channelIndex: number = channelStart; channelIndex < channelStart + channelHeight; channelIndex++) {\n\t\t\tconst reusablePatterns: Dictionary<number> = {};\n\t\t\t\n\t\t\tfor (let bar: number = barStart; bar < barStart + barWidth; bar++) {\n\t\t\t\tconst currentPatternIndex: number = doc.song.channels[channelIndex].bars[bar];\n\t\t\t\tif (currentPatternIndex == 0) continue;\n\t\t\t\t\n\t\t\t\tif (reusablePatterns[String(currentPatternIndex)] == undefined) {\n\t\t\t\t\tlet isUsedElsewhere = false;\n\t\t\t\t\tfor (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\n\t\t\t\t\t\tif (bar2 < barStart || bar2 >= barStart + barWidth) {\n\t\t\t\t\t\t\tif (doc.song.channels[channelIndex].bars[bar2] == currentPatternIndex) {\n\t\t\t\t\t\t\t\tisUsedElsewhere = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (isUsedElsewhere) {\n\t\t\t\t\t\t// Need to duplicate the pattern.\n\t\t\t\t\t\tconst copiedPattern: Pattern = doc.song.getPattern(channelIndex, bar)!;\n\t\t\t\t\t\tthis.append(new ChangePatternNumbers(doc, 0, bar, channelIndex, 1, 1));\n\t\t\t\t\t\tthis.append(new ChangeEnsurePatternExists(doc, channelIndex, bar));\n\t\t\t\t\t\tconst newPattern: Pattern | null = doc.song.getPattern(channelIndex, bar);\n\t\t\t\t\t\tif (newPattern == null) throw new Error();\n\t\t\t\t\t\tthis.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Copy the instruments into the new pattern.\n\t\t\t\t\t\tnewPattern.instruments.length = 0;\n\t\t\t\t\t\tnewPattern.instruments.push(...copiedPattern.instruments);\n\t\t\t\t\t\t\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = doc.song.channels[channelIndex].bars[bar];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channelIndex, 1, 1));\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class ChangePatternScale extends Change {\n\tconstructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\n\t\tsuper();\n\t\tif (doc.selection.patternSelectionActive) {\n\t\t\tnew ChangeSplitNotesAtSelection(doc, pattern);\n\t\t}\n\t\tconst maxPitch: number = Config.maxPitch;\n\t\tfor (const note of pattern.notes) {\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tconst newPitches: number[] = [];\n\t\t\tconst newPins: NotePin[] = [];\n\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\n\t\t\t\tconst pitch: number = note.pitches[i];\n\t\t\t\tconst transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\n\t\t\t\tif (newPitches.indexOf(transformedPitch) == -1) {\n\t\t\t\t\tnewPitches.push(transformedPitch);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tlet min: number = 0;\n\t\t\tlet max: number = maxPitch;\n\t\t\t\n\t\t\tfor (let i: number = 1; i < newPitches.length; i++) {\n\t\t\t\tconst diff: number = newPitches[0] - newPitches[i];\n\t\t\t\tif (min < diff) min = diff;\n\t\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\n\t\t\t}\n\t\t\n\t\t\tfor (const oldPin of note.pins) {\n\t\t\t\tlet interval: number = oldPin.interval + note.pitches[0];\n\t\t\t\tif (interval < min) interval = min;\n\t\t\t\tif (interval > max) interval = max;\n\t\t\t\tconst transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\n\t\t\t\tnewPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.size));\n\t\t\t}\n\t\t\n\t\t\tif (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\n\t\t\n\t\t\tfor (let i: number = 1; i < newPins.length - 1; ) {\n\t\t\t\tif (newPins[i-1].interval == newPins[i].interval &&\n\t\t\t\t\tnewPins[i].interval == newPins[i+1].interval &&\n\t\t\t\t\tnewPins[i-1].size == newPins[i].size &&\n\t\t\t\t\tnewPins[i].size == newPins[i+1].size)\n\t\t\t\t{\n\t\t\t\t\tnewPins.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tnote.pitches = newPitches;\n\t\t\tnote.pins = newPins;\n\t\t}\n\t\tthis._didSomething();\n\t\tdoc.notifier.changed();\n\t}\n}\n\nexport class ChangeVolume extends Change {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper();\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangePan extends Change {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper();\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangeSizeBend extends UndoableChange {\n\tprivate _doc: SongDocument;\n\tprivate _note: Note;\n\tprivate _oldPins: NotePin[];\n\tprivate _newPins: NotePin[];\n\tconstructor(doc: SongDocument, note: Note, bendPart: number, bendSize: number, bendInterval: number, uniformSize: boolean) {\n\t\tsuper(false);\n\t\tthis._doc = doc;\n\t\tthis._note = note;\n\t\tthis._oldPins = note.pins;\n\t\tthis._newPins = [];\n\t\t\n\t\tlet inserted: boolean = false;\n\t\t\n\t\tfor (const pin of note.pins) {\n\t\t\tif (pin.time < bendPart) {\n\t\t\t\tif (uniformSize) {\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendSize));\n\t\t\t\t} else {\n\t\t\t\t\tthis._newPins.push(pin);\n\t\t\t\t}\n\t\t\t} else if (pin.time == bendPart) {\n\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendSize));\n\t\t\t\tinserted = true;\n\t\t\t} else {\n\t\t\t\tif (!uniformSize && !inserted) {\n\t\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendSize));\n\t\t\t\t\tinserted = true;\n\t\t\t\t}\n\t\t\t\tif (uniformSize) {\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendSize));\n\t\t\t\t} else {\n\t\t\t\t\tthis._newPins.push(pin);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tremoveRedundantPins(this._newPins);\n\t\t\n\t\tthis._doForwards();\n\t\tthis._didSomething();\n\t}\n\t\n\tprotected _doForwards(): void {\n\t\tthis._note.pins = this._newPins;\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tprotected _doBackwards(): void {\n\t\tthis._note.pins = this._oldPins;\n\t\tthis._doc.notifier.changed();\n\t}\n}\n\nexport class ChangeChipWave extends Change {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tif (instrument.chipWave != newValue) {\n\t\t\tinstrument.chipWave = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeNoiseWave extends Change {\n\tconstructor(doc: SongDocument, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tif (instrument.chipNoise != newValue) {\n\t\t\tinstrument.chipNoise = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeAddEnvelope extends Change {\n\tconstructor(doc: SongDocument) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tinstrument.addEnvelope(0,0,0);\n\t\tinstrument.preset = instrument.type;\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeRemoveEnvelope extends Change {\n\tconstructor(doc: SongDocument, index: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tinstrument.envelopeCount--;\n\t\tfor (let i: number = index; i < instrument.envelopeCount; i++) {\n\t\t\tinstrument.envelopes[i].target   = instrument.envelopes[i+1].target;\n\t\t\tinstrument.envelopes[i].index    = instrument.envelopes[i+1].index;\n\t\t\tinstrument.envelopes[i].envelope = instrument.envelopes[i+1].envelope;\n\t\t}\n\t\t// TODO: Shift any envelopes that were targeting other envelope indices after the removed one.\n\t\tinstrument.preset = instrument.type;\n\t\tdoc.notifier.changed();\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeSetEnvelopeTarget extends Change {\n\tconstructor(doc: SongDocument, envelopeIndex: number, target: number, targetIndex: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldTarget: number = instrument.envelopes[envelopeIndex].target;\n\t\tconst oldIndex: number = instrument.envelopes[envelopeIndex].index;\n\t\tif (oldTarget != target || oldIndex != targetIndex) {\n\t\t\tinstrument.envelopes[envelopeIndex].target = target;\n\t\t\tinstrument.envelopes[envelopeIndex].index = targetIndex;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeSetEnvelopeType extends Change {\n\tconstructor(doc: SongDocument, envelopeIndex: number, newValue: number) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.envelopes[envelopeIndex].envelope;\n\t\tif (oldValue != newValue) {\n\t\t\tinstrument.envelopes[envelopeIndex].envelope = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Chord, Transition, Config} from \"../synth/SynthConfig\";\nimport {NotePin, Note, makeNotePin, Pattern, Instrument} from \"../synth/synth\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\nimport {ChangeSequence, UndoableChange} from \"./Change\";\nimport {ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeSizeBend, ChangePitchBend, ChangePitchAdded} from \"./changes\";\nimport {prettyNumber} from \"./EditorConfig\";\n\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\n\tconst clone: T = <T> node.cloneNode(false);\n\tnode.parentNode!.replaceChild(clone, node);\n\treturn clone;\n}\n\nclass PatternCursor {\n\tpublic valid:        boolean = false;\n\tpublic prevNote:     Note | null = null;\n\tpublic curNote:      Note | null = null;\n\tpublic nextNote:     Note | null = null;\n\tpublic pitch:        number = 0;\n\tpublic pitchIndex:   number = -1;\n\tpublic curIndex:     number = 0;\n\tpublic start:        number = 0;\n\tpublic end:          number = 0;\n\tpublic part:         number = 0;\n\tpublic exactPart:    number = 0;\n\tpublic nearPinIndex: number = 0;\n\tpublic pins:         NotePin[] = [];\n}\n\nexport class PatternEditor {\n\tprivate readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\"});\n\tprivate readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\"});\n\tprivate readonly _svgBackground: SVGRectElement = SVG.rect({x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\"});\n\tprivate _svgNoteContainer: SVGSVGElement = SVG.svg();\n\tprivate readonly _svgPlayhead: SVGRectElement = SVG.rect({x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\"});\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"pointer-events\": \"none\", visibility: \"hidden\"});\n\tprivate readonly _svgPreview: SVGPathElement = SVG.path({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\"});\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\"},\n\t\tSVG.defs(\n\t\t\tthis._svgNoteBackground,\n\t\t\tthis._svgDrumBackground,\n\t\t),\n\t\tthis._svgBackground,\n\t\tthis._selectionRect,\n\t\tthis._svgNoteContainer,\n\t\tthis._svgPreview,\n\t\tthis._svgPlayhead,\n\t);\n\tpublic readonly container: HTMLDivElement = HTML.div({style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\"}, this._svg);\n\t\n\tprivate readonly _backgroundPitchRows: SVGRectElement[] = [];\n\tprivate readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\n\t\n\tprivate _editorWidth: number;\n\tprivate _editorHeight: number;\n\tprivate _partWidth: number;\n\tprivate _pitchHeight: number = -1;\n\tprivate _pitchCount: number;\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _mouseDragging: boolean = false;\n\tprivate _mouseHorizontal: boolean = false;\n\tprivate _usingTouch: boolean = false;\n\tprivate _copiedPinChannels: NotePin[][] = [];\n\tprivate _copiedPins: NotePin[];\n\tprivate _mouseXStart: number = 0;\n\tprivate _mouseYStart: number = 0;\n\tprivate _ctrlHeld: boolean = false;\n\tprivate _shiftHeld: boolean = false;\n\tprivate _touchTime: number = 0;\n\tprivate _draggingStartOfSelection: boolean = false;\n\tprivate _draggingEndOfSelection: boolean = false;\n\tprivate _draggingSelectionContents: boolean = false;\n\tprivate _dragTime: number = 0;\n\tprivate _dragPitch: number = 0;\n\tprivate _dragSize: number = 0;\n\tprivate _dragVisible: boolean = false;\n\tprivate _dragChange: UndoableChange | null = null;\n\tprivate _changePatternSelection: UndoableChange | null = null;\n\tprivate _lastChangeWasPatternSelection: boolean = false;\n\tprivate _cursor: PatternCursor = new PatternCursor();\n\tprivate _pattern: Pattern | null = null;\n\tprivate _playheadX: number = 0.0;\n\tprivate _octaveOffset: number = 0;\n\tprivate _renderedWidth: number = -1;\n\tprivate _renderedHeight: number = -1;\n\tprivate _renderedBeatWidth: number = -1;\n\tprivate _renderedPitchHeight: number = -1;\n\tprivate _renderedFifths: boolean = false;\n\tprivate _renderedDrums: boolean = false;\n\tprivate _renderedRhythm: number = -1;\n\tprivate _renderedPitchChannelCount: number = -1;\n\tprivate _renderedNoiseChannelCount: number = -1;\n\tprivate _followPlayheadBar: number = -1;\n\t\n\tconstructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\n\t\tfor (let i: number = 0; i < Config.pitchesPerOctave; i++) {\n\t\t\tconst rectangle: SVGRectElement = SVG.rect();\n\t\t\trectangle.setAttribute(\"x\", \"1\");\n\t\t\trectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\n\t\t\tthis._svgNoteBackground.appendChild(rectangle);\n\t\t\tthis._backgroundPitchRows[i] = rectangle;\n\t\t}\n\n\t\tthis._backgroundDrumRow.setAttribute(\"x\", \"1\");\n\t\tthis._backgroundDrumRow.setAttribute(\"y\", \"1\");\n\t\tthis._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\n\t\tthis._svgDrumBackground.appendChild(this._backgroundDrumRow);\n\t\t\n\t\tif (this._interactive) {\n\t\t\tthis._updateCursorStatus();\n\t\t\tthis._updatePreview();\n\t\t\twindow.requestAnimationFrame(this._animatePlayhead);\n\t\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\n\t\t\tthis._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\t\tthis._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\t\tthis._svg.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\t\tthis._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t\t} else {\n\t\t\tthis._svgPlayhead.style.display = \"none\";\n\t\t\tthis._svg.appendChild(SVG.rect({x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\"}));\n\t\t}\n\t\t\n\t\tthis.resetCopiedPins();\n\t}\n\t\n\tprivate _getMaxPitch(): number {\n\t\treturn this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch;\n\t}\n\t\n\tprivate _getMaxDivision(): number {\n\t\tconst rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\n\t\tif (rhythmStepsPerBeat % 4 == 0) {\n\t\t\t// Beat is divisible by 2 (and 4).\n\t\t\treturn Config.partsPerBeat / 2;\n\t\t} else if (rhythmStepsPerBeat % 3 == 0) {\n\t\t\t// Beat is divisible by 3.\n\t\t\treturn Config.partsPerBeat / 3;\n\t\t} else if (rhythmStepsPerBeat % 2 == 0) {\n\t\t\t// Beat is divisible by 2.\n\t\t\treturn Config.partsPerBeat / 2;\n\t\t}\n\t\treturn Config.partsPerBeat;\n\t}\n\t\n\tprivate _getMinDivision(): number {\n\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\n\t}\n\t\n\tprivate _snapToMinDivision(input: number): number {\n\t\tconst minDivision: number = this._getMinDivision();\n\t\treturn Math.floor(input / minDivision) * minDivision;\n\t}\n\t\n\tprivate _updateCursorStatus(): void {\n\t\tthis._cursor = new PatternCursor();\n\t\t\n\t\tif (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\n\t\t\n\t\tconst minDivision: number = this._getMinDivision();\n\t\tthis._cursor.exactPart = this._mouseX / this._partWidth;\n\t\tthis._cursor.part =\n\t\t\tMath.floor(\n\t\t\t\tMath.max(0,\n\t\t\t\t\tMath.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\n\t\t\t\t)\n\t\t\t/ minDivision) * minDivision;\n\t\t\n\t\tif (this._pattern != null) {\n\t\t\tfor (const note of this._pattern.notes) {\n\t\t\t\tif (note.end <= this._cursor.exactPart) {\n\t\t\t\t\tthis._cursor.prevNote = note;\n\t\t\t\t\tthis._cursor.curIndex++;\n\t\t\t\t} else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\n\t\t\t\t\tthis._cursor.curNote = note;\n\t\t\t\t} else if (note.start > this._cursor.exactPart) {\n\t\t\t\t\tthis._cursor.nextNote = note;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet mousePitch: number = this._findMousePitch(this._mouseY);\n\t\t\n\t\tif (this._cursor.curNote != null) {\n\t\t\tthis._cursor.start = this._cursor.curNote.start;\n\t\t\tthis._cursor.end   = this._cursor.curNote.end;\n\t\t\tthis._cursor.pins  = this._cursor.curNote.pins;\n\t\t\t\n\t\t\tlet interval: number = 0;\n\t\t\tlet error: number = 0;\n\t\t\tlet prevPin: NotePin;\n\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\n\t\t\tfor (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\n\t\t\t\tprevPin = nextPin;\n\t\t\t\tnextPin = this._cursor.curNote.pins[j];\n\t\t\t\tconst leftSide:    number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\n\t\t\t\tconst rightSide:   number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\n\t\t\t\tif (this._mouseX > rightSide) continue;\n\t\t\t\tif (this._mouseX < leftSide) throw new Error();\n\t\t\t\tconst intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\n\t\t\t\tconst arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\n\t\t\t\tconst bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\n\t\t\t\tinterval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\n\t\t\t\terror = arc * bendHeight + 0.95;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tlet minInterval: number = Number.MAX_VALUE;\n\t\t\tlet maxInterval: number = -Number.MAX_VALUE;\n\t\t\tlet bestDistance: number = Number.MAX_VALUE;\n\t\t\tfor (const pin of this._cursor.curNote.pins) {\n\t\t\t\tif (minInterval > pin.interval) minInterval = pin.interval;\n\t\t\t\tif (maxInterval < pin.interval) maxInterval = pin.interval;\n\t\t\t\tconst pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\n\t\t\t\tif (bestDistance > pinDistance) {\n\t\t\t\t\tbestDistance = pinDistance;\n\t\t\t\t\tthis._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tmousePitch -= interval;\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, this._getMaxPitch() - maxInterval);\n\t\t\t\n\t\t\t// Snap to nearby existing note if present.\n\t\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel)) {\n\t\t\t\tlet nearest: number = error;\n\t\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\n\t\t\t\t\tconst distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\n\t\t\t\t\tif (distance > nearest) continue;\n\t\t\t\t\tnearest = distance;\n\t\t\t\t\tthis._cursor.pitch = this._cursor.curNote.pitches[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\n\t\t\t\tif (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\n\t\t\t\t\tthis._cursor.pitchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, 0, this._getMaxPitch());\n\t\t\tconst defaultLength: number = this._copiedPins[this._copiedPins.length-1].time;\n\t\t\tconst fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\n\t\t\tconst maxDivision: number = this._getMaxDivision();\n\t\t\tconst modMouse: number = this._cursor.part % Config.partsPerBeat;\n\t\t\tif (defaultLength == 1) {\n\t\t\t\tthis._cursor.start = this._cursor.part;\n\t\t\t} else if (defaultLength > Config.partsPerBeat) {\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\n\t\t\t} else if (defaultLength == Config.partsPerBeat) {\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\n\t\t\t\tif (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\n\t\t\t\t\tthis._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\n\t\t\t\tlet division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\n\t\t\t\twhile (division < maxDivision && Config.partsPerBeat % division != 0) {\n\t\t\t\t\tdivision++;\n\t\t\t\t}\n\t\t\t\tthis._cursor.start += Math.floor(modMouse / division) * division;\n\t\t\t}\n\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\n\t\t\tlet forceStart: number = 0;\n\t\t\tlet forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\t\t\tif (this._cursor.prevNote != null) {\n\t\t\t\tforceStart = this._cursor.prevNote.end;\n\t\t\t}\n\t\t\tif (this._cursor.nextNote != null) {\n\t\t\t\tforceEnd   = this._cursor.nextNote.start;\n\t\t\t}\n\t\t\tif (this._cursor.start < forceStart) {\n\t\t\t\tthis._cursor.start = forceStart;\n\t\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\n\t\t\t\tif (this._cursor.end > forceEnd) {\n\t\t\t\t\tthis._cursor.end = forceEnd;\n\t\t\t\t}\n\t\t\t} else if (this._cursor.end > forceEnd) {\n\t\t\t\tthis._cursor.end = forceEnd;\n\t\t\t\tthis._cursor.start = this._cursor.end - defaultLength;\n\t\t\t\tif (this._cursor.start < forceStart) {\n\t\t\t\t\tthis._cursor.start = forceStart;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (this._cursor.end - this._cursor.start == defaultLength) {\n\t\t\t\tthis._cursor.pins = this._copiedPins;\n\t\t\t} else {\n\t\t\t\tthis._cursor.pins = [];\n\t\t\t\tfor (const oldPin of this._copiedPins) {\n\t\t\t\t\tif (oldPin.time <= this._cursor.end - this._cursor.start) {\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.size));\n\t\t\t\t\t\tif (oldPin.time == this._cursor.end - this._cursor.start) break;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.size));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._cursor.valid = true;\n\t}\n\t\n\tprivate _cursorIsInSelection(): boolean {\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\n\t}\n\t\n\tprivate _cursorAtStartOfSelection(): boolean {\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\n\t}\n\t\n\tprivate _cursorAtEndOfSelection(): boolean {\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\n\t}\n\t\n\tprivate _findMousePitch(pixelY: number): number {\n\t\treturn Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\n\t}\n\t\n\tprivate _snapToPitch(guess: number, min: number, max: number): number {\n\t\tif (guess < min) guess = min;\n\t\tif (guess > max) guess = max;\n\t\tconst scale: ReadonlyArray<boolean> = this._doc.prefs.notesOutsideScale ? Config.scales.dictionary[\"expert\"].flags : Config.scales[this._doc.song.scale].flags;\n\t\tif (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\n\t\t\treturn Math.floor(guess);\n\t\t} else {\n\t\t\tlet topPitch: number = Math.floor(guess) + 1;\n\t\t\tlet bottomPitch: number = Math.floor(guess) - 1;\n\t\t\twhile (!scale[topPitch % Config.pitchesPerOctave]) {\n\t\t\t\ttopPitch++;\n\t\t\t}\n\t\t\twhile (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\n\t\t\t\tbottomPitch--;\n\t\t\t}\n\t\t\tif (topPitch > max) {\n\t\t\t\tif (bottomPitch < min) {\n\t\t\t\t\treturn min;\n\t\t\t\t} else {\n\t\t\t\t\treturn bottomPitch;\n\t\t\t\t}\n\t\t\t} else if (bottomPitch < min) {\n\t\t\t\treturn topPitch;\n\t\t\t}\n\t\t\tlet topRange: number = topPitch;\n\t\t\tlet bottomRange: number = bottomPitch + 1;\n\t\t\tif (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\n\t\t\t\ttopRange -= 0.5;\n\t\t\t}\n\t\t\tif (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\n\t\t\t\tbottomRange += 0.5;\n\t\t\t}\n\t\t\treturn guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\n\t\t}\n\t}\n\t\n\tprivate _copyPins(note: Note): void {\n\t\tthis._copiedPins = [];\n\t\tfor (const oldPin of note.pins) {\n\t\t\tthis._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.size));\n\t\t}\n\t\tfor (let i: number = 1; i < this._copiedPins.length - 1; ) {\n\t\t\tif (this._copiedPins[i-1].size == this._copiedPins[i].size && \n\t\t\t\tthis._copiedPins[i].size == this._copiedPins[i+1].size)\n\t\t\t{\n\t\t\t\tthis._copiedPins.splice(i, 1);\n\t\t\t} else {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\tthis._copiedPinChannels[this._doc.channel] = this._copiedPins;\n\t}\n\t\n\tpublic movePlayheadToMouse(): boolean {\n\t\tif (this._mouseOver) {\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tpublic resetCopiedPins = (): void => {\n\t\tconst maxDivision: number = this._getMaxDivision();\n\t\tthis._copiedPinChannels.length = this._doc.song.getChannelCount();\n\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, Config.noteSizeMax), makeNotePin(0, maxDivision, Config.noteSizeMax)];\n\t\t}\n\t\tfor (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.getChannelCount(); i++) {\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, Config.noteSizeMax), makeNotePin(0, maxDivision, 0)];\n\t\t}\n\t}\n\t\n\tprivate _animatePlayhead = (timestamp: number): void => {\n\t\t\n\t\tif (this._usingTouch && !this._shiftHeld && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\n\t\t\t// On a mobile device, the pattern editor supports using a long stationary touch to activate selection.\n\t\t\tthis._dragChange!.undo();\n\t\t\tthis._shiftHeld = true;\n\t\t\tthis._whenCursorPressed();\n\t\t\t// The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\n\t\t\tthis._doc.notifier.notifyWatchers();\n\t\t}\n\t\t\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\n\t\t\n\t\tif (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"visible\");\n\t\t\tconst modPlayhead: number = this._doc.synth.playhead - playheadBar;\n\t\t\tif (Math.abs(modPlayhead - this._playheadX) > 0.1) {\n\t\t\t\tthis._playheadX = modPlayhead;\n\t\t\t} else {\n\t\t\t\tthis._playheadX += (modPlayhead - this._playheadX) * 0.2;\n\t\t\t}\n\t\t\tthis._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\n\t\t} else {\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\n\t\t}\n\t\t\n\t\tif (this._doc.synth.playing && (this._doc.synth.recording || this._doc.prefs.autoFollow) && this._followPlayheadBar != playheadBar) {\n\t\t\t// When autofollow is enabled, select the current bar (but don't record it in undo history).\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\n\t\t\t// The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\n\t\t\tthis._doc.notifier.notifyWatchers();\n\t\t}\n\t\tthis._followPlayheadBar = playheadBar;\n\t\t\n\t\tif (this._doc.currentPatternIsDirty) {\n\t\t\tthis._redrawNotePatterns();\n\t\t}\n\t\t\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\n\t}\n\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._usingTouch = false;\n\t}\n\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._usingTouch = false;\n\t\tthis._ctrlHeld = event.ctrlKey || event.metaKey;\n\t\tthis._shiftHeld = event.shiftKey;\n\t\tthis._whenCursorPressed();\n\t}\n\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._usingTouch = true;\n\t\tthis._ctrlHeld = event.ctrlKey || event.metaKey;\n\t\tthis._shiftHeld = event.shiftKey;\n\t\tthis._touchTime = performance.now();\n\t\tthis._whenCursorPressed();\n\t}\n\t\n\tprivate _whenCursorPressed(): void {\n\t\tif (this._doc.prefs.enableNotePreview) this._doc.synth.maintainLiveInput();\n\t\tthis._mouseDown = true;\n\t\tthis._mouseXStart = this._mouseX;\n\t\tthis._mouseYStart = this._mouseY;\n\t\tthis._updateCursorStatus();\n\t\tthis._updatePreview();\n\t\tconst sequence: ChangeSequence = new ChangeSequence();\n\t\tthis._dragChange = sequence;\n\t\tthis._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\n\t\tthis._doc.setProspectiveChange(this._dragChange);\n\t\t\n\t\tif (this._cursorAtStartOfSelection()) {\n\t\t\tthis._draggingStartOfSelection = true;\n\t\t} else if (this._cursorAtEndOfSelection()) {\n\t\t\tthis._draggingEndOfSelection = true;\n\t\t} else if (this._shiftHeld) {\n\t\t\tif ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\t\t\t} else {\n\t\t\t\tif (this._cursor.curNote != null) {\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\n\t\t\t\t} else {\n\t\t\t\t\tconst start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\n\t\t\t\t\tconst end: number = start + Config.partsPerBeat;\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._cursorIsInSelection()) {\n\t\t\tthis._draggingSelectionContents = true;\n\t\t} else if (this._cursor.valid && this._cursor.curNote == null) {\n\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\t\t\t\n\t\t\t// If clicking in empty space, the result will be adding a note,\n\t\t\t// so we can safely add it immediately. Note that if clicking on\n\t\t\t// or near an existing note, the result will depend on whether\n\t\t\t// a drag follows, so we couldn't add the note yet without being\n\t\t\t// confusing.\n\t\t\t\n\t\t\tconst note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.channel));\n\t\t\tnote.pins = [];\n\t\t\tfor (const oldPin of this._cursor.pins) {\n\t\t\t\tnote.pins.push(makeNotePin(0, oldPin.time, oldPin.size));\n\t\t\t}\n\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\n\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n\t\t\tif (pattern == null) throw new Error();\n\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\n\t\t\t\n\t\t\tif (this._doc.prefs.enableNotePreview && !this._doc.synth.playing) {\n\t\t\t\t// Play the new note out loud if enabled.\n\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\n\t\t\t\tthis._doc.performance.setTemporaryPitches([this._cursor.pitch], duration);\n\t\t\t}\n\t\t}\n\t\tthis._updateSelection();\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._usingTouch = false;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._doc.prefs.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\n\t\t\n\t\t// HACK: Undoable pattern changes rely on persistent instance\n\t\t// references. Loading song from hash via undo/redo breaks that,\n\t\t// so changes are no longer undoable and the cursor status may be\n\t\t// invalid. Abort further drag changes until the mouse is released.\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\n\t\t\n\t\tif (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\n\t\t\tconst dx: number = this._mouseX - this._mouseXStart;\n\t\t\tconst dy: number = this._mouseY - this._mouseYStart;\n\t\t\tif (Math.sqrt(dx * dx + dy * dy) > 5) {\n\t\t\t\tthis._mouseDragging = true;\n\t\t\t\tthis._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\n\t\t\tthis._dragChange!.undo();\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\n\t\t\tthis._dragChange = sequence;\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\n\t\t\t\n\t\t\tconst minDivision: number = this._getMinDivision();\n\t\t\tconst currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\n\t\t\tif (this._draggingStartOfSelection) {\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\n\t\t\t\tthis._updateSelection();\n\t\t\t} else if (this._draggingEndOfSelection) {\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\n\t\t\t\tthis._updateSelection();\n\t\t\t} else if (this._draggingSelectionContents) {\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n\t\t\t\tif (this._mouseDragging && pattern != null) {\n\t\t\t\t\tthis._dragChange!.undo();\n\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\n\t\t\t\t\tthis._dragChange = sequence;\n\t\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\n\t\t\t\t\t\n\t\t\t\t\tconst notesInScale: number = Config.scales[this._doc.song.scale].flags.filter(x=>x).length;\n\t\t\t\t\tconst pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : 12 / notesInScale;\n\t\t\t\t\tconst draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\n\t\t\t\t\tconst draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\n\t\t\t\t\tsequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (this._shiftHeld) {\n\t\t\t\t\n\t\t\t\tif (this._mouseDragging) {\n\t\t\t\t\tlet start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\n\t\t\t\t\tlet end: number = start + Config.partsPerBeat;\n\t\t\t\t\tif (this._cursor.curNote != null) {\n\t\t\t\t\t\tstart = Math.max(start, this._cursor.curNote.start);\n\t\t\t\t\t\tend = Math.min(end, this._cursor.curNote.end);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Todo: The following two conditional blocks could maybe be refactored.\n\t\t\t\t\tif (currentPart < start) {\n\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n\t\t\t\t\t\tif (pattern != null) {\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start <= currentPart) {\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].start;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end <= currentPart) {\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].end;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\n\t\t\t\t\t\t\tif (start <= part && part <= currentPart) {\n\t\t\t\t\t\t\t\tstart = part;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (currentPart > end) {\n\t\t\t\t\t\tend = Config.partsPerBeat * this._doc.song.beatsPerBar;\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n\t\t\t\t\t\tif (pattern != null) {\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start >= currentPart) {\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].start;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end >= currentPart) {\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].end;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\n\t\t\t\t\t\t\tif (currentPart < part && part < end) {\n\t\t\t\t\t\t\t\tend = part;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\n\t\t\t\t\tthis._updateSelection();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (this._cursor.curNote == null) {\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\t\t\t\t\t\n\t\t\t\t\tlet backwards: boolean;\n\t\t\t\t\tlet directLength: number;\n\t\t\t\t\tif (currentPart < this._cursor.start) {\n\t\t\t\t\t\tbackwards = true;\n\t\t\t\t\t\tdirectLength = this._cursor.start - currentPart;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbackwards = false;\n\t\t\t\t\t\tdirectLength = currentPart - this._cursor.start + minDivision;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet defaultLength: number = minDivision;\n\t\t\t\t\tfor (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\n\t\t\t\t\t\tif (minDivision == 1) {\n\t\t\t\t\t\t\tif (i < 5) {\n\t\t\t\t\t\t\t\t// Allow small lengths.\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat / 2.0) {\n\t\t\t\t\t\t\t\tif (i % 3 != 0 && i % 4 != 0) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat * 1.5) {\n\t\t\t\t\t\t\t\tif (i % 6 != 0 && i % 8 != 0) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (i % Config.partsPerBeat != 0) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (i >= 5 * minDivision &&\n\t\t\t\t\t\t\t\ti % Config.partsPerBeat != 0 &&\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 4.0 &&\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 2.0 &&\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 4.0 / 3.0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst blessedLength: number = i;\n\t\t\t\t\t\tif (blessedLength == directLength) {\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (blessedLength < directLength) {\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (blessedLength > directLength) {\n\t\t\t\t\t\t\tif (defaultLength < directLength - minDivision) {\n\t\t\t\t\t\t\t\tdefaultLength = blessedLength;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet start: number;\n\t\t\t\t\tlet end: number;\n\t\t\t\t\tif (backwards) {\n\t\t\t\t\t\tend = this._cursor.start;\n\t\t\t\t\t\tstart = end - defaultLength;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstart = this._cursor.start;\n\t\t\t\t\t\tend = start + defaultLength;\n\t\t\t\t\t}\n\t\t\t\t\tconst continuesLastPattern: boolean = (start < 0);\n\t\t\t\t\tif (start < 0) start = 0;\n\t\t\t\t\tif (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\t\t\t\t\t\n\t\t\t\t\tif (start < end) {\n\t\t\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n\t\t\t\t\t\tif (pattern == null) throw new Error();\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end));\n\t\t\t\t\t\tlet i: number;\n\t\t\t\t\t\tfor (i = 0; i < pattern.notes.length; i++) {\n\t\t\t\t\t\t\tif (pattern.notes[i].start >= end) break;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst theNote: Note = new Note(this._cursor.pitch, start, end, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.channel));\n\t\t\t\t\t\ttheNote.continuesLastPattern = continuesLastPattern;\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\n\t\t\t\t\t\tthis._copyPins(theNote);\n\t\t\t\t\t\n\t\t\t\t\t\tthis._dragTime = backwards ? start : end;\n\t\t\t\t\t\tthis._dragPitch = this._cursor.pitch;\n\t\t\t\t\t\tthis._dragSize = theNote.pins[backwards ? 0 : 1].size;\n\t\t\t\t\t\tthis._dragVisible = true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis._pattern = this._doc.getCurrentPattern(this._barOffset);\n\t\t\t\t} else if (this._mouseHorizontal) {\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\t\t\t\t\t\n\t\t\t\t\tconst shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\n\t\t\t\t\t\n\t\t\t\t\tconst shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\n\t\t\t\t\tlet shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\n\t\t\t\t\tconst continuesLastPattern: boolean = (shiftedTime < 0.0);\n\t\t\t\t\tif (shiftedTime < 0) shiftedTime = 0;\n\t\t\t\t\tif (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\t\t\t\t\t\n\t\t\t\t\tif (this._pattern == null) throw new Error();\n\t\t\t\t\t\n\t\t\t\t\tif (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\n\t\t\t\t\t\tshiftedTime >= this._cursor.curNote.end   && this._cursor.nearPinIndex == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis._dragVisible = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start: number = Math.min(this._cursor.curNote.start, shiftedTime);\n\t\t\t\t\t\tconst   end: number = Math.max(this._cursor.curNote.end,   shiftedTime);\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis._dragTime = shiftedTime;\n\t\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\n\t\t\t\t\t\tthis._dragSize = this._cursor.curNote.pins[this._cursor.nearPinIndex].size;\n\t\t\t\t\t\tthis._dragVisible = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\n\t\t\t\t\t\tsequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime, continuesLastPattern));\n\t\t\t\t\t\tthis._copyPins(this._cursor.curNote);\n\t\t\t\t\t}\n\t\t\t\t} else if (this._cursor.pitchIndex == -1) {\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\t\t\t\t\t\n\t\t\t\t\tconst bendPart: number = \n\t\t\t\t\t\tMath.max(this._cursor.curNote.start,\n\t\t\t\t\t\t\tMath.min(this._cursor.curNote.end,\n\t\t\t\t\t\t\t\tMath.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) - this._cursor.curNote.start;\n\t\t\t\t\t\n\t\t\t\t\tlet prevPin: NotePin;\n\t\t\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\n\t\t\t\t\tlet bendSize: number = 0;\n\t\t\t\t\tlet bendInterval: number = 0;\n\t\t\t\t\tfor (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\n\t\t\t\t\t\tprevPin = nextPin;\n\t\t\t\t\t\tnextPin = this._cursor.curNote.pins[i];\n\t\t\t\t\t\tif (bendPart > nextPin.time) continue;\n\t\t\t\t\t\tif (bendPart < prevPin.time) throw new Error();\n\t\t\t\t\t\tconst sizeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\n\t\t\t\t\t\tbendSize = Math.round(prevPin.size * (1.0 - sizeRatio) + nextPin.size * sizeRatio + ((this._mouseYStart - this._mouseY) / (75.0 / Config.noteSizeMax)));\n\t\t\t\t\t\tif (bendSize < 0) bendSize = 0;\n\t\t\t\t\t\tif (bendSize > Config.noteSizeMax) bendSize = Config.noteSizeMax;\n\t\t\t\t\t\tbendInterval = this._snapToPitch(Math.round(prevPin.interval * (1.0 - sizeRatio) + nextPin.interval * sizeRatio + this._cursor.curNote.pitches[0]), 0, this._getMaxPitch()) - this._cursor.curNote.pitches[0];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis._dragTime = this._cursor.curNote.start + bendPart;\n\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\n\t\t\t\t\tthis._dragSize = bendSize;\n\t\t\t\t\tthis._dragVisible = true;\n\t\t\t\t\t\n\t\t\t\t\tsequence.append(new ChangeSizeBend(this._doc, this._cursor.curNote, bendPart, bendSize, bendInterval, this._ctrlHeld));\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\n\t\t\t\t} else {\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\t\t\t\t\t\n\t\t\t\t\tthis._dragSize = this._cursor.curNote.pins[this._cursor.nearPinIndex].size;\n\t\t\t\t\t\n\t\t\t\t\tif (this._pattern == null) throw new Error();\n\t\t\t\t\t\n\t\t\t\t\tlet bendStart: number;\n\t\t\t\t\tlet bendEnd: number;\n\t\t\t\t\tif (this._mouseX >= this._mouseXStart) {\n\t\t\t\t\t\tbendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\n\t\t\t\t\t\tbendEnd   = currentPart + minDivision;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\n\t\t\t\t\t\tbendEnd   = currentPart;\n\t\t\t\t\t}\n\t\t\t\t\tif (bendEnd < 0) bendEnd = 0;\n\t\t\t\t\tif (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\t\t\t\t\tif (bendEnd > this._cursor.curNote.end) {\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\n\t\t\t\t\t}\n\t\t\t\t\tif (bendEnd < this._cursor.curNote.start) {\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet minPitch: number = Number.MAX_VALUE;\n\t\t\t\t\tlet maxPitch: number = -Number.MAX_VALUE;\n\t\t\t\t\tfor (const pitch of this._cursor.curNote.pitches) {\n\t\t\t\t\t\tif (minPitch > pitch) minPitch = pitch;\n\t\t\t\t\t\tif (maxPitch < pitch) maxPitch = pitch;\n\t\t\t\t\t}\n\t\t\t\t\tminPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\n\t\t\t\t\tmaxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\n\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, this._getMaxPitch() - maxPitch);\n\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\n\t\t\t\t\t\n\t\t\t\t\tthis._dragTime = bendEnd;\n\t\t\t\t\tthis._dragPitch = bendTo;\n\t\t\t\t\tthis._dragVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!(this._mouseDown && this._cursor.valid && continuousState)) {\n\t\t\tthis._updateCursorStatus();\n\t\t\tthis._updatePreview();\n\t\t}\n\t}\n\t\n\tprivate _whenCursorReleased = (event: Event | null): void => {\n\t\tif (!this._cursor.valid) return;\n\t\t\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\n\t\tif (this._mouseDown && continuousState && this._dragChange != null) {\n\t\t\t\n\t\t\tif (this._draggingSelectionContents) {\n\t\t\t\tthis._doc.record(this._dragChange);\n\t\t\t\tthis._dragChange = null;\n\t\t\t} else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\n\t\t\t\tthis._setPatternSelection(this._dragChange);\n\t\t\t\tthis._dragChange = null;\n\t\t\t} else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\n\t\t\t\tthis._doc.record(this._dragChange);\n\t\t\t\tthis._dragChange = null;\n\t\t\t} else {\n\t\t\t\tif (this._pattern == null) throw new Error();\n\t\t\t\t\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\t\t\t\t\n\t\t\t\tif (this._cursor.pitchIndex == -1) {\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == Config.maxChordSize) {\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\n\t\t\t\t\t}\n\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\n\t\t\t\t\t\n\t\t\t\t\tif (this._doc.prefs.enableNotePreview && !this._doc.synth.playing) {\n\t\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\n\t\t\t\t\t\tthis._doc.performance.setTemporaryPitches(this._cursor.curNote.pitches, duration);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == 1) {\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._doc.record(sequence);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._mouseDown = false;\n\t\tthis._mouseDragging = false;\n\t\tthis._draggingStartOfSelection = false;\n\t\tthis._draggingEndOfSelection = false;\n\t\tthis._draggingSelectionContents = false;\n\t\tthis._lastChangeWasPatternSelection = false;\n\t\tthis._updateCursorStatus();\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _setPatternSelection(change: UndoableChange): void {\n\t\tthis._changePatternSelection = change;\n\t\t// Don't erase existing redo history just to change pattern selection.\n\t\tif (!this._doc.hasRedoHistory()) {\n\t\t\tthis._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\n\t\t}\n\t}\n\t\n\tprivate _updatePreview(): void {\n\t\tif (this._usingTouch) {\n\t\t\tif (!this._mouseDown || !this._cursor.valid  || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\n\t\t\t} else {\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\n\t\t\t\t\n\t\t\t\tconst x: number = this._partWidth * this._dragTime;\n\t\t\t\tconst y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\n\t\t\t\tconst radius: number = this._pitchHeight / 2;\n\t\t\t\tconst width: number = 80;\n\t\t\t\tconst height: number = 60;\n\t\t\t\t//this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\n\t\t\t\t\n\t\t\t\tlet pathString: string = \"\";\n\t\t\t\t\n\t\t\t\tconst sizeMax: number = Config.noteSizeMax;\n\t\t\t\tpathString += \"M \" + prettyNumber(x)         + \" \" + prettyNumber(y - radius * (this._dragSize / sizeMax)) + \" \";\n\t\t\t\tpathString += \"L \" + prettyNumber(x)         + \" \" + prettyNumber(y - radius * (this._dragSize / sizeMax) - height) + \" \";\n\t\t\t\tpathString += \"M \" + prettyNumber(x)         + \" \" + prettyNumber(y + radius * (this._dragSize / sizeMax)) + \" \";\n\t\t\t\tpathString += \"L \" + prettyNumber(x)         + \" \" + prettyNumber(y + radius * (this._dragSize / sizeMax) + height) + \" \";\n\t\t\t\tpathString += \"M \" + prettyNumber(x)         + \" \" + prettyNumber(y - radius * (this._dragSize / sizeMax)) + \" \";\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragSize / sizeMax)) + \" \";\n\t\t\t\tpathString += \"M \" + prettyNumber(x)         + \" \" + prettyNumber(y + radius * (this._dragSize / sizeMax)) + \" \";\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragSize / sizeMax)) + \" \";\n\t\t\t\tpathString += \"M \" + prettyNumber(x)         + \" \" + prettyNumber(y - radius * (this._dragSize / sizeMax)) + \" \";\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragSize / sizeMax)) + \" \";\n\t\t\t\tpathString += \"M \" + prettyNumber(x)         + \" \" + prettyNumber(y + radius * (this._dragSize / sizeMax)) + \" \";\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragSize / sizeMax)) + \" \";\n\t\t\t\t\n\t\t\t\tthis._svgPreview.setAttribute(\"d\", pathString);\n\t\t\t}\n\t\t} else {\n\t\t\tif (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\n\t\t\t} else {\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\n\t\t\t\t\n\t\t\t\tif (this._cursorAtStartOfSelection()) {\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionStart;\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\n\t\t\t\t} else if (this._cursorAtEndOfSelection()) {\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\n\t\t\t\t} else if (this._cursorIsInSelection()) {\n\t\t\t\t\tconst left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\n\t\t\t\t\tconst right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\n\t\t\t\t} else {\n\t\t\t\t\tthis._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _updateSelection(): void {\n\t\tif (this._doc.selection.patternSelectionActive) {\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\n\t\t} else {\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\n\t\t}\n\t}\n\t\n\tpublic render(): void {\n\t\tconst nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n\t\tif (this._pattern != nextPattern && this._pattern != null) {\n\t\t\tthis._dragChange = null;\n\t\t\tthis._whenCursorReleased(null);\n\t\t}\n\t\tthis._pattern = nextPattern;\n\t\t\n\t\tthis._editorWidth = this.container.clientWidth;\n\t\tthis._editorHeight = this.container.clientHeight;\n\t\tthis._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\n\t\tthis._pitchCount = this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount : this._doc.getVisiblePitchCount();\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\n\t\tthis._octaveOffset = this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\n\t\t\n\t\tif (this._renderedRhythm != this._doc.song.rhythm || \n\t\t\tthis._renderedPitchChannelCount != this._doc.song.pitchChannelCount || \n\t\t\tthis._renderedNoiseChannelCount != this._doc.song.noiseChannelCount)\n\t\t{\n\t\t\tthis._renderedRhythm = this._doc.song.rhythm;\n\t\t\tthis._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\n\t\t\tthis._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\n\t\t\tthis.resetCopiedPins();\n\t\t}\n\t\t\n\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\n\t\t\n\t\tif (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\n\t\t\tthis._renderedWidth = this._editorWidth;\n\t\t\tthis._renderedHeight = this._editorHeight;\n\t\t\tthis._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\n\t\t\tthis._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\n\t\t\tthis._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\n\t\t\tthis._selectionRect.setAttribute(\"y\", \"0\");\n\t\t\tthis._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\n\t\t}\n\t\t\n\t\tconst beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\n\t\tif (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight) {\n\t\t\tthis._renderedBeatWidth = beatWidth;\n\t\t\tthis._renderedPitchHeight = this._pitchHeight;\n\t\t\tthis._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\n\t\t\tthis._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * Config.pitchesPerOctave));\n\t\t\tthis._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\n\t\t\tthis._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\n\t\t\tthis._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\n\t\t\tthis._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\n\t\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\n\t\t\t\tconst rectangle: SVGRectElement = this._backgroundPitchRows[j];\n\t\t\t\tconst y: number = (Config.pitchesPerOctave - j) % Config.pitchesPerOctave;\n\t\t\t\trectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\n\t\t\t\trectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\n\t\t\t\trectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this._interactive) {\n\t\t\tif (!this._mouseDown) this._updateCursorStatus();\n\t\t\tthis._updatePreview();\n\t\t\tthis._updateSelection();\n\t\t}\n\t\t\n\t\tif (this._renderedFifths != this._doc.prefs.showFifth) {\n\t\t\tthis._renderedFifths = this._doc.prefs.showFifth;\n\t\t\tthis._backgroundPitchRows[7].setAttribute(\"fill\", this._doc.prefs.showFifth ? ColorConfig.fifthNote : ColorConfig.pitchBackground);\n\t\t}\n\t\t\n\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\n\t\t\tthis._backgroundPitchRows[j].style.visibility = Config.scales[this._doc.song.scale].flags[j] ? \"visible\" : \"hidden\";\n\t\t}\n\t\t\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\n\t\t\tif (!this._renderedDrums) {\n\t\t\t\tthis._renderedDrums = true;\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._renderedDrums) {\n\t\t\t\tthis._renderedDrums = false;\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._redrawNotePatterns();\n\t}\n\t\n\tprivate _redrawNotePatterns(): void {\n\t\tthis._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\n\t\t\n\t\tif (this._doc.prefs.showChannels) {\n\t\t\tfor (let channel: number = this._doc.song.getChannelCount() - 1; channel >= 0; channel--) {\n\t\t\t\tif (channel == this._doc.channel) continue;\n\t\t\t\tif (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\n\t\t\t\t\n\t\t\t\tconst pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\n\t\t\t\tif (pattern2 == null) continue;\n\t\t\t\t\n\t\t\t\tconst octaveOffset: number = this._doc.getBaseVisibleOctave(channel) * Config.pitchesPerOctave;\n\t\t\t\tfor (const note of pattern2.notes) {\n\t\t\t\t\tfor (const pitch of note.pitches) {\n\t\t\t\t\t\tconst notePath: SVGPathElement = SVG.path();\n\t\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\n\t\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\n\t\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, octaveOffset);\n\t\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this._pattern != null) {\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\tconst chord: Chord = instrument.getChord();\n\t\t\tconst transition: Transition = instrument.getTransition();\n\t\t\tconst displayNumberedChords: boolean = chord.customInterval || chord.arpeggiates || chord.strumParts > 0 || transition.slides;\n\t\t\tfor (const note of this._pattern.notes) {\n\t\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\n\t\t\t\t\tconst pitch: number = note.pitches[i];\n\t\t\t\t\tlet notePath: SVGPathElement = SVG.path();\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight / 2 + 1, false, this._octaveOffset);\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\n\t\t\t\t\tnotePath = SVG.path();\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\n\t\t\t\t\t\n\t\t\t\t\tlet indicatorOffset: number = 2;\n\t\t\t\t\tif (note.continuesLastPattern) {\n\t\t\t\t\t\tconst arrowHeight: number = Math.min(this._pitchHeight, 20);\n\t\t\t\t\t\tlet arrowPath: string;\n\t\t\t\t\t\tarrowPath  = \"M \" + prettyNumber(this._partWidth * note.start + indicatorOffset)      + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.1 * arrowHeight);\n\t\t\t\t\t\tarrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset)      + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.1 * arrowHeight);\n\t\t\t\t\t\tarrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4)  + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.1 * arrowHeight);\n\t\t\t\t\t\tarrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4)  + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.3 * arrowHeight);\n\t\t\t\t\t\tarrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 12) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset));\n\t\t\t\t\t\tarrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4)  + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.3 * arrowHeight);\n\t\t\t\t\t\tarrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4)  + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.1 * arrowHeight);\n\t\t\t\t\t\tconst arrow: SVGPathElement = SVG.path();\n\t\t\t\t\t\tarrow.setAttribute(\"d\", arrowPath);\n\t\t\t\t\t\tarrow.setAttribute(\"fill\", ColorConfig.invertedText);\n\t\t\t\t\t\tthis._svgNoteContainer.appendChild(arrow);\n\t\t\t\t\t\tindicatorOffset += 12;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (note.pitches.length > 1) {\n\t\t\t\t\t\tif (displayNumberedChords) {\n\t\t\t\t\t\t\tconst oscillatorLabel: SVGTextElement = SVG.text();\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + indicatorOffset));\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"width\", \"30\");\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"text-anchor\", \"start\");\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"pointer-events\", \"none\");\n\t\t\t\t\t\t\toscillatorLabel.textContent = \"\" + (i + 1);\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(oscillatorLabel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._doc.currentPatternIsDirty = false;\n\t}\n\t\n\tprivate _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showSize: boolean, offset: number): void {\n\t\tconst totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\n\t\tconst endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\n\t\t\n\t\tlet nextPin: NotePin = pins[0];\n\t\t\n\t\tlet pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showSize ? nextPin.size / Config.noteSizeMax : 1.0)) + \" \";\n\t\tfor (let i: number = 1; i < pins.length; i++) {\n\t\t\tlet prevPin: NotePin = nextPin;\n\t\t\tnextPin = pins[i];\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\n\t\t\tlet prevSize: number = showSize ? prevPin.size / Config.noteSizeMax : 1.0;\n\t\t\tlet nextSize: number = showSize ? nextPin.size / Config.noteSizeMax : 1.0;\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevSize) + \" \";\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevSize) + \" \";\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextSize) + \" \";\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextSize) + \" \";\n\t\t}\n\t\tfor (let i: number = pins.length - 2; i >= 0; i--) {\n\t\t\tlet prevPin: NotePin = nextPin;\n\t\t\tnextPin = pins[i];\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\n\t\t\tlet prevSize: number = showSize ? prevPin.size / Config.noteSizeMax : 1.0;\n\t\t\tlet nextSize: number = showSize ? nextPin.size / Config.noteSizeMax : 1.0;\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevSize) + \" \";\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevSize) + \" \";\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextSize) + \" \";\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextSize) + \" \";\n\t\t}\n\t\tpathString += \"z\";\n\t\t\n\t\tsvgElement.setAttribute(\"d\", pathString);\n\t}\n\t\n\tprivate _pitchToPixelHeight(pitch: number): number {\n\t\treturn this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {InstrumentType, Config} from \"../synth/SynthConfig\";\nimport {Instrument} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {ChangeSetEnvelopeTarget, ChangeSetEnvelopeType, ChangeRemoveEnvelope} from \"./changes\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\n\nexport class EnvelopeEditor {\n\tpublic readonly container: HTMLElement = HTML.div({class: \"envelopeEditor\"});\n\t\n\tprivate readonly _rows: HTMLDivElement[] = [];\n\tprivate readonly _targetSelects: HTMLSelectElement[] = [];\n\tprivate readonly _envelopeSelects: HTMLSelectElement[] = [];\n\tprivate readonly _deleteButtons: HTMLButtonElement[] = [];\n\tprivate _renderedEnvelopeCount: number = 0;\n\tprivate _renderedEqFilterCount: number = -1;\n\tprivate _renderedNoteFilterCount: number = -1;\n\tprivate _renderedInstrumentType: InstrumentType;\n\tprivate _renderedEffects: number = 0;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis.container.addEventListener(\"change\", this._onChange);\n\t\tthis.container.addEventListener(\"click\", this._onClick);\n\t}\n\t\n\tprivate _onChange = (event: Event): void => {\n\t\tconst targetSelectIndex: number = this._targetSelects.indexOf(<any> event.target);\n\t\tconst envelopeSelectIndex: number = this._envelopeSelects.indexOf(<any> event.target);\n\t\tif (targetSelectIndex != -1) {\n\t\t\tconst combinedValue: number = parseInt(this._targetSelects[targetSelectIndex].value);\n\t\t\tconst target: number = combinedValue % Config.instrumentAutomationTargets.length;\n\t\t\tconst index: number = (combinedValue / Config.instrumentAutomationTargets.length) >>> 0;\n\t\t\tthis._doc.record(new ChangeSetEnvelopeTarget(this._doc, targetSelectIndex, target, index));\n\t\t} else if (envelopeSelectIndex != -1) {\n\t\t\tthis._doc.record(new ChangeSetEnvelopeType(this._doc, envelopeSelectIndex, this._envelopeSelects[envelopeSelectIndex].selectedIndex));\n\t\t}\n\t}\n\t\n\tprivate _onClick = (event: MouseEvent): void => {\n\t\tconst index: number = this._deleteButtons.indexOf(<any> event.target);\n\t\tif (index != -1) {\n\t\t\tthis._doc.record(new ChangeRemoveEnvelope(this._doc, index));\n\t\t}\n\t}\n\t\n\tprivate _makeOption(target: number, index: number): HTMLOptionElement {\n\t\tlet displayName = Config.instrumentAutomationTargets[target].displayName;\n\t\tif (Config.instrumentAutomationTargets[target].maxCount > 1) {\n\t\t\tif (displayName.indexOf(\"#\") != -1) {\n\t\t\t\tdisplayName = displayName.replace(\"#\", String(index+1));\n\t\t\t} else {\n\t\t\t\tdisplayName += \" \" + (index+1);\n\t\t\t}\n\t\t}\n\t\treturn HTML.option({value: target + index * Config.instrumentAutomationTargets.length}, displayName);\n\t}\n\t\n\tprivate _updateTargetOptionVisibility(menu: HTMLSelectElement, instrument: Instrument): void {\n\t\tfor (let optionIndex: number = 0; optionIndex < menu.childElementCount; optionIndex++) {\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement> menu.children[optionIndex];\n\t\t\tconst combinedValue: number = parseInt(option.value);\n\t\t\tconst target: number = combinedValue % Config.instrumentAutomationTargets.length;\n\t\t\tconst index: number = (combinedValue / Config.instrumentAutomationTargets.length) >>> 0;\n\t\t\toption.hidden = !instrument.supportsEnvelopeTarget(target, index);\n\t\t}\n\t}\n\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tif (!this._doc.prefs.alwaysShowSettings && instrument.preset != instrument.type) return;\n\t\t\n\t\tfor (let envelopeIndex: number = this._rows.length; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n\t\t\tconst targetSelect: HTMLSelectElement = HTML.select();\n\t\t\tfor (let target: number = 0; target < Config.instrumentAutomationTargets.length; target++) {\n\t\t\t\tconst interleaved: boolean = (Config.instrumentAutomationTargets[target].interleave);\n\t\t\t\tfor (let index: number = 0; index < Config.instrumentAutomationTargets[target].maxCount; index++) {\n\t\t\t\t\ttargetSelect.appendChild(this._makeOption(target, index));\n\t\t\t\t\tif (interleaved) {\n\t\t\t\t\t\ttargetSelect.appendChild(this._makeOption(target + 1, index));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (interleaved) target++;\n\t\t\t}\n\t\t\t\n\t\t\tconst envelopeSelect: HTMLSelectElement = HTML.select();\n\t\t\tfor (let envelope: number = 0; envelope < Config.envelopes.length; envelope++) {\n\t\t\t\tenvelopeSelect.appendChild(HTML.option({value: envelope}, Config.envelopes[envelope].name));\n\t\t\t} \n\t\t\t\n\t\t\tconst deleteButton: HTMLButtonElement = HTML.button({type: \"button\", class: \"delete-envelope\"});\n\t\t\t\n\t\t\tconst row: HTMLDivElement = HTML.div({class: \"envelope-row\"},\n\t\t\t\tHTML.div({class: \"selectContainer\", style: \"width: 0; flex: 1;\"}, targetSelect),\n\t\t\t\tHTML.div({class: \"selectContainer\", style: \"width: 0; flex: 0.7;\"}, envelopeSelect),\n\t\t\t\tdeleteButton,\n\t\t\t);\n\t\t\t\n\t\t\tthis.container.appendChild(row);\n\t\t\tthis._rows[envelopeIndex] = row;\n\t\t\tthis._targetSelects[envelopeIndex] = targetSelect;\n\t\t\tthis._envelopeSelects[envelopeIndex] = envelopeSelect;\n\t\t\tthis._deleteButtons[envelopeIndex] = deleteButton;\n\t\t}\n\t\t\n\t\tfor (let envelopeIndex: number = this._renderedEnvelopeCount; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n\t\t\tthis._rows[envelopeIndex].style.display = \"\";\n\t\t\t// For newly visible rows, update target option visibiliy.\n\t\t\tthis._updateTargetOptionVisibility(this._targetSelects[envelopeIndex], instrument);\n\t\t}\n\t\t\n\t\tfor (let envelopeIndex: number = instrument.envelopeCount; envelopeIndex < this._renderedEnvelopeCount; envelopeIndex++) {\n\t\t\tthis._rows[envelopeIndex].style.display = \"none\";\n\t\t}\n\t\t\n\t\tif (this._renderedEqFilterCount != instrument.eqFilter.controlPointCount ||\n\t\t\tthis._renderedNoteFilterCount != instrument.noteFilter.controlPointCount ||\n\t\t\tthis._renderedInstrumentType != instrument.type ||\n\t\t\tthis._renderedEffects != instrument.effects)\n\t\t{\n\t\t\t// Update target option visibility for previously visible rows.\n\t\t\tfor (let envelopeIndex: number = 0; envelopeIndex < this._renderedEnvelopeCount; envelopeIndex++) {\n\t\t\t\tthis._updateTargetOptionVisibility(this._targetSelects[envelopeIndex], instrument);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n\t\t\tthis._targetSelects[envelopeIndex].value = String(instrument.envelopes[envelopeIndex].target + instrument.envelopes[envelopeIndex].index * Config.instrumentAutomationTargets.length);\n\t\t\tthis._envelopeSelects[envelopeIndex].selectedIndex = instrument.envelopes[envelopeIndex].envelope;\n\t\t}\n\t\t\n\t\tthis._renderedEnvelopeCount = instrument.envelopeCount;\n\t\tthis._renderedEqFilterCount = instrument.eqFilter.controlPointCount;\n\t\tthis._renderedNoteFilterCount = instrument.noteFilter.controlPointCount;\n\t\tthis._renderedInstrumentType = instrument.type;\n\t\tthis._renderedEffects = instrument.effects;\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {clamp, Instrument, Synth} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {ChangeSequence, UndoableChange} from \"./Change\";\nimport {ChangeFadeInOut} from \"./changes\";\n\nexport class FadeInOutEditor {\n\tprivate readonly _editorWidth: number = 120;\n\tprivate readonly _editorHeight: number = 26;\n\tprivate readonly _fadeCurve: SVGPathElement = SVG.path({fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\"});\n\tprivate readonly _dottedLinePath: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 1, \"stroke-dasharray\": \"3, 2\", \"pointer-events\": \"none\"});\n\tprivate readonly _controlCurve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\n\t\tthis._fadeCurve,\n\t\tthis._dottedLinePath,\n\t\tthis._controlCurve,\n\t);\n\tpublic readonly container: HTMLElement = HTML.div({class: \"fadeInOut\", style: \"height: 100%;\"}, this._svg);\n\t\n\tprivate _mouseX: number = 0;\n\tprivate _mouseXStart: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseDragging: boolean = false;\n\tprivate _draggingFadeIn: boolean = false;\n\tprivate _dragChange: UndoableChange | null = null;\n\tprivate _renderedFadeIn: number = -1;\n\tprivate _renderedFadeOut: number = -1;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tconst dottedLineX: number = this._fadeOutToX(Config.fadeOutNeutral);\n\t\tthis._dottedLinePath.setAttribute(\"d\", `M ${dottedLineX} 0 L ${dottedLineX} ${this._editorHeight}`);\n\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\n\tprivate _fadeInToX(fadeIn: number) {\n\t\treturn 1.0 + (this._editorWidth - 2.0) * 0.4 * fadeIn / (Config.fadeInRange - 1);\n\t}\n\tprivate _xToFadeIn(x: number) {\n\t\treturn clamp(0, Config.fadeInRange, Math.round((x - 1.0) * (Config.fadeInRange - 1) / (0.4 * this._editorWidth - 2.0)));\n\t}\n\tprivate _fadeOutToX(fadeOut: number) {\n\t\treturn 1.0 + (this._editorWidth - 2.0) * (0.5 + 0.5 * fadeOut / (Config.fadeOutTicks.length - 1));\n\t}\n\tprivate _xToFadeOut(x: number) {\n\t\treturn clamp(0, Config.fadeOutTicks.length, Math.round((Config.fadeOutTicks.length - 1) * ((x - 1.0) / (this._editorWidth - 2.0) - 0.5) / 0.5));\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left);\n\t\tthis._whenCursorPressed();\n\t}\n\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left);\n\t\tthis._whenCursorPressed();\n\t}\n\t\n\tprivate _whenCursorPressed(): void {\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tthis._mouseXStart = this._mouseX;\n\t\tthis._mouseDown = true;\n\t\tthis._mouseDragging = false;\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tconst fadeInX: number = this._fadeInToX(instrument.fadeIn);\n\t\tconst fadeOutX: number = this._fadeOutToX(instrument.fadeOut);\n\t\tthis._draggingFadeIn = this._mouseXStart < (fadeInX + fadeOutX) / 2.0;\n\t\tthis._dragChange = new ChangeSequence();\n\t\tthis._doc.setProspectiveChange(this._dragChange);\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._dragChange != null && this._doc.lastChangeWas(this._dragChange)) {\n\t\t\tthis._dragChange.undo();\n\t\t} else {\n\t\t\tthis._mouseDown = false;\n\t\t}\n\t\tthis._dragChange = null;\n\t\t\n\t\tif (this._mouseDown) {\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\n\t\t\tthis._dragChange = sequence;\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\n\t\t\t\n\t\t\tif (Math.abs(this._mouseX - this._mouseXStart) > 4.0) {\n\t\t\t\tthis._mouseDragging = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (this._mouseDragging) {\n\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\t\tif (this._draggingFadeIn) {\n\t\t\t\t\tsequence.append(new ChangeFadeInOut(this._doc, this._xToFadeIn(this._fadeInToX(instrument.fadeIn) + this._mouseX - this._mouseXStart), instrument.fadeOut));\n\t\t\t\t} else {\n\t\t\t\t\tsequence.append(new ChangeFadeInOut(this._doc, instrument.fadeIn, this._xToFadeOut(this._fadeOutToX(instrument.fadeOut) + this._mouseX - this._mouseXStart)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (this._mouseDown && this._doc.lastChangeWas(this._dragChange) && this._dragChange != null) {\n\t\t\tif (!this._mouseDragging) {\n\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\t\tif (this._draggingFadeIn) {\n\t\t\t\t\tthis._doc.record(new ChangeFadeInOut(this._doc, this._xToFadeIn(this._mouseX), instrument.fadeOut));\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.record(new ChangeFadeInOut(this._doc, instrument.fadeIn, this._xToFadeOut(this._mouseX)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._doc.record(this._dragChange);\n\t\t\t}\n\t\t}\n\t\tthis._dragChange = null;\n\t\tthis._mouseDragging = false;\n\t\tthis._mouseDown = false;\n\t}\n\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\n\t\tif (this._renderedFadeIn == instrument.fadeIn && this._renderedFadeOut == instrument.fadeOut) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst fadeInX: number = this._fadeInToX(instrument.fadeIn);\n\t\tconst fadeOutX: number = this._fadeOutToX(instrument.fadeOut);\n\t\tthis._controlCurve.setAttribute(\"d\", `M ${fadeInX} 0 L ${fadeInX} ${this._editorHeight} M ${fadeOutX} 0 L ${fadeOutX} ${this._editorHeight}`);\n\t\t\n\t\tconst dottedLineX: number = this._fadeOutToX(Config.fadeOutNeutral);\n\t\tlet fadePath: string = \"\";\n\t\tfadePath += `M 0 ${this._editorHeight} `;\n\t\tfadePath += `L ${fadeInX} 0 `;\n\t\tif (Synth.fadeOutSettingToTicks(instrument.fadeOut) > 0) {\n\t\t\tfadePath += `L ${dottedLineX} 0 `;\n\t\t\tfadePath += `L ${fadeOutX} ${this._editorHeight} `;\n\t\t} else {\n\t\t\tfadePath += `L ${fadeOutX} 0 `;\n\t\t\tfadePath += `L ${dottedLineX} ${this._editorHeight} `;\n\t\t}\n\t\tfadePath += \"z\";\n\t\tthis._fadeCurve.setAttribute(\"d\", fadePath);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {FilterCoefficients, FrequencyResponse} from \"../synth/filtering\";\nimport {FilterType, Config} from \"../synth/SynthConfig\";\nimport {FilterSettings, FilterControlPoint, Instrument} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {ChangeSequence, UndoableChange} from \"./Change\";\nimport {ChangeFilterAddPoint, ChangeFilterMovePoint} from \"./changes\";\nimport {prettyNumber} from \"./EditorConfig\";\n\nexport class FilterEditor {\n\tprivate readonly _editorWidth: number = 120;\n\tprivate readonly _editorHeight: number = 26;\n\tprivate readonly _responsePath: SVGPathElement = SVG.path({fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\"});\n\t//private readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\", overflow: \"visible\"});\n\tprivate readonly _controlPointPath: SVGPathElement = SVG.path({fill: \"currentColor\", \"pointer-events\": \"none\"});\n\tprivate readonly _dottedLinePath: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 1, \"stroke-dasharray\": \"3, 2\", \"pointer-events\": \"none\"});\n\tprivate readonly _highlight: SVGCircleElement = SVG.circle({fill: \"white\", stroke: \"none\", \"pointer-events\": \"none\", r: 4});\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\n\t\tthis._responsePath,\n\t\t//this._octaves,\n\t\tthis._dottedLinePath,\n\t\tthis._highlight,\n\t\tthis._controlPointPath,\n\t);\n\tprivate readonly _label: HTMLDivElement = HTML.div({style: \"position: absolute; bottom: 0; left: 2px; font-size: 8px; line-height: 1; pointer-events: none;\"});\n\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"filterEditor\", style: \"height: 100%; position: relative;\"},\n\t\tthis._svg,\n\t\tthis._label,\n\t);\n\tprivate readonly _pointRadius: number = 2;\n\t\n\tprivate _useNoteFilter: boolean = false;\n\tprivate _touchMode: boolean = false;\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _mouseOver: boolean = false;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseDragging: boolean = false;\n\tprivate _addingPoint: boolean = false;\n\tprivate _deletingPoint: boolean = false;\n\tprivate _addedType: FilterType = FilterType.peak;\n\tprivate _selectedIndex: number = 0;\n\tprivate _freqStart: number = 0;\n\tprivate _gainStart: number = 0;\n\tprivate _dragChange: UndoableChange | null = null;\n\t\n\tprivate _filterSettings: FilterSettings;\n\tprivate _renderedSelectedIndex: number = -1;\n\tprivate _renderedPointCount: number = -1;\n\tprivate _renderedPointTypes: number = -1;\n\tprivate _renderedPointFreqs: number = -1;\n\tprivate _renderedPointGains: number = -1;\n\t//private _renderedKey: number = -1;\n\t\n\tconstructor(private _doc: SongDocument, useNoteFilter: boolean = false) {\n\t\tthis._useNoteFilter = useNoteFilter;\n\t\t/*\n\t\tfor (let i: number = 0; i < Config.filterFreqRange * Config.filterFreqStep; i++) {\n\t\t\tthis._octaves.appendChild(SVG.rect({fill: ColorConfig.tonic, x: i * this._editorWidth / (Config.filterFreqRange * Config.filterFreqStep) - 0.5, y: 0, width: 1, height: this._editorHeight}));\n\t\t}\n\t\t*/\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\n\tprivate _xToFreq(x: number): number {\n\t\treturn Config.filterFreqRange * x / this._editorWidth - 0.5;\n\t}\n\tprivate _freqToX(freq: number): number {\n\t\treturn this._editorWidth * (freq + 0.5) / Config.filterFreqRange;\n\t}\n\tprivate _yToGain(y: number): number {\n\t\treturn (Config.filterGainRange - 1) * (1 - (y - .5) / (this._editorHeight - 1));\n\t}\n\tprivate _gainToY(gain: number): number {\n\t\treturn (this._editorHeight - 1) * (1 - gain / (Config.filterGainRange - 1)) + .5;\n\t}\n\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tthis._mouseOver = true;\n\t}\n\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tthis._mouseOver = false;\n\t\tthis._updatePath();\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._touchMode = false;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorPressed();\n\t}\n\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._touchMode = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorPressed();\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tif (!this._mouseDown) this._updateCursor();\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (this._mouseDown) event.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tif (!this._mouseDown) this._updateCursor();\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenCursorPressed(): void {\n\t\tthis._mouseDown = true;\n\t\tconst sequence: ChangeSequence = new ChangeSequence();\n\t\tthis._dragChange = sequence;\n\t\tthis._doc.setProspectiveChange(this._dragChange);\n\t\tthis._updateCursor();\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _updateCursor(): void {\n\t\tthis._freqStart = this._xToFreq(this._mouseX);\n\t\tthis._gainStart = this._yToGain(this._mouseY);\n\t\t\n\t\tthis._addingPoint = true;\n\t\tthis._selectedIndex = -1;\n\t\tlet nearestDistance: number = Number.POSITIVE_INFINITY;\n\t\tfor (let i: number = 0; i < this._filterSettings.controlPointCount; i++) {\n\t\t\tconst point: FilterControlPoint = this._filterSettings.controlPoints[i];\n\t\t\tconst distance: number = Math.sqrt(Math.pow(this._freqToX(point.freq) - this._mouseX, 2) + Math.pow(this._gainToY(point.gain) - this._mouseY, 2));\n\t\t\tif ((distance <= 13 || this._filterSettings.controlPointCount >= Config.filterMaxPoints) && distance < nearestDistance) {\n\t\t\t\tnearestDistance = distance;\n\t\t\t\tthis._selectedIndex = i;\n\t\t\t\tthis._addingPoint = false;\n\t\t\t}\n\t\t}\n\t\tif (this._addingPoint) {\n\t\t\tconst ratio: number = this._mouseX / this._editorWidth;\n\t\t\tif (ratio < 0.2) {\n\t\t\t\tthis._addedType = FilterType.highPass;\n\t\t\t} else if (ratio < 0.8) {\n\t\t\t\tthis._addedType = FilterType.peak;\n\t\t\t} else {\n\t\t\t\tthis._addedType = FilterType.lowPass;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._dragChange != null && this._doc.lastChangeWas(this._dragChange)) {\n\t\t\tthis._dragChange.undo();\n\t\t} else {\n\t\t\tthis._mouseDown = false;\n\t\t}\n\t\tthis._dragChange = null;\n\t\tthis._deletingPoint = false;\n\t\t\n\t\tif (this._mouseDown) {\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\n\t\t\tthis._dragChange = sequence;\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\n\t\t\t\n\t\t\tif (this._addingPoint) {\n\t\t\t\tconst gain: number = Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(this._yToGain(this._mouseY))));\n\t\t\t\tconst freq: number = this._findNearestFreqSlot(this._filterSettings, this._xToFreq(this._mouseX), -1);\n\t\t\t\tif (freq >= 0 && freq < Config.filterFreqRange) {\n\t\t\t\t\tconst point: FilterControlPoint = new FilterControlPoint();\n\t\t\t\t\tpoint.type = this._addedType;\n\t\t\t\t\tpoint.freq = freq;\n\t\t\t\t\tpoint.gain = gain;\n\t\t\t\t\tsequence.append(new ChangeFilterAddPoint(this._doc, this._filterSettings, point, this._filterSettings.controlPointCount, this._useNoteFilter));\n\t\t\t\t} else {\n\t\t\t\t\tthis._deletingPoint = true;\n\t\t\t\t}\n\t\t\t} else if (this._selectedIndex >= this._filterSettings.controlPointCount || this._selectedIndex == -1) {\n\t\t\t\tthis._dragChange = null;\n\t\t\t\tthis._mouseDown = false;\n\t\t\t} else {\n\t\t\t\tconst freqDelta: number = this._xToFreq(this._mouseX) - this._freqStart;\n\t\t\t\tconst gainDelta: number = this._yToGain(this._mouseY) - this._gainStart;\n\t\t\t\tconst point: FilterControlPoint = this._filterSettings.controlPoints[this._selectedIndex];\n\t\t\t\tconst gain: number = Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(point.gain + gainDelta)));\n\t\t\t\tconst freq: number = this._findNearestFreqSlot(this._filterSettings, point.freq + freqDelta, this._selectedIndex);\n\t\t\t\t\n\t\t\t\tif (Math.round(freqDelta) != 0.0 || Math.round(gainDelta) != 0.0 || freq != point.freq || gain != point.gain) {\n\t\t\t\t\tthis._mouseDragging = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (freq >= 0 && freq < Config.filterFreqRange) {\n\t\t\t\t\tsequence.append(new ChangeFilterMovePoint(this._doc, point, point.freq, freq, point.gain, gain));\n\t\t\t\t} else {\n\t\t\t\t\tsequence.append(new ChangeFilterAddPoint(this._doc, this._filterSettings, point, this._selectedIndex, this._useNoteFilter, true));\n\t\t\t\t\tthis._deletingPoint = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this._mouseDown || this._mouseOver) {\n\t\t\tthis._updatePath();\n\t\t}\n\t}\n\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (this._mouseDown && this._doc.lastChangeWas(this._dragChange) && this._dragChange != null) {\n\t\t\tif (!this._addingPoint && !this._mouseDragging && !this._touchMode) {\n\t\t\t\tif (this._selectedIndex < this._filterSettings.controlPointCount && this._selectedIndex != -1) {\n\t\t\t\t\tconst point: FilterControlPoint = this._filterSettings.controlPoints[this._selectedIndex];\n\t\t\t\t\tthis._doc.record(new ChangeFilterAddPoint(this._doc, this._filterSettings, point, this._selectedIndex, this._useNoteFilter, true));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._doc.record(this._dragChange);\n\t\t\t}\n\t\t\tthis._updatePath();\n\t\t}\n\t\tthis._dragChange = null;\n\t\tthis._mouseDragging = false;\n\t\tthis._deletingPoint = false;\n\t\tthis._mouseDown = false;\n\t\tthis._updateCursor();\n\t}\n\t\n\tprivate _findNearestFreqSlot(filterSettings: FilterSettings, targetFreq: number, ignoreIndex: number): number {\n\t\tconst roundedFreq: number = Math.round(targetFreq);\n\t\tlet lowerFreq: number = roundedFreq;\n\t\tlet upperFreq: number = roundedFreq;\n\t\tlet tryingLower: boolean = (roundedFreq <= targetFreq);\n\t\twhile (true) {\n\t\t\tlet foundConflict: boolean = false;\n\t\t\tconst currentFreq: number = tryingLower ? lowerFreq : upperFreq;\n\t\t\tfor (let i: number = 0; i < filterSettings.controlPointCount; i++) {\n\t\t\t\tif (i == ignoreIndex) continue;\n\t\t\t\tif (filterSettings.controlPoints[i].freq == currentFreq) {\n\t\t\t\t\tfoundConflict = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!foundConflict) return currentFreq;\n\t\t\ttryingLower = !tryingLower;\n\t\t\tif (tryingLower) lowerFreq--;\n\t\t\tif (!tryingLower) upperFreq++;\n\t\t}\n\t}\n\t\n\tprivate static _circlePath(cx: number, cy: number, radius: number, reverse: boolean = false): string {\n\t\treturn `M ${cx - radius} ${cy} ` +\n\t\t\t`a ${radius} ${radius} 0 1 ${reverse?1:0} ${ radius * 2} 0 ` +\n\t\t\t`a ${radius} ${radius} 0 1 ${reverse?1:0} ${-radius * 2} 0 `;\n\t}\n\t\n\tprivate _updatePath(): void {\n\t\tthis._highlight.style.display = \"none\";\n\t\tthis._label.textContent = \"\";\n\t\t\n\t\tlet controlPointPath: string = \"\";\n\t\tlet dottedLinePath: string = \"\";\n\t\tfor (let i: number = 0; i < this._filterSettings.controlPointCount; i++) {\n\t\t\tconst point: FilterControlPoint = this._filterSettings.controlPoints[i];\n\t\t\tconst pointX: number = this._freqToX(point.freq);\n\t\t\tconst pointY: number = this._gainToY(point.gain);\n\t\t\t\n\t\t\tcontrolPointPath += FilterEditor._circlePath(pointX, pointY, this._pointRadius);\n\t\t\t\n\t\t\tif (point.type == FilterType.highPass) {\n\t\t\t\tdottedLinePath += \"M \" + 0 + \" \" + pointY + \" L \" + pointX + \" \" + pointY + \" \";\n\t\t\t} else if (point.type == FilterType.lowPass) {\n\t\t\t\tdottedLinePath += \"M \" + this._editorWidth + \" \" + pointY + \" L \" + pointX + \" \" + pointY + \" \";\n\t\t\t}\n\t\t\t\n\t\t\tif (this._selectedIndex == i && this._mouseOver && !this._mouseDown) {\n\t\t\t\tthis._highlight.setAttribute(\"cx\", String(pointX));\n\t\t\t\tthis._highlight.setAttribute(\"cy\", String(pointY));\n\t\t\t\tthis._highlight.style.display = \"\";\n\t\t\t}\n\t\t\tif ((this._selectedIndex == i || (this._addingPoint && this._mouseDown && i == this._filterSettings.controlPointCount - 1)) && (this._mouseOver || this._mouseDown) && !this._deletingPoint) {\n\t\t\t\tthis._label.textContent = (i + 1) + \": \" + Config.filterTypeNames[point.type];// + \" \" + prettyNumber(point.getHz()) + \"Hz\";\n\t\t\t}\n\t\t}\n\t\tthis._controlPointPath.setAttribute(\"d\", controlPointPath);\n\t\tthis._dottedLinePath.setAttribute(\"d\", dottedLinePath);\n\t\tif (this._addingPoint && !this._mouseDown && this._mouseOver) {\n\t\t\tthis._label.textContent = \"+ \" + Config.filterTypeNames[this._addedType];\n\t\t}\n\t\t\n\t\t//let volumeCompensation: number = 1.0;\n\t\tconst standardSampleRate: number = 44800;\n\t\tconst filters: FilterCoefficients[] = [];\n\t\tfor (let i: number = 0; i < this._filterSettings.controlPointCount; i++) {\n\t\t\tconst point: FilterControlPoint = this._filterSettings.controlPoints[i];\n\t\t\tconst filter: FilterCoefficients = new FilterCoefficients();\n\t\t\tpoint.toCoefficients(filter, standardSampleRate);\n\t\t\tfilters.push(filter);\n\t\t\t//volumeCompensation *= point.getVolumeCompensationMult();\n\t\t}\n\t\t\n\t\tconst response: FrequencyResponse = new FrequencyResponse();\n\t\tlet responsePath: string = \"M 0 \" + this._editorHeight + \" \";\n\t\tfor (let i: number = -1; i <= Config.filterFreqRange; i++) {\n\t\t\tconst hz: number = FilterControlPoint.getHzFromSettingValue(i);\n\t\t\tconst cornerRadiansPerSample: number = 2.0 * Math.PI * hz / standardSampleRate;\n\t\t\tconst real: number = Math.cos(cornerRadiansPerSample);\n\t\t\tconst imag: number = Math.sin(cornerRadiansPerSample);\n\t\t\t\n\t\t\tlet linearGain: number = 1.0; //volumeCompensation;\n\t\t\tfor (const filter of filters) {\n\t\t\t\tresponse.analyzeComplex(filter, real, imag);\n\t\t\t\tlinearGain *= response.magnitude();\n\t\t\t}\n\t\t\t\n\t\t\tconst gainSetting: number = Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter;\n\t\t\tconst y: number = this._gainToY(gainSetting);\n\t\t\tconst x: number = this._freqToX(i);\n\t\t\tresponsePath += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y) + \" \";\n\t\t}\n\t\t\n\t\tresponsePath += \"L \" + this._editorWidth + \" \" + this._editorHeight + \" L 0 \" + this._editorHeight + \" z \";\n\t\tthis._responsePath.setAttribute(\"d\", responsePath);\n\t}\n\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tconst filterSettings: FilterSettings = this._useNoteFilter ? instrument.noteFilter : instrument.eqFilter;\n\t\tif (this._filterSettings != filterSettings) {\n\t\t\tthis._dragChange = null;\n\t\t\tthis._mouseDown = false;\n\t\t}\n\t\tthis._filterSettings = filterSettings;\n\t\tif (!this._mouseDown) this._updateCursor();\n\t\t\n\t\tlet pointTypes: number = 0;\n\t\tlet pointFreqs: number = 0;\n\t\tlet pointGains: number = 0;\n\t\tfor (let i: number = 0; i < filterSettings.controlPointCount; i++) {\n\t\t\tconst point: FilterControlPoint = filterSettings.controlPoints[i];\n\t\t\tpointTypes = pointTypes * FilterType.length      + point.type;\n\t\t\tpointFreqs = pointFreqs * Config.filterFreqRange + point.freq;\n\t\t\tpointGains = pointGains * Config.filterGainRange + point.gain;\n\t\t}\n\t\tif (this._renderedSelectedIndex != this._selectedIndex ||\n\t\t\tthis._renderedPointCount != filterSettings.controlPointCount ||\n\t\t\tthis._renderedPointTypes != pointTypes ||\n\t\t\tthis._renderedPointFreqs != pointFreqs ||\n\t\t\tthis._renderedPointGains != pointGains)\n\t\t{\n\t\t\tthis._renderedSelectedIndex = this._selectedIndex;\n\t\t\tthis._renderedPointCount = filterSettings.controlPointCount;\n\t\t\tthis._renderedPointTypes = pointTypes;\n\t\t\tthis._renderedPointFreqs = pointFreqs;\n\t\t\tthis._renderedPointGains = pointGains;\n\t\t\tthis._updatePath();\n\t\t}\n\t\t\n\t\t/*\n\t\tif (this._renderedKey != this._doc.song.key) {\n\t\t\tthis._renderedKey = this._doc.song.key;\n\t\t\tconst tonicHz: number = Instrument.frequencyFromPitch(Config.keys[this._doc.song.key].basePitch);\n\t\t\tconst x: number = this._freqToX(FilterControlPoint.getSettingValueFromHz(tonicHz));\n\t\t\tthis._octaves.setAttribute(\"x\", String(x));\n\t\t}\n\t\t*/\n\t}\n}\n","// Copyright (C) 2021 John Nesky, distributed under the MIT license.\n\nimport {Pattern} from \"../synth/synth\";\nimport {ColorConfig, ChannelColors} from \"./ColorConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\n\nexport class Box {\n\tprivate readonly _text: Text = document.createTextNode(\"\");\n\tprivate readonly _label: HTMLElement = HTML.div({class: \"channelBoxLabel\"}, this._text);\n\tpublic readonly container: HTMLElement = HTML.div({class: \"channelBox\", style: `margin: 1px; height: ${ChannelRow.patternHeight - 2}px;`}, this._label);\n\tprivate _renderedIndex: number = -1;\n\tconstructor(channel: number, color: string) {\n\t\tthis.container.style.background = ColorConfig.uiWidgetBackground;\n\t\tthis._label.style.color = color;\n\t}\n\t\n\tpublic setWidth(width: number): void {\n\t\tthis.container.style.width = (width - 2) + \"px\"; // there's a 1 pixel margin on either side.\n\t}\n\t\n\tpublic setIndex(index: number, selected: boolean, color: string): void {\n\t\tif (this._renderedIndex != index) {\n\t\t\tthis._renderedIndex = index;\n\t\t\tthis._text.data = String(index);\n\t\t}\n\t\tthis._label.style.color = selected ? ColorConfig.invertedText : color;\n\t\tthis.container.style.background = selected ? color : (index == 0) ? \"none\" : ColorConfig.uiWidgetBackground;\n\t}\n}\n\nexport class ChannelRow {\n\tpublic static patternHeight: number = 28;\n\t\n\tprivate _renderedBarWidth: number = -1;\n\tprivate _boxes: Box[] = [];\n\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"channelRow\"});\n\t\n\tconstructor(private readonly _doc: SongDocument, public readonly index: number) {}\n\t\n\tpublic render(): void {\n\t\tconst barWidth: number = this._doc.getBarWidth();\n\t\tif (this._boxes.length != this._doc.song.barCount) {\n\t\t\tfor (let x: number = this._boxes.length; x < this._doc.song.barCount; x++) {\n\t\t\t\tconst box: Box = new Box(this.index, ColorConfig.getChannelColor(this._doc.song, this.index).secondaryChannel);\n\t\t\t\tbox.setWidth(barWidth);\n\t\t\t\tthis.container.appendChild(box.container);\n\t\t\t\tthis._boxes[x] = box;\n\t\t\t}\n\t\t\tfor (let x: number = this._doc.song.barCount; x < this._boxes.length; x++) {\n\t\t\t\tthis.container.removeChild(this._boxes[x].container);\n\t\t\t}\n\t\t\tthis._boxes.length = this._doc.song.barCount;\n\t\t}\n\t\t\n\t\tif (this._renderedBarWidth != barWidth) {\n\t\t\tthis._renderedBarWidth = barWidth;\n\t\t\tfor (let x: number = 0; x < this._boxes.length; x++) {\n\t\t\t\tthis._boxes[x].setWidth(barWidth);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (let i: number = 0; i < this._boxes.length; i++) {\n\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(this.index, i);\n\t\t\tconst selected: boolean = (i == this._doc.bar && this.index == this._doc.channel);\n\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\n\t\t\t\n\t\t\tconst box: Box = this._boxes[i];\n\t\t\tif (i < this._doc.song.barCount) {\n\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, this.index);\n\t\t\t\tbox.setIndex(this._doc.song.channels[this.index].bars[i], selected, dim && !selected ? colors.secondaryChannel : colors.primaryChannel);\n\t\t\t\tbox.container.style.visibility = \"visible\";\n\t\t\t} else {\n\t\t\t\tbox.container.style.visibility = \"hidden\";\n\t\t\t}\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {ChannelRow} from \"./ChannelRow\";\n\nexport class MuteEditor {\n\tprivate _cornerFiller: HTMLDivElement = HTML.div({style: `background: ${ColorConfig.editorBackground}; position: sticky; bottom: 0; left: 0; width: 32px; height: 30px;`});\n\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"muteEditor\"});\n\t\n\tprivate readonly _buttons: HTMLButtonElement[] = [];\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis.container.addEventListener(\"click\", this._onClick);\n\t}\n\t\n\tprivate _onClick = (event: MouseEvent): void => {\n\t\tconst index = this._buttons.indexOf(<HTMLButtonElement> event.target);\n\t\tif (index == -1) return;\n\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tpublic render(): void {\n\t\tif (!this._doc.prefs.enableChannelMuting) return;\n\t\t\n\t\tif (this._buttons.length != this._doc.song.getChannelCount()) {\n\t\t\tfor (let y: number = this._buttons.length; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tconst muteButton: HTMLButtonElement = HTML.button({class: \"mute-button\", title: \"Mute (M), Mute All (⇧M), Solo (S), Exclude (⇧S)\", style: `height: ${ChannelRow.patternHeight - 4}px; margin: 2px;`});\n\t\t\t\tthis.container.appendChild(muteButton);\n\t\t\t\tthis._buttons[y] = muteButton;\n\t\t\t}\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._buttons.length; y++) {\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\n\t\t\t}\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\n\t\t\t\n\t\t\t// Always put this at the bottom, below all the other buttons, to cover up the loop editor when scrolling.\n\t\t\tthis.container.appendChild(this._cornerFiller);\n\t\t}\n\t\t\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\n\t\t\tif (this._doc.song.channels[y].muted) {\n\t\t\t\tthis._buttons[y].classList.add(\"muted\");\n\t\t\t} else {\n\t\t\t\tthis._buttons[y].classList.remove(\"muted\");\n\t\t\t}\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {ColorConfig} from \"./ColorConfig\";\nimport {isMobile} from \"./EditorConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {ChannelRow} from \"./ChannelRow\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\n\nexport class TrackEditor {\n\tprivate readonly _channelRowContainer: HTMLElement = HTML.div({style: \"display: flex; flex-direction: column;\"});\n\tprivate readonly _playhead: SVGRectElement = SVG.rect({fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128});\n\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30});\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\"});\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\"});\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62});\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `position: absolute; top: 0;`},\n\t\tthis._selectionRect,\n\t\tthis._boxHighlight,\n\t\tthis._upHighlight,\n\t\tthis._downHighlight,\n\t\tthis._playhead,\n\t);\n\tprivate readonly _select: HTMLSelectElement = HTML.select({class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\"});\n\tpublic readonly container: HTMLElement = HTML.div({class: \"noSelection\", style: \"position: relative; overflow: hidden;\"},\n\t\tthis._channelRowContainer,\n\t\tthis._svg,\n\t\tthis._select,\n\t);\n\t\n\tprivate readonly _channels: ChannelRow[] = [];\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _mouseStartBar: number = 0;\n\tprivate _mouseStartChannel: number = 0;\n\tprivate _mouseBar: number = 0;\n\tprivate _mouseChannel: number = 0;\n\tprivate _mouseOver: boolean = false;\n\tprivate _mousePressed: boolean = false;\n\tprivate _mouseDragging = false;\n\tprivate _barWidth: number = 32;\n\tprivate _renderedEditorWidth: number = -1;\n\tprivate _renderedEditorHeight: number = -1;\n\tprivate _renderedPatternCount: number = 0;\n\tprivate _renderedPlayhead: number = -1;\n\tprivate _touchMode: boolean = isMobile;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\n\t\t\n\t\tlet determinedCursorType: boolean = false;\n\t\tdocument.addEventListener(\"mousedown\", () => {\n\t\t\tif (!determinedCursorType) {\n\t\t\t\tthis._touchMode = false;\n\t\t\t\tthis._updatePreview();\n\t\t\t}\n\t\t\tdeterminedCursorType = true;\n\t\t}, true);\n\t\tdocument.addEventListener(\"touchstart\", () => {\n\t\t\tif (!determinedCursorType) {\n\t\t\t\tthis._touchMode = true;\n\t\t\t\tthis._updatePreview();\n\t\t\t}\n\t\t\tdeterminedCursorType = true;\n\t\t}, true);\n\t}\n\t\n\tprivate _whenSelectChanged = (): void => {\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\n\t}\n\t\n\tprivate _animatePlayhead = (timestamp: number): void => {\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\n\t\tif (this._renderedPlayhead != playhead) {\n\t\t\tthis._renderedPlayhead = playhead;\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\n\t\t}\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\n\t}\n\t\n\tpublic movePlayheadToMouse(): boolean {\n\t\tif (this._mouseOver) {\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tprivate _dragBoxSelection(): void {\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\n\t\tthis._doc.selection.selectionUpdated();\n\t}\n\t\n\tprivate _updateSelectPos(event: TouchEvent): void {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, this._mouseY / ChannelRow.patternHeight)));\n\t}\n\t\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\n\t\tthis._mousePressed = true;\n\t\tthis._mouseDragging = true;\n\t\tthis._updateSelectPos(event);\n\t\tthis._mouseStartBar = this._mouseBar;\n\t\tthis._mouseStartChannel = this._mouseChannel;\n\t}\n\t\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\n\t\tthis._updateSelectPos(event);\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\n\t\t\tevent.preventDefault();\n\t\t}\n\t\tif (this._mousePressed) this._dragBoxSelection();\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\n\t\tthis._mousePressed = false;\n\t\tthis._mouseDragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t}\n\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t}\n\t\n\tprivate _updateMousePos(event: MouseEvent): void {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, this._mouseY / ChannelRow.patternHeight)));\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mousePressed = true;\n\t\tthis._updateMousePos(event);\n\t\tthis._mouseStartBar = this._mouseBar;\n\t\tthis._mouseStartChannel = this._mouseChannel;\n\t\tif (event.shiftKey) {\n\t\t\tthis._mouseDragging = true;\n\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\n\t\t\tthis._doc.selection.selectionUpdated();\n\t\t} else {\n\t\t\tthis._mouseDragging = false;\n\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\n\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\n\t\t\t\tthis._mouseDragging = true;\n\t\t\t}\n\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t}\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tthis._updateMousePos(event);\n\t\tif (this._mousePressed) {\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\n\t\t\t\tthis._mouseDragging = true;\n\t\t\t}\n\t\t\tthis._dragBoxSelection();\n\t\t}\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\n\t\tif (this._mousePressed && !this._mouseDragging) {\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\n\t\t\t\tconst up: boolean = (this._mouseY % ChannelRow.patternHeight) < ChannelRow.patternHeight / 2;\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\n\t\t\t}\n\t\t}\n\t\tthis._mousePressed = false;\n\t\tthis._mouseDragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _updatePreview(): void {\n\t\tlet channel: number = this._mouseChannel;\n\t\tlet bar: number = this._mouseBar;\n\t\t\n\t\tif (this._touchMode) {\n\t\t\tbar = this._doc.bar;\n\t\t\tchannel = this._doc.channel;\n\t\t}\n\t\t\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\n\t\t\n\t\tif (this._mouseOver && !this._mousePressed && !selected) {\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + (ChannelRow.patternHeight * channel)));\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (ChannelRow.patternHeight - 2));\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\n\t\t} else {\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\n\t\t}\n\t\t\n\t\tif ((this._mouseOver || this._touchMode) && selected) {\n\t\t\tconst up: boolean = (this._mouseY % ChannelRow.patternHeight) < ChannelRow.patternHeight / 2;\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\n\t\t\tconst middle: number = ChannelRow.patternHeight * (channel + 0.5);\n\t\t\tconst base: number = ChannelRow.patternHeight * 0.1;\n\t\t\tconst tip: number = ChannelRow.patternHeight * 0.4;\n\t\t\tconst width: number = ChannelRow.patternHeight * 0.175;\n\t\t\t\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\n\t\t\t\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\n\t\t\t\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\n\t\t} else {\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\n\t\t}\n\t\t\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\n\t\tthis._select.style.width = this._barWidth + \"px\";\n\t\tthis._select.style.top = (ChannelRow.patternHeight * this._doc.channel) + \"px\";\n\t\tthis._select.style.height = ChannelRow.patternHeight + \"px\";\n\t\t\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\n\t\t\tthis._select.appendChild(HTML.option({value: i}, i));\n\t\t}\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\n\t\t\tthis._select.removeChild(<Node> this._select.lastChild);\n\t\t}\n\t\tthis._renderedPatternCount = patternCount;\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\n\t}\n\t\n\tpublic render(): void {\n\t\tthis._barWidth = this._doc.getBarWidth();\n\t\t\n\t\tif (this._channels.length != this._doc.song.getChannelCount()) {\n\t\t\tfor (let y: number = this._channels.length; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tconst channelRow: ChannelRow = new ChannelRow(this._doc, y);\n\t\t\t\tthis._channels[y] = channelRow;\n\t\t\t\tthis._channelRowContainer.appendChild(channelRow.container);\n\t\t\t}\n\t\t\t\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._channels.length; y++) {\n\t\t\t\tthis._channelRowContainer.removeChild(this._channels[y].container);\n\t\t\t}\n\t\t\t\n\t\t\tthis._channels.length = this._doc.song.getChannelCount();\n\t\t\tthis._mousePressed = false;\n\t\t}\n\t\t\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\n\t\t\tthis._channels[j].render();\n\t\t}\n\t\t\n\t\tconst editorWidth: number = this._barWidth * this._doc.song.barCount;\n\t\tif (this._renderedEditorWidth != editorWidth) {\n\t\t\tthis._renderedEditorWidth = editorWidth;\n\t\t\tthis._channelRowContainer.style.width = editorWidth + \"px\";\n\t\t\tthis.container.style.width = editorWidth + \"px\";\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\n\t\t\tthis._mousePressed = false;\n\t\t}\n\t\t\n\t\tconst editorHeight: number = this._doc.song.getChannelCount() * ChannelRow.patternHeight;\n\t\tif (this._renderedEditorHeight != editorHeight) {\n\t\t\tthis._renderedEditorHeight = editorHeight;\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight);\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight);\n\t\t\tthis.container.style.height = editorHeight + \"px\";\n\t\t}\n\t\t\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\n\t\t\n\t\tif (this._doc.selection.boxSelectionActive) {\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\n\t\t\t// editor renders and the selection is visible. Check if anything changed\n\t\t\t// before overwriting the attributes?\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(ChannelRow.patternHeight * this._doc.selection.boxSelectionChannel + 1));\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(ChannelRow.patternHeight * this._doc.selection.boxSelectionHeight - 2));\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\n\t\t} else {\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\n\t\t}\n\t\t\n\t\tthis._updatePreview();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {SongDocument} from \"./SongDocument\";\nimport {Layout} from \"./Layout\";\nimport {Prompt} from \"./Prompt\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\n\nconst {button, label, div, form, h2, input} = HTML;\n\nexport class LayoutPrompt implements Prompt {\n\tprivate readonly _fileInput: HTMLInputElement = input({type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\"});\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _form: HTMLFormElement = form({style: \"display: flex; gap: 10px;\"},\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"small\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-4 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"7\" y=\"2\" width=\"11\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"7\" y=\"13\" width=\"11\" height=\"5\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Small\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"long\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"12\" y=\"2\" width=\"12\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"4\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"7\" y=\"2\" width=\"4\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"13\" width=\"22\" height=\"5\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Long (AB)\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"tall\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"7\" y=\"2\" width=\"8\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"16\" y=\"2\" width=\"8\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Tall\"),\n\t\t\t),\n\t\t);\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px;\"},\n\t\th2(\"Layout\"),\n\t\tthis._form,\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._fileInput.select();\n\t\tsetTimeout(()=>this._fileInput.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\t\n\t\t(<any> this._form.elements)[\"layout\"].value = this._doc.prefs.boxbeepLayout;\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._confirm();\n\t\t}\n\t}\n\t\n\tprivate _confirm = (): void => { \n\t\tthis._doc.prefs.boxbeepLayout = (<any> this._form.elements)[\"layout\"].value;\n\t\tthis._doc.prefs.save();\n\t\tLayout.setLayout(this._doc.prefs.boxbeepLayout);\n\t\tthis._close();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\nimport {ChangeLoop, ChangeChannelBar} from \"./changes\";\nimport {ColorConfig} from \"./ColorConfig\";\n\ninterface Cursor {\n\tstartBar: number;\n\tmode: number;\n}\n\ninterface Endpoints {\n\tstart: number;\n\tlength: number;\n}\n\nexport class LoopEditor {\n\tprivate readonly _editorHeight: number = 20;\n\tprivate readonly _startMode:   number = 0;\n\tprivate readonly _endMode:     number = 1;\n\tprivate readonly _bothMode:    number = 2;\n\t\n\tprivate readonly _loop: SVGPathElement = SVG.path({fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4});\n\tprivate readonly _highlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\t\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `touch-action: pan-y; position: absolute;`, height: this._editorHeight},\n\t\tthis._loop,\n\t\tthis._highlight,\n\t);\n\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"loopEditor\"}, this._svg);\n\t\n\tprivate _barWidth: number = 32;\n\tprivate _change: ChangeLoop | null = null;\n\tprivate _cursor: Cursor = {startBar: -1, mode: -1};\n\tprivate _mouseX: number = 0;\n\t//private _mouseY: number = 0;\n\tprivate _clientStartX: number = 0;\n\tprivate _clientStartY: number = 0;\n\tprivate _startedScrolling: boolean = false;\n\tprivate _draggingHorizontally: boolean = false;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _renderedLoopStart: number = -1;\n\tprivate _renderedLoopStop: number = -1;\n\tprivate _renderedBarCount: number = 0;\n\tprivate _renderedBarWidth: number = -1;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._updateCursorStatus();\n\t\tthis._render();\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\n\t}\n\t\n\tprivate _updateCursorStatus(): void {\n\t\tconst bar: number = this._mouseX / this._barWidth;\n\t\tthis._cursor.startBar = bar;\n\t\t\n\t\tif (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\n\t\t\t\tthis._cursor.mode = this._startMode;\n\t\t\t} else {\n\t\t\t\tthis._cursor.mode = this._endMode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._cursor.mode = this._bothMode;\n\t\t}\n\t}\n\t\n\tprivate _findEndPoints(middle: number): Endpoints {\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\n\t\tlet end: number = start + this._doc.song.loopLength;\n\t\tif (start < 0) {\n\t\t\tend -= start;\n\t\t\tstart = 0;\n\t\t}\n\t\tif (end > this._doc.song.barCount) {\n\t\t\tstart -= end - this._doc.song.barCount;\n\t\t\tend = this._doc.song.barCount;\n\t\t}\n\t\treturn {start: start, length: end - start};\n\t}\n\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._updateCursorStatus();\n\t\tthis._updatePreview();\n\t\tthis._whenMouseMoved(event);\n\t}\n\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\t//event.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tthis._updateCursorStatus();\n\t\tthis._updatePreview();\n\t\t//this._whenTouchMoved(event);\n\t\tthis._clientStartX = event.touches[0].clientX;\n\t\tthis._clientStartY = event.touches[0].clientY;\n\t\tthis._draggingHorizontally = false;\n\t\tthis._startedScrolling = false;\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (!this._mouseDown) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\t\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\n\t\t\t\tthis._startedScrolling = true;\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\n\t\t\t\tthis._draggingHorizontally = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this._draggingHorizontally) {\n\t\t\tthis._whenCursorMoved();\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._mouseDown) {\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\n\t\t\t\toldStart = this._change.oldStart;\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\n\t\t\t}\n\t\t\t\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\n\t\t\tlet start: number;\n\t\t\tlet end: number;\n\t\t\tlet temp: number;\n\t\t\tif (this._cursor.mode == this._startMode) {\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\n\t\t\t\tend = oldEnd;\n\t\t\t\tif (start < 0) start = 0;\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\n\t\t\t\tif (start == end) {\n\t\t\t\t\tstart = end - 1;\n\t\t\t\t} else if (start > end) {\n\t\t\t\t\ttemp = start;\n\t\t\t\t\tstart = end;\n\t\t\t\t\tend = temp;\n\t\t\t\t}\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\n\t\t\t} else if (this._cursor.mode == this._endMode) {\n\t\t\t\tstart = oldStart;\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\n\t\t\t\tif (end < 0) end = 0;\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\n\t\t\t\tif (end == start) {\n\t\t\t\t\tend = start + 1;\n\t\t\t\t} else if (end < start) {\n\t\t\t\t\ttemp = start;\n\t\t\t\t\tstart = end;\n\t\t\t\t\tend = temp;\n\t\t\t\t}\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\n\t\t\t}\n\t\t\tthis._doc.synth.jumpIntoLoop();\n\t\t\tif (this._doc.prefs.autoFollow) {\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\n\t\t\t}\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t} else {\n\t\t\tthis._updateCursorStatus();\n\t\t\tthis._updatePreview();\n\t\t}\n\t}\n\t\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tif (!this._startedScrolling) {\n\t\t\tthis._whenCursorMoved();\n\t\t\tthis._mouseOver = false;\n\t\t\tthis._whenCursorReleased(event);\n\t\t\tthis._updatePreview();\n\t\t}\n\t\tthis._mouseDown = false;\n\t}\n\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this._change != null) this._doc.record(this._change);\n\t\tthis._change = null;\n\t\tthis._mouseDown = false;\n\t\tthis._updateCursorStatus();\n\t\tthis._render();\n\t}\n\t\n\tprivate _updatePreview(): void {\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\n\t\t\n\t\tif (showHighlight) {\n\t\t\tconst radius: number = this._editorHeight / 2;\n\t\t\t\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\n\t\t\tif (this._cursor.mode == this._startMode) {\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\n\t\t\t} else if (this._cursor.mode == this._endMode) {\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\n\t\t\t} else {\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\n\t\t\t}\n\t\t\t\n\t\t\tthis._highlight.setAttribute(\"d\",\n\t\t\t\t`M ${highlightStart + radius} ${4} ` +\n\t\t\t\t`L ${highlightStop - radius} ${4} ` +\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\n\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\n\t\t\t\t`z`\n\t\t\t);\n\t\t}\n\t}\n\t\n\tprivate _documentChanged = (): void => {\n\t\tthis._render();\n\t}\n\t\n\tprivate _render(): void {\n\t\tthis._barWidth = this._doc.getBarWidth();\n\t\t\n\t\tconst radius: number = this._editorHeight / 2;\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\n\t\t\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\n\t\t\tthis._renderedBarWidth = this._barWidth;\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\n\t\t\tthis.container.style.width = editorWidth + \"px\";\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\n\t\t}\n\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\n\t\t\tthis._renderedLoopStart = loopStart;\n\t\t\tthis._renderedLoopStop = loopStop;\n\t\t\tthis._loop.setAttribute(\"d\",\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\n\t\t\t\t`z`\n\t\t\t);\n\t\t}\n\t\t\n\t\tthis._updatePreview();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {SpectrumWave, Instrument} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {ChangeSpectrum} from \"./changes\";\nimport {prettyNumber} from \"./EditorConfig\";\n\nexport class SpectrumEditor {\n\tprivate readonly _editorWidth: number = 120;\n\tprivate readonly _editorHeight: number = 26;\n\tprivate readonly _fill: SVGPathElement = SVG.path({fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\"});\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\tprivate readonly _curve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\n\tprivate readonly _arrow: SVGPathElement = SVG.path({fill: \"currentColor\", \"pointer-events\": \"none\"});\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\n\t\tthis._fill,\n\t\tthis._octaves,\n\t\tthis._fifths,\n\t\tthis._curve,\n\t\tthis._arrow,\n\t);\n\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"spectrum\", style: \"height: 100%;\"}, this._svg);\n\t\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _freqPrev: number = 0;\n\tprivate _ampPrev: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _change: ChangeSpectrum | null = null;\n\tprivate _renderedPath: String = \"\";\n\tprivate _renderedFifths: boolean = true;\n\t\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\n\t\t\tthis._octaves.appendChild(SVG.rect({fill: ColorConfig.tonic, x: (i+1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\n\t\t\tthis._fifths.appendChild(SVG.rect({fill: ColorConfig.fifthNote, x: (i+1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\n\tprivate _xToFreq(x: number): number {\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\n\t}\n\t\n\tprivate _yToAmp(y: number): number {\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._mouseDown) {\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\n\t\t\t\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\n\t\t\t\n\t\t\tif (freq != this._freqPrev) {\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\n\t\t\t\n\t\t\tthis._freqPrev = freq;\n\t\t\tthis._ampPrev = amp;\n\t\t\t\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t}\n\t}\n\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this._mouseDown) {\n\t\t\tthis._doc.record(this._change!);\n\t\t\tthis._change = null;\n\t\t}\n\t\tthis._mouseDown = false;\n\t}\n\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\n\t\tconst controlPointToHeight = (point: number): number => {\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\n\t\t}\n\t\t\n\t\tlet lastValue: number = 0;\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\n\t\t\tif (lastValue != 0 || nextValue != 0) {\n\t\t\t\tpath += \"L \";\n\t\t\t} else {\n\t\t\t\tpath += \"M \";\n\t\t\t}\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\t\t\tlastValue = nextValue;\n\t\t}\n\t\t\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\n\t\tif (lastValue > 0) {\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\n\t\t}\n\t\t\n\t\tif (this._renderedPath != path) {\n\t\t\tthis._renderedPath = path;\n\t\t\tthis._curve.setAttribute(\"d\", path);\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\n\t\t\t\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\n\t\t}\n\t\tif (this._renderedFifths != this._doc.prefs.showFifth) {\n\t\t\tthis._renderedFifths = this._doc.prefs.showFifth;\n\t\t\tthis._fifths.style.display = this._doc.prefs.showFifth ? \"\" : \"none\";\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {HarmonicsWave, Instrument} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {ChangeHarmonics} from \"./changes\";\nimport {prettyNumber} from \"./EditorConfig\";\n\nexport class HarmonicsEditor {\n\tprivate readonly _editorWidth: number = 120;\n\tprivate readonly _editorHeight: number = 26;\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\tprivate readonly _curve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\n\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\n\t\tthis._octaves,\n\t\tthis._fifths,\n\t\tthis._curve,\n\t\tthis._lastControlPointContainer,\n\t);\n\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"harmonics\", style: \"height: 100%;\"}, this._svg);\n\t\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _freqPrev: number = 0;\n\tprivate _ampPrev: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _change: ChangeHarmonics | null = null;\n\tprivate _renderedPath: String = \"\";\n\tprivate _renderedFifths: boolean = true;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\n\t\t\tthis._octaves.appendChild(SVG.rect({fill: ColorConfig.tonic, x: (i-0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\n\t\t\tthis._fifths.appendChild(SVG.rect({fill: ColorConfig.fifthNote, x: (i-0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\tconst rect: SVGRectElement = SVG.rect({fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight});\n\t\t\tthis._lastControlPoints.push(rect);\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\n\t\t}\n\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\n\tprivate _xToFreq(x: number): number {\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\n\t}\n\t\n\tprivate _yToAmp(y: number): number {\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._mouseDown) {\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\n\t\t\t\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\n\t\t\t\n\t\t\tif (freq != this._freqPrev) {\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\n\t\t\t\n\t\t\tthis._freqPrev = freq;\n\t\t\tthis._ampPrev = amp;\n\t\t\t\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t}\n\t}\n\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this._mouseDown) {\n\t\t\tthis._doc.record(this._change!);\n\t\t\tthis._change = null;\n\t\t}\n\t\tthis._mouseDown = false;\n\t}\n\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\n\t\tconst controlPointToHeight = (point: number): number => {\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\n\t\t}\n\t\t\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\n\t\tlet path: string = \"\";\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\n\t\t}\n\t\t\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\n\t\t}\n\t\t\n\t\tif (this._renderedPath != path) {\n\t\t\tthis._renderedPath = path;\n\t\t\tthis._curve.setAttribute(\"d\", path);\n\t\t}\n\t\tif (this._renderedFifths != this._doc.prefs.showFifth) {\n\t\t\tthis._renderedFifths = this._doc.prefs.showFifth;\n\t\t\tthis._fifths.style.display = this._doc.prefs.showFifth ? \"\" : \"none\";\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\n\nexport class BarScrollBar {\n\tprivate readonly _editorWidth: number = 512;\n\tprivate readonly _editorHeight: number = 20;\n\t\n\tprivate readonly _notches: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\tprivate readonly _handle: SVGRectElement = SVG.rect({fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4});\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2});\n\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\t\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight},\n\t\tthis._notches,\n\t\tthis._handle,\n\t\tthis._handleHighlight,\n\t\tthis._leftHighlight,\n\t\tthis._rightHighlight,\n\t);\n\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\"}, this._svg);\n\t\n\tprivate _mouseX: number = 0;\n\t//private _mouseY: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _dragging: boolean = false;\n\tprivate _dragStart: number;\n\tprivate _notchSpace: number;\n\tprivate _renderedNotchCount: number = -1;\n\tprivate _renderedScrollBarPos: number = -1;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tconst center: number = this._editorHeight * 0.5;\n\t\tconst base: number = 20;\n\t\tconst tip: number = 9;\n\t\tconst arrowHeight: number = 6;\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\n\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._updatePreview();\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._dragStart = this._mouseX;\n\t\t}\n\t}\n\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tthis._updatePreview();\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._dragStart = this._mouseX;\n\t\t}\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._dragging) {\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\n\t\t\t\tif (this._doc.barScrollPos > 0) {\n\t\t\t\t\tthis._doc.barScrollPos--;\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\n\t\t\t\t\tthis._doc.notifier.changed();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\n\t\t\t\t\tthis._doc.barScrollPos++;\n\t\t\t\t\tthis._dragStart += this._notchSpace;\n\t\t\t\t\tthis._doc.notifier.changed();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this._mouseOver) this._updatePreview();\n\t}\n\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (!this._dragging && this._mouseDown) {\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\n\t\t\t\tthis._doc.notifier.changed();\n\t\t\t} else {\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\n\t\t\t\tthis._doc.notifier.changed();\n\t\t\t}\n\t\t}\n\t\tthis._mouseDown = false;\n\t\tthis._dragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _updatePreview(): void {\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\n\t\tlet showleftHighlight: boolean = false;\n\t\tlet showRightHighlight: boolean = false;\n\t\tlet showHandleHighlight: boolean = false;\n\t\t\n\t\tif (showHighlight) {\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\n\t\t\t\tshowleftHighlight = true;\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\n\t\t\t\tshowRightHighlight = true;\n\t\t\t} else {\n\t\t\t\tshowHandleHighlight = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\n\t}\n\t\n\tpublic render(): void {\n\t\tthis._notchSpace = (this._editorWidth-1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\n\t\t\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\n\t\tif (resized) {\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\n\t\t\t\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\n\t\t\t\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\n\t\t\t\tthis._notches.appendChild(SVG.rect({fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2}));\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (resized || this._renderedScrollBarPos != this._doc.barScrollPos) {\n\t\t\tthis._renderedScrollBarPos = this._doc.barScrollPos;\n\t\t\tthis._handle.setAttribute(\"x\", String(this._notchSpace * this._doc.barScrollPos));\n\t\t\tthis._handle.setAttribute(\"width\", String(this._notchSpace * this._doc.trackVisibleBars));\n\t\t\tthis._handleHighlight.setAttribute(\"x\", String(this._notchSpace * this._doc.barScrollPos));\n\t\t\tthis._handleHighlight.setAttribute(\"width\", String(this._notchSpace * this._doc.trackVisibleBars));\n\t\t}\n\t\t\n\t\tthis._updatePreview();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\nimport {ChangeOctave} from \"./changes\";\nimport {ColorConfig} from \"./ColorConfig\";\n\nexport class OctaveScrollBar {\n\tprivate readonly _editorWidth: number = 20;\n\tprivate readonly _editorHeight: number = 481;\n\tprivate readonly _notchHeight: number = 4.0;\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\n\t\n\tprivate readonly _handle: SVGRectElement = SVG.rect({fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4});\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2});\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\t\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;`, width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 481\", preserveAspectRatio: \"none\"});\n\tpublic readonly container: HTMLDivElement = HTML.div({id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\"}, this._svg);\n\t\n\t//private _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _dragging: boolean = false;\n\tprivate _dragStart: number;\n\tprivate _barBottom: number;\n\tprivate _barHeight: number;\n\tprivate _renderedBarBottom: number = -1;\n\tprivate _renderedVisibleOctaveCount: number = -1;\n\tprivate _change: ChangeOctave | null = null;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\tthis._documentChanged();\n\t\t\n\t\tthis._svg.appendChild(this._handle);\n\t\t\n\t\t// notches:\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\n\t\t\tthis._svg.appendChild(SVG.rect({fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight}));\n\t\t}\n\t\t\n\t\tthis._svg.appendChild(this._handleHighlight);\n\t\tthis._svg.appendChild(this._upHighlight);\n\t\tthis._svg.appendChild(this._downHighlight);\n\t\t\n\t\tconst center: number = this._editorWidth * 0.5;\n\t\tconst base: number = 20;\n\t\tconst tip: number = 9;\n\t\tconst arrowWidth: number = 6;\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\n\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) return;\n\t\tthis._updatePreview();\n\t\t\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._change = null;\n\t\t\tthis._dragStart = this._mouseY;\n\t\t}\n\t}\n\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) return;\n\t\tthis._updatePreview();\n\t\t\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._change = null;\n\t\t\tthis._dragStart = this._mouseY;\n\t\t}\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) return;\n\t\tif (this._dragging) {\n\t\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\n\t\t\tconst scrollableOctaves: number = Config.pitchOctaves - visibleOctaveCount;\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\n\t\t\t\n\t\t\tconst currentOctave: number = this._doc.getBaseVisibleOctave(this._doc.channel);\n\t\t\tlet octave: number = currentOctave;\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\n\t\t\t\tif (octave < scrollableOctaves) {\n\t\t\t\t\toctave++;\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\n\t\t\t\tif (octave > 0) {\n\t\t\t\t\toctave--;\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(octave + visibleOctaveCount * 0.5));\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t}\n\t\t\n\t\tif (this._mouseOver) this._updatePreview();\n\t}\n\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && this._mouseDown) {\n\t\t\tif (this._dragging) {\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\n\t\t\t} else {\n\t\t\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\n\t\t\t\tconst scrollableOctaves: number = Config.pitchOctaves - visibleOctaveCount;\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\n\t\t\t\n\t\t\t\tconst currentOctave: number = this._doc.getBaseVisibleOctave(this._doc.channel);\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\n\t\t\t\t\tif (currentOctave < scrollableOctaves) {\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(currentOctave + 1 + visibleOctaveCount * 0.5));\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (currentOctave > 0) {\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(currentOctave - 1 + visibleOctaveCount * 0.5));\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._mouseDown = false;\n\t\tthis._dragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _updatePreview(): void {\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\n\t\tlet showUpHighlight: boolean = false;\n\t\tlet showDownHighlight: boolean = false;\n\t\tlet showHandleHighlight: boolean = false;\n\t\t\n\t\tif (showHighlight) {\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\n\t\t\t\tshowUpHighlight = true;\n\t\t\t} else if (this._mouseY > this._barBottom) {\n\t\t\t\tshowDownHighlight = true;\n\t\t\t} else {\n\t\t\t\tshowHandleHighlight = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\n\t}\n\t\n\tprivate _documentChanged = (): void => {\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.getBaseVisibleOctave(this._doc.channel));\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel)) ? \"hidden\" : \"visible\";\n\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedVisibleOctaveCount != visibleOctaveCount) {\n\t\t\tthis._renderedBarBottom = this._barBottom;\n\t\t\tthis._renderedVisibleOctaveCount = visibleOctaveCount;\n\t\t\tthis._barHeight = (this._octaveHeight * visibleOctaveCount + this._notchHeight);\n\t\t\tthis._handle.setAttribute(\"height\", String(this._barHeight));\n\t\t\tthis._handleHighlight.setAttribute(\"height\", String(this._barHeight));\n\t\t\tthis._handle.setAttribute(\"y\", String(this._barBottom - this._barHeight));\n\t\t\tthis._handleHighlight.setAttribute(\"y\", String(this._barBottom - this._barHeight));\n\t\t}\n\t\tthis._updatePreview();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport const defaultMidiExpression: number = 0x7F;\nexport const defaultMidiPitchBend: number = 0x2000;\n\nexport const enum MidiChunkType {\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\n}\n\nexport const enum MidiFileFormat {\n\tsingleTrack = 0x0000,\n\tsimultaneousTracks = 0x0001,\n\tindependentTracks = 0x0002,\n}\n\n// Lower 4 bits indicate channel, except for meta and sysex events.\nexport const enum MidiEventType {\n\t//channelMode = 0x70,\n\tnoteOff = 0x80,\n\tnoteOn = 0x90,\n\tkeyPressure = 0xA0,\n\tcontrolChange = 0xB0,\n\tprogramChange = 0xC0,\n\tchannelPressure = 0xD0,\n\tpitchBend = 0xE0,\n\tmetaAndSysex = 0xF0,\n\t\n\t// These events are identified by all 8 bits.\n\tmeta = 0xFF,\n\t// sysexStart = 0xF0,\n\t// sysexEscape = 0xF7,\n}\n\nexport const enum MidiControlEventMessage {\n\t\n\tsetParameterMSB = 0x06,\n\tvolumeMSB = 0x07,\n\tpanMSB = 0x0A,\n\texpressionMSB = 0x0B,\n\t\n\tsetParameterLSB = 0x26,\n\t//volumeLSB = 0x27,\n\t//expressionLSB = 0x2B,\n\t\n\t//nonRegisteredParameterNumberLSB = 0x62,\n\t//nonRegisteredParameterNumberMSB = 0x63,\n\tregisteredParameterNumberLSB = 0x64,\n\tregisteredParameterNumberMSB = 0x65,\n\t\n\t// Channel mode messages:\n\t/*\n\tallSoundOff = 0x78,\n\tresetControllers = 0x79,\n\tlocalControl = 0x7A,\n\tallNotesOff = 0x7B,\n\tomniModeOff = 0x7C,\n\tomniModeOn = 0x7D,\n\tmonoMode = 0x7E,\n\tpolyphonicMode = 0x7F,\n\t*/\n}\n\nexport const enum MidiRegisteredParameterNumberMSB {\n\tpitchBendRange = 0x00, // semitones\n\tfineTuning = 0x00,\n\tcoarseTuning = 0x00,\n\ttuningProgramSelect = 0x00,\n\ttuningBankSelect = 0x00,\n\treset = 0x7f,\n}\n\nexport const enum MidiRegisteredParameterNumberLSB {\n\tpitchBendRange = 0x00, // cents\n\tfineTuning = 0x01,\n\tcoarseTuning = 0x02,\n\ttuningProgramSelect = 0x03,\n\ttuningBankSelect = 0x04,\n\treset = 0x7f,\n}\n\nexport const enum MidiMetaEventMessage {\n\tsequenceNumber = 0x00,\n\ttext = 0x01,\n\tcopyrightNotice = 0x02,\n\ttrackName = 0x03,\n\tinstrumentName = 0x04,\n\tlyricText = 0x05,\n\tmarker = 0x06,\n\tcuePoint = 0x07,\n\tchannelPrefix = 0x20,\n\tendOfTrack = 0x2F,\n\ttempo = 0x51,\n\tsmpteOffset = 0x54,\n\ttimeSignature = 0x58,\n\tkeySignature = 0x59,\n\tsequencerSpecificEvent = 0x7F,\n}\n\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\nexport interface AnalogousDrum {\n\tfrequency: number;\n\tduration: number;\n\tvolume: number;\n}\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\n\t35: { frequency:  0, duration: 2, volume: 3 }, // Acoustic Bass Drum\n\t36: { frequency:  0, duration: 2, volume: 3 }, // Bass Drum 1\n\t37: { frequency:  5, duration: 1, volume: 3 }, // Side Stick\n\t38: { frequency:  4, duration: 2, volume: 3 }, // Acoustic Snare\n\t39: { frequency:  5, duration: 2, volume: 3 }, // Hand Clap\n\t40: { frequency:  4, duration: 2, volume: 3 }, // Electric Snare\n\t41: { frequency:  1, duration: 2, volume: 3 }, // Low Floor Tom\n\t42: { frequency:  8, duration: 1, volume: 3 }, // Closed Hi Hat\n\t43: { frequency:  1, duration: 2, volume: 3 }, // High Floor Tom\n\t44: { frequency:  8, duration: 1, volume: 2 }, // Pedal Hi-Hat\n\t45: { frequency:  2, duration: 2, volume: 3 }, // Low Tom\n\t46: { frequency:  8, duration: 4, volume: 3 }, // Open Hi-Hat\n\t47: { frequency:  2, duration: 2, volume: 3 }, // Low-Mid Tom\n\t48: { frequency:  3, duration: 2, volume: 3 }, // Hi-Mid Tom\n\t49: { frequency:  7, duration: 4, volume: 3 }, // Crash Cymbal 1\n\t50: { frequency:  3, duration: 2, volume: 3 }, // High Tom\n\t51: { frequency:  6, duration: 4, volume: 2 }, // Ride Cymbal 1\n\t52: { frequency:  7, duration: 4, volume: 3 }, // Chinese Cymbal\n\t53: { frequency:  6, duration: 2, volume: 3 }, // Ride Bell\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\n\t55: { frequency:  9, duration: 4, volume: 3 }, // Splash Cymbal\n\t56: { frequency:  7, duration: 1, volume: 2 }, // Cowbell\n\t57: { frequency:  7, duration: 4, volume: 3 }, // Crash Cymbal 2\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\n\t59: { frequency:  6, duration: 4, volume: 3 }, // Ride Cymbal 2\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\n};\n\nexport function midiVolumeToVolumeMult(volume: number): number {\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\n}\nexport function volumeMultToMidiVolume(volumeMult: number): number {\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\n}\nexport function midiExpressionToVolumeMult(expression: number): number {\n\treturn Math.pow(expression / 127, 4.0);\n}\nexport function volumeMultToMidiExpression(volumeMult: number): number {\n\treturn Math.pow(volumeMult, 0.25) * 127;\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {AnalogousDrum, analogousDrumMap, MidiEventType} from \"./Midi\";\n\ndeclare global {\n\tinterface Navigator {\n\t\trequestMIDIAccess?(): Promise<any>;\n\t}\n}\n\ninterface MIDIInput extends EventTarget {\n\tid: string;\n\ttype: \"input\" | \"output\";\n\tstate: \"disconnected\" | \"connected\";\n}\n\ninterface MIDIConnectionEvent {\n\tport: MIDIInput;\n}\n\ninterface MIDIMessageEvent {\n\tdata: [type: number, key: number, velocity: number];\n\ttarget: MIDIInput;\n}\n\n// A unique id for this tab.\nconst id: string = ((Math.random() * 0xffffffff) >>> 0).toString(16);\n\nexport class MidiInputHandler {\n\tconstructor(private _doc: SongDocument) {\n\t\tthis.registerMidiAccessHandler();\n\t}\n\t\n\tprivate async registerMidiAccessHandler() {\n\t\tif (navigator.requestMIDIAccess == null) return;\n\t\t\n\t\ttry {\n\t\t\tconst midiAccess = await navigator.requestMIDIAccess();\n\t\t\t\n\t\t\tmidiAccess.inputs.forEach(this._registerMidiInput);\n\t\t\tmidiAccess.addEventListener(\"statechange\", this._handleStateChange);\n\t\t\t\n\t\t\tthis._takeMidiHandlerFocus();\n\t\t\twindow.addEventListener(\"focus\", this._takeMidiHandlerFocus);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to get MIDI access\", e);\n\t\t}\n\t}\n\t\n\tprivate _takeMidiHandlerFocus = (event?: Event) => {\n\t\t// Record that this browser tab is the one that should handle midi\n\t\t// events and any other open tabs should ignore midi events for now.\n\t\tlocalStorage.setItem(\"midiHandlerId\", id);\n\t}\n\t\n\tprivate _handleStateChange = (event: MIDIConnectionEvent) => {\n\t\tif (event.port.type !== \"input\") return;\n\t\t\n\t\tswitch (event.port.state) {\n\t\t\tcase \"connected\":\n\t\t\t\tthis._registerMidiInput(event.port);\n\t\t\t\tbreak;\n\t\t\tcase \"disconnected\":\n\t\t\t\tthis._unregisterMidiInput(event.port);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tprivate _registerMidiInput = (midiInput: MIDIInput) => {\n\t\tmidiInput.addEventListener(\"midimessage\", this._onMidiMessage as any);\n\t}\n\t\n\tprivate _unregisterMidiInput = (midiInput: MIDIInput) => {\n\t\tmidiInput.removeEventListener(\"midimessage\", this._onMidiMessage as any);\n\t\tthis._doc.performance.clearAllPitches();\n\t}\n\t\n\tprivate _onMidiMessage = (event: MIDIMessageEvent) => {\n\t\t// Ignore midi events if disabled or a different tab is handling them.\n\t\tif (!this._doc.prefs.enableMidi || localStorage.getItem(\"midiHandlerId\") != id) return;\n\t\t\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tlet [eventType, key, velocity] = event.data;\n\t\teventType &= 0xF0;\n\t\t\n\t\tif (isDrum) {\n\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[key];\n\t\t\tif (drum != undefined) {\n\t\t\t\tkey = drum.frequency;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tkey -= Config.keys[this._doc.song.key].basePitch; // The basePitch of the song key is implicit so don't include it.\n\t\t\tif (key < 0 || key > Config.maxPitch) return;\n\t\t}\n\t\t\n\t\tif (eventType == MidiEventType.noteOn && velocity == 0) {\n\t\t\teventType = MidiEventType.noteOff;\n\t\t}\n\t\t\n\t\tswitch (eventType) {\n\t\t\tcase MidiEventType.noteOn:\n\t\t\t\tthis._doc.synth.preferLowerLatency = true;\n\t\t\t\tthis._doc.performance.addPerformedPitch(key);\n\t\t\t\tbreak;\n\t\t\tcase MidiEventType.noteOff:\n\t\t\t\tthis._doc.performance.removePerformedPitch(key);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {SongDocument} from \"./SongDocument\";\n\nexport class KeyboardLayout {\n\tprivate static _pianoAtC: ReadonlyArray<ReadonlyArray<number | null>> = [\n\t\t[   0,   2,   4,   5,   7,   9,  11,  12,  14,  16,  17],\n\t\t[null,   1,   3,null,   6,   8,  10,null,  13,  15,null,  18],\n\t\t[  12,  14,  16,  17,  19,  21,  23,  24,  26,  28,  29,  31,  33],\n\t\t[null,  13,  15,null,  18,  20,  22,null,  25,  27,null,  30,  32],\n\t];\n\tprivate static _pianoAtA: ReadonlyArray<ReadonlyArray<number | null>> = [\n\t\t[   0,   2,   3,   5,   7,   8,  10,  12,  14,  15,  17],\n\t\t[  -1,   1,null,   4,   6,null,   9,  11,  13,null,  16,  18],\n\t\t[  12,  14,  15,  17,  19,  20,  22,  24,  26,  27,  29,  31,  32],\n\t\t[  11,  13,null,  16,  18,null,  21,  23,  25,null,  28,  30,null],\n\t];\n\t\n\tpublic static keyPosToPitch(doc: SongDocument, x: number, y: number, keyboardLayout: string): number | null {\n\t\tlet pitchOffset: number | null = null;\n\t\tlet forcedKey: number | null = null;\n\t\tswitch (keyboardLayout) {\n\t\t\tcase \"wickiHayden\":\n\t\t\t\tpitchOffset = y * 5 + x * 2 - 2;\n\t\t\t\tbreak;\n\t\t\tcase \"songScale\":\n\t\t\t\tconst scaleFlags: ReadonlyArray<boolean> = Config.scales[doc.song.scale].flags;\n\t\t\t\tconst scaleIndices: number[] = <number[]> scaleFlags.map((flag, index) => flag ? index : null).filter((index) => index != null);\n\t\t\t\tpitchOffset = (y - 1 + Math.floor(x / scaleIndices.length)) * Config.pitchesPerOctave + scaleIndices[(x + scaleIndices.length) % scaleIndices.length];\n\t\t\t\tbreak;\n\t\t\tcase \"pianoAtC\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtC[y][x];\n\t\t\t\tforcedKey = Config.keys.dictionary[\"C\"].basePitch;\n\t\t\t\tbreak;\n\t\t\tcase \"pianoAtA\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtA[y][x];\n\t\t\t\tforcedKey = Config.keys.dictionary[\"A\"].basePitch;\n\t\t\t\tbreak;\n\t\t\tcase \"pianoTransposingC\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtC[y][x];\n\t\t\t\tbreak;\n\t\t\tcase \"pianoTransposingA\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtA[y][x];\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif (pitchOffset == null) return null;\n\t\t\n\t\tconst octaveOffset: number = Math.max(0, doc.song.channels[doc.channel].octave - 1) * Config.pitchesPerOctave;\n\t\tlet keyOffset: number = 0; // The basePitch of the song key is implicit.\n\t\t\n\t\tif (forcedKey != null) {\n\t\t\tconst keyBasePitch: number = Config.keys[doc.song.key].basePitch;\n\t\t\tkeyOffset = (forcedKey - keyBasePitch + 144) % 12;\n\t\t}\n\t\t\n\t\tconst pitch = octaveOffset + keyOffset + pitchOffset;\n\t\tif (pitch < 0 || pitch > Config.maxPitch) return null;\n\t\t\t\n\t\treturn pitch;\n\t}\n\t\n\tprivate _possiblyPlayingPitchesFromKeyboard: boolean = false;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\twindow.addEventListener(\"blur\", this._onWindowBlur);\n\t}\n\t\n\tprivate _onWindowBlur = (event: Event) => {\n\t\t// Browsers don't explicitly release keys when the page isn't in focus so let's just assume they're all released.\n\t\tif (this._possiblyPlayingPitchesFromKeyboard) {\n\t\t\tthis._doc.performance.clearAllPitches();\n\t\t\tthis._possiblyPlayingPitchesFromKeyboard = false;\n\t\t}\n\t}\n\t\n\tpublic handleKeyEvent(event: KeyboardEvent, pressed: boolean): void {\n\t\t// See: https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\n\t\tswitch (event.code) {\n\t\t\tcase \"Backquote\": this.handleKey(-1, 3, pressed); break;\n\t\t\tcase \"Digit1\": this.handleKey(0, 3, pressed); break;\n\t\t\tcase \"Digit2\": this.handleKey(1, 3, pressed); break;\n\t\t\tcase \"Digit3\": this.handleKey(2, 3, pressed); break;\n\t\t\tcase \"Digit4\": this.handleKey(3, 3, pressed); break;\n\t\t\tcase \"Digit5\": this.handleKey(4, 3, pressed); break;\n\t\t\tcase \"Digit6\": this.handleKey(5, 3, pressed); break;\n\t\t\tcase \"Digit7\": this.handleKey(6, 3, pressed); break;\n\t\t\tcase \"Digit8\": this.handleKey(7, 3, pressed); break;\n\t\t\tcase \"Digit9\": this.handleKey(8, 3, pressed); break;\n\t\t\tcase \"Digit0\": this.handleKey(9, 3, pressed); break;\n\t\t\tcase \"Minus\": this.handleKey(10, 3, pressed); break;\n\t\t\tcase \"Equal\": this.handleKey(11, 3, pressed); break;\n\t\t\tcase \"IntlYen\": this.handleKey(12, 3, pressed); break; // Present on Russian and Japanese keyboards.\n\t\t\t\n\t\t\tcase \"KeyQ\": this.handleKey(0, 2, pressed); break;\n\t\t\tcase \"KeyW\": this.handleKey(1, 2, pressed); break;\n\t\t\tcase \"KeyE\": this.handleKey(2, 2, pressed); break;\n\t\t\tcase \"KeyR\": this.handleKey(3, 2, pressed); break;\n\t\t\tcase \"KeyT\": this.handleKey(4, 2, pressed); break;\n\t\t\tcase \"KeyY\": this.handleKey(5, 2, pressed); break;\n\t\t\tcase \"KeyU\": this.handleKey(6, 2, pressed); break;\n\t\t\tcase \"KeyI\": this.handleKey(7, 2, pressed); break;\n\t\t\tcase \"KeyO\": this.handleKey(8, 2, pressed); break;\n\t\t\tcase \"KeyP\": this.handleKey(9, 2, pressed); break;\n\t\t\tcase \"BracketLeft\": this.handleKey(10, 2, pressed); break;\n\t\t\tcase \"BracketRight\": this.handleKey(11, 2, pressed); break;\n\t\t\tcase \"Backslash\":\n\t\t\t\t// Present on US keyboards... but on non-US keyboards it's also used at a different location, see \"IntlHash\" below. :/\n\t\t\t\tif (event.key == \"\\\\\" || event.key == \"|\") {\n\t\t\t\t\tthis.handleKey(12, 2, pressed);\n\t\t\t\t} else {\n\t\t\t\t\tthis.handleKey(11, 1, pressed);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase \"KeyA\": this.handleKey(0, 1, pressed); break;\n\t\t\tcase \"KeyS\": this.handleKey(1, 1, pressed); break;\n\t\t\tcase \"KeyD\": this.handleKey(2, 1, pressed); break;\n\t\t\tcase \"KeyF\": this.handleKey(3, 1, pressed); break;\n\t\t\tcase \"KeyG\": this.handleKey(4, 1, pressed); break;\n\t\t\tcase \"KeyH\": this.handleKey(5, 1, pressed); break;\n\t\t\tcase \"KeyJ\": this.handleKey(6, 1, pressed); break;\n\t\t\tcase \"KeyK\": this.handleKey(7, 1, pressed); break;\n\t\t\tcase \"KeyL\": this.handleKey(8, 1, pressed); break;\n\t\t\tcase \"Semicolon\": this.handleKey(9, 1, pressed); break;\n\t\t\tcase \"Quote\": this.handleKey(10, 1, pressed); break;\n\t\t\tcase \"IntlHash\": this.handleKey(11, 1, pressed); break; // Present on non-US keyboards... but in practice it is actually represented as \"Backslash\" so this is obsolete. Oh well. :/\n\t\t\t\n\t\t\tcase \"IntlBackslash\": this.handleKey(-1, 0, pressed); break; // Present on Brazillian and many European keyboards.\n\t\t\tcase \"KeyZ\": this.handleKey(0, 0, pressed); break;\n\t\t\tcase \"KeyX\": this.handleKey(1, 0, pressed); break;\n\t\t\tcase \"KeyC\": this.handleKey(2, 0, pressed); break;\n\t\t\tcase \"KeyV\": this.handleKey(3, 0, pressed); break;\n\t\t\tcase \"KeyB\": this.handleKey(4, 0, pressed); break;\n\t\t\tcase \"KeyN\": this.handleKey(5, 0, pressed); break;\n\t\t\tcase \"KeyM\": this.handleKey(6, 0, pressed); break;\n\t\t\tcase \"Comma\": this.handleKey(7, 0, pressed); break;\n\t\t\tcase \"Period\": this.handleKey(8, 0, pressed); break;\n\t\t\tcase \"Slash\": this.handleKey(9, 0, pressed); break;\n\t\t\tcase \"IntlRo\": this.handleKey(10, 0, pressed); break; // Present on Brazillian and Japanese keyboards.\n\t\t\t\n\t\t\tdefault: return; //unhandled, don't prevent default.\n\t\t}\n\t\t\n\t\t// If the key event was handled as a note, prevent default behavior.\n\t\tevent.preventDefault();\n\t}\n\t\n\tpublic handleKey(x: number, y: number, pressed: boolean): void {\n\t\t\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tif (isDrum) {\n\t\t\tif (x >= 0 && x < Config.drumCount) {\n\t\t\t\tif (pressed) {\n\t\t\t\t\tthis._doc.synth.preferLowerLatency = true;\n\t\t\t\t\tthis._doc.performance.addPerformedPitch(x);\n\t\t\t\t\tthis._possiblyPlayingPitchesFromKeyboard = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.performance.removePerformedPitch(x);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst pitch: number | null = KeyboardLayout.keyPosToPitch(this._doc, x, y, this._doc.prefs.keyboardLayout);\n\t\t\n\t\tif (pitch != null) {\n\t\t\tif (pressed) {\n\t\t\t\tthis._doc.synth.preferLowerLatency = true;\n\t\t\t\tthis._doc.performance.addPerformedPitch(pitch);\n\t\t\t\tthis._possiblyPlayingPitchesFromKeyboard = true;\n\t\t\t} else {\n\t\t\t\tthis._doc.performance.removePerformedPitch(pitch);\n\t\t\t}\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\n\nexport class Piano {\n\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\"});\n\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\"});\n\tprivate readonly _preview: HTMLDivElement = HTML.div({style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;`});\n\tpublic readonly container: HTMLDivElement = HTML.div({style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\"},\n\t\tthis._pianoContainer,\n\t\tthis._drumContainer,\n\t\tthis._preview,\n\t);\n\tprivate readonly _editorHeight: number = 481;\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\n\t\n\tprivate _pitchHeight: number;\n\tprivate _pitchCount: number;\n\t//private _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _cursorPitch: number;\n\tprivate _playedPitch: number = -1;\n\tprivate _renderedScale: number = -1;\n\tprivate _renderedDrums: boolean = false;\n\tprivate _renderedKey: number = -1;\n\tprivate _renderedPitchCount: number = -1;\n\tprivate readonly _renderedLiveInputPitches: number[] = [];\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\n\t\t\tthis._drumContainer.appendChild(HTML.div({class: \"drum-button\", style: `background-size: ${scale}% ${scale}%;`}));\n\t\t}\n\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\n\t\t\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\tthis._documentChanged();\n\t\t\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t}\n\t\n\tprivate _updateCursorPitch(): void {\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\n\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount-1, this._pitchCount - (this._mouseY / this._pitchHeight)));\n\t\tif (scale[Math.floor(mousePitch) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\n\t\t} else {\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\n\t\t\twhile (!scale[topPitch % Config.pitchesPerOctave]) {\n\t\t\t\ttopPitch++;\n\t\t\t}\n\t\t\twhile (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\n\t\t\t\tbottomPitch--;\n\t\t\t}\n\t\t\tlet topRange: number = topPitch;\n\t\t\tlet bottomRange: number = bottomPitch + 1;\n\t\t\tif (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\n\t\t\t\ttopRange -= 0.5;\n\t\t\t}\n\t\t\tif (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\n\t\t\t\tbottomRange += 0.5;\n\t\t\t}\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\n\t\t}\n\t}\n\t\n\tprivate _playLiveInput(): void {\n\t\tconst octaveOffset: number = this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\n\t\tconst currentPitch: number = this._cursorPitch + octaveOffset;\n\t\tif (this._playedPitch == currentPitch) return;\n\t\tthis._doc.performance.removePerformedPitch(this._playedPitch);\n\t\tthis._playedPitch = currentPitch;\n\t\tthis._doc.performance.addPerformedPitch(currentPitch);\n\t}\n\t\n\tprivate _releaseLiveInput(): void {\n\t\tthis._doc.performance.removePerformedPitch(this._playedPitch);\n\t\tthis._playedPitch = -1;\n\t}\n\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tthis._playLiveInput();\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tif (this._mouseDown) this._playLiveInput();\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\n\t\tif (this._mouseDown) this._releaseLiveInput();\n\t\tthis._mouseDown = false;\n\t\tthis._updatePreview();\n\t}\n\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tthis._playLiveInput();\n\t}\n\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tif (this._mouseDown) this._playLiveInput();\n\t}\n\t\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = false;\n\t\tthis._releaseLiveInput();\n\t}\n\t\n\tprivate _onAnimationFrame = (): void => {\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t\t\n\t\tlet liveInputChanged: boolean = false;\n\t\tconst liveInputPitchCount: number = !this._doc.performance.pitchesAreTemporary() ? this._doc.synth.liveInputPitches.length : 0;\n\t\tif (this._renderedLiveInputPitches.length != liveInputPitchCount) {\n\t\t\tliveInputChanged = true;\n\t\t}\n\t\tfor (let i: number = 0; i < liveInputPitchCount; i++) {\n\t\t\tif (this._renderedLiveInputPitches[i] != this._doc.synth.liveInputPitches[i]) {\n\t\t\t\tthis._renderedLiveInputPitches[i] = this._doc.synth.liveInputPitches[i];\n\t\t\t\tliveInputChanged = true;\n\t\t\t}\n\t\t}\n\t\tthis._renderedLiveInputPitches.length = liveInputPitchCount;\n\t\t\n\t\tif (liveInputChanged) {\n\t\t\tthis._updatePreview();\n\t\t}\n\t}\n\t\n\tprivate _updatePreview(): void {\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\n\t\t\n\t\tif (this._mouseOver && !this._mouseDown) {\n\t\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\n\t\t\t\n\t\t\tthis._preview.style.left = \"0px\";\n\t\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\n\t\t\tthis._preview.style.height = pitchHeight + \"px\";\n\t\t}\n\t\t\n\t\tconst octaveOffset: number = this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\n\t\tconst container: HTMLDivElement = this._doc.song.getChannelIsNoise(this._doc.channel) ? this._drumContainer : this._pianoContainer;\n\t\tconst children: HTMLCollection = container.children;\n\t\tfor (let i: number = 0; i < children.length; i++) {\n\t\t\tconst child: Element = children[i];\n\t\t\tif (this._renderedLiveInputPitches.indexOf(i + octaveOffset) == -1) {\n\t\t\t\tchild.classList.remove(\"pressed\");\n\t\t\t} else {\n\t\t\t\tchild.classList.add(\"pressed\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _documentChanged = (): void => {\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tthis._pitchCount = isDrum ? Config.drumCount : this._doc.getVisiblePitchCount();\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\n\t\tthis._updateCursorPitch();\n\t\tif (this._mouseDown) this._playLiveInput();\n\t\t\n\t\tif (!this._doc.prefs.showLetters) return;\n\t\tif (this._renderedScale == this._doc.song.scale && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedPitchCount == this._pitchCount) return;\n\t\t\n\t\tthis._renderedScale = this._doc.song.scale;\n\t\tthis._renderedKey = this._doc.song.key;\n\t\tthis._renderedDrums = isDrum;\n\t\t\n\t\tthis._pianoContainer.style.display = isDrum ? \"none\" : \"flex\";\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\n\t\t\n\t\tif (!isDrum) {\n\t\t\tif (this._renderedPitchCount != this._pitchCount) {\n\t\t\t\tthis._pianoContainer.innerHTML = \"\";\n\t\t\t\tfor (let i: number = 0; i < this._pitchCount; i++) {\n\t\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\"});\n\t\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({class: \"piano-button\", style: \"background: gray;\"}, pianoLabel);\n\t\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\n\t\t\t\t\tthis._pianoLabels[i] = pianoLabel;\n\t\t\t\t\tthis._pianoKeys[i] = pianoKey;\n\t\t\t\t}\n\t\t\t\tthis._pianoLabels.length = this._pitchCount;\n\t\t\t\tthis._pianoKeys.length = this._pitchCount;\n\t\t\t\tthis._renderedPitchCount = this._pitchCount;\n\t\t\t}\n\t\t\t\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\n\t\t\t\tthis._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\n\t\t\t\tif (!Config.scales[this._doc.song.scale].flags[j % Config.pitchesPerOctave]) {\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\n\t\t\t\t} else {\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\n\t\t\t\t\t\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? \"var(--white-piano-key-text)\" : \"var(--black-piano-key-text)\";\n\t\t\t\t\tlabel.textContent = Piano.getPitchName(pitchNameIndex, j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._updatePreview();\n\t}\n\t\n\tpublic static getPitchName(pitchNameIndex: number, scaleIndex: number): string {\n\t\tlet text: string;\n\t\t\n\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\n\t\t\ttext = Config.keys[pitchNameIndex].name;\n\t\t} else {\n\t\t\tconst shiftDir: number = Config.blackKeyNameParents[scaleIndex % Config.pitchesPerOctave];\n\t\t\ttext = Config.keys[(pitchNameIndex + Config.pitchesPerOctave + shiftDir) % Config.pitchesPerOctave].name;\n\t\t\tif (shiftDir == 1) {\n\t\t\t\ttext += \"♭\";\n\t\t\t} else if (shiftDir == -1) {\n\t\t\t\ttext += \"♯\";\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn text;\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {ChangeBeatsPerBar} from \"./changes\";\nimport {ColorConfig} from \"./ColorConfig\";\n\nconst {button, div, span, h2, input, br, select, option} = HTML;\n\nexport class BeatsPerBarPrompt implements Prompt {\n\tprivate readonly _beatsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"splice\"}, \"Splice beats at end of bars.\"),\n\t\toption({value: \"stretch\"}, \"Stretch notes to fit in bars.\"),\n\t\toption({value: \"overflow\"}, \"Overflow notes across bars.\"),\n\t);\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\n\t\th2(\"Beats Per Bar\"),\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\tdiv({style: \"text-align: right;\"},\n\t\t\t\t\"Beats per bar:\",\n\t\t\t\tbr(),\n\t\t\t\tspan({style: `font-size: smaller; color: ${ColorConfig.secondaryText};`}, \"(Multiples of 3 or 4 are recommended)\"),\n\t\t\t),\n\t\t\tthis._beatsStepper,\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._conversionStrategySelect),\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\n\t\t\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\n\t\tif (lastStrategy != null) {\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\n\t\t}\n\t\t\n\t\tthis._beatsStepper.select();\n\t\tsetTimeout(()=>this._beatsStepper.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.addEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\n\t\tthis._beatsStepper.addEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\n\t\tthis._beatsStepper.removeEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n\t\t\tevent.preventDefault();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tprivate static _validateNumber(event: Event): void {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tinput.value = String(BeatsPerBarPrompt._validate(input));\n\t}\n\t\n\tprivate static _validate(input: HTMLInputElement): number {\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\n\t}\n\t\n\tprivate _saveChanges = (): void => {\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(new ChangeBeatsPerBar(this._doc, BeatsPerBarPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value), true);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {ChangeMoveNotesSideways} from \"./changes\";\nimport {ColorConfig} from \"./ColorConfig\";\n\nconst {button, div, span, h2, input, br, select, option} = HTML;\n\nexport class MoveNotesSidewaysPrompt implements Prompt {\n\tprivate readonly _beatsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\"});\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"overflow\"}, \"Overflow notes across bars.\"),\n\t\toption({value: \"wrapAround\"}, \"Wrap notes around within bars.\"),\n\t);\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\n\t\th2(\"Move Notes Sideways\"),\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\tdiv({style: \"text-align: right;\"},\n\t\t\t\t\"Beats to move:\",\n\t\t\t\tbr(),\n\t\t\t\tspan({style: `font-size: smaller; color: ${ColorConfig.secondaryText};`}, \"(Negative is left, positive is right)\"),\n\t\t\t),\n\t\t\tthis._beatsStepper,\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._conversionStrategySelect),\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\n\t\t\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\n\t\tif (lastStrategy != null) {\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\n\t\t}\n\t\t\n\t\tthis._beatsStepper.select();\n\t\tsetTimeout(()=>this._beatsStepper.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\n\tprivate static _validateNumber(event: Event): void {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tlet value: number = +input.value;\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\n\t\tvalue = Math.round(value * 100) / 100;\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\n\t}\n\t\n\tprivate _saveChanges = (): void => {\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {ChangeGroup} from \"./Change\";\nimport {ChangeBarCount} from \"./changes\";\nimport {ColorConfig} from \"./ColorConfig\";\n\nconst {button, div, span, h2, input, br, select, option} = HTML;\n\nexport class SongDurationPrompt implements Prompt {\n\tprivate readonly _barsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\tprivate readonly _positionSelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"end\"},       \"Apply change at end of song.\"),\n\t\toption({value: \"beginning\"}, \"Apply change at beginning of song.\"),\n\t);\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\n\t\th2(\"Song Length\"),\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\tdiv({style: \"display: inline-block; text-align: right;\"},\n\t\t\t\t\"Bars per song:\",\n\t\t\t\tbr(),\n\t\t\t\tspan({style: `font-size: smaller; color: ${ColorConfig.secondaryText};`}, \"(Multiples of 4 are recommended)\"),\n\t\t\t),\n\t\t\tthis._barsStepper,\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._positionSelect),\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\n\t\t\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\n\t\tif (lastPosition != null) {\n\t\t\tthis._positionSelect.value = lastPosition;\n\t\t}\n\t\t\n\t\tthis._barsStepper.select();\n\t\tsetTimeout(()=>this._barsStepper.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongDurationPrompt._validateKey);\n\t\tthis._barsStepper.addEventListener(\"blur\", SongDurationPrompt._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongDurationPrompt._validateKey);\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongDurationPrompt._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n\t\t\tevent.preventDefault();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tprivate static _validateNumber(event: Event): void {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tinput.value = String(SongDurationPrompt._validate(input));\n\t}\n\t\n\tprivate static _validate(input: HTMLInputElement): number {\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\n\t}\n\t\n\tprivate _saveChanges = (): void => {\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\tgroup.append(new ChangeBarCount(this._doc, SongDurationPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(group, true);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {Instrument} from \"../synth/synth\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {ChangeGroup} from \"./Change\";\nimport {ChangeStringSustainType} from \"./changes\";\n\nconst {button, div, h2, p, select, option} = HTML;\n\nexport class SustainPrompt implements Prompt {\n\tprivate readonly _typeSelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"acoustic\"}, \"(A) Acoustic\"),\n\t\toption({value: \"bright\"}, \"(B) Bright\"),\n\t);\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt\", style: \"width: 300px;\"},\n\t\tdiv(\n\t\t\th2(\"String Sustain\"),\n\t\t\tp(\"This setting controls how quickly the picked string vibration decays.\"),\n\t\t\tp(\"Unlike most of BeepBox's instrument synthesizer features, a picked string cannot change frequency suddenly while maintaining its decay. If a tone's pitch changes suddenly (e.g. if the chord type is set to \\\"arpeggio\\\" or the transition type is set to \\\"continues\\\") then the string will be re-picked and start decaying from the beginning again, even if the envelopes don't otherwise restart.\"),\n\t\t),\n\t\tdiv({style: {display: Config.enableAcousticSustain ? undefined : \"none\"}},\n\t\t\tp(\"BeepBox comes with two slightly different sustain designs. You can select one here and press \\\"Okay\\\" to confirm it.\"),\n\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._typeSelect),\n\t\t),\n\t\tdiv({style: {display: Config.enableAcousticSustain ? \"flex\" : \"none\", \"flex-direction\": \"row-reverse\", \"justify-content\": \"space-between\"}},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tthis._typeSelect.value = Config.sustainTypeNames[instrument.stringSustainType];\n\t\t\n\t\tsetTimeout(()=>this._cancelButton.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\n\tprivate _saveChanges = (): void => {\n\t\tif (Config.enableAcousticSustain) {\n\t\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\t\tgroup.append(new ChangeStringSustainType(this._doc, <any> Config.sustainTypeNames.indexOf(this._typeSelect.value)));\n\t\t\tthis._doc.prompt = null;\n\t\t\tthis._doc.record(group, true);\n\t\t} else {\n\t\t\tthis._close();\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {ChangeGroup} from \"./Change\";\nimport {ChangePatternsPerChannel, ChangeInstrumentsFlags, ChangeChannelCount} from \"./changes\";\n\nconst {button, div, label, br, h2, input} = HTML;\n\nexport class ChannelSettingsPrompt implements Prompt {\n\tprivate readonly _patternsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\tprivate readonly _drumChannelStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\tprivate readonly _layeredInstrumentsBox: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _patternInstrumentsBox: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px; text-align: right;\"},\n\t\th2(\"Channel Settings\"),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Pitch channels:\",\n\t\t\tthis._pitchChannelStepper,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Drum channels:\",\n\t\t\tthis._drumChannelStepper,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Available patterns per channel:\",\n\t\t\tthis._patternsStepper,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Simultaneous instruments\",\n\t\t\tbr(),\n\t\t\t\"per channel:\",\n\t\t\tthis._layeredInstrumentsBox,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Different instruments\",\n\t\t\tbr(),\n\t\t\t\"per pattern:\",\n\t\t\tthis._patternInstrumentsBox,\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\n\t\tthis._patternsStepper.min = \"1\";\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\n\t\t\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\n\t\t\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\n\t\t\n\t\tthis._layeredInstrumentsBox.checked = this._doc.song.layeredInstruments;\n\t\tthis._patternInstrumentsBox.checked = this._doc.song.patternInstruments;\n\t\t\n\t\tthis._pitchChannelStepper.select();\n\t\tsetTimeout(()=>this._pitchChannelStepper.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._patternsStepper.addEventListener(\"blur\", this._validateNumber);\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", this._validateNumber);\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", this._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._patternsStepper.removeEventListener(\"blur\", this._validateNumber);\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", this._validateNumber);\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", this._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n\t\t\tevent.preventDefault();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tprivate _validateNumber = (event: Event): void => {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\n\t}\n\t\n\tprivate static _validate(input: HTMLInputElement): number {\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\n\t}\n\t\n\tprivate _saveChanges = (): void => {\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\tgroup.append(new ChangeInstrumentsFlags(this._doc, this._layeredInstrumentsBox.checked, this._patternInstrumentsBox.checked));\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper)));\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(group, true);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\n\tlet nextOffset = 0;\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\n\tconst wordSizes = [8, 4, 2, 1];\n\tfor (const wordSize of wordSizes) {\n\t\tif (leftBytes >= wordSize) {\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\n\t\t\tnextOffset = done.nextOffset;\n\t\t\tleftBytes = done.leftBytes;\n\t\t}\n\t}\n\treturn dest;\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\n\t\tlet ViewClass: any = Uint8Array;\n\t\tswitch (wordSize) {\n\t\t\tcase 8:\n\t\t\t\tViewClass = Float64Array;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tViewClass = Float32Array;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tViewClass = Uint16Array;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tViewClass = Uint8Array;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tViewClass = Uint8Array;\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\n\t\t\tview_dest[i] = view_source[i];\n\t\t}\n\t\treturn {\n\t\t\tnextOffset : view_source.byteOffset + view_source.byteLength,\n\t\t\tleftBytes : leftBytes - view_dest.length * wordSize,\n\t\t}\n\t}\n}\n\n// Note: All methods are big endian.\nexport class ArrayBufferWriter {\n\tprivate _writeIndex: number = 0;\n\tprivate _fileSize: number = 0;\n\tprivate _arrayBuffer: ArrayBuffer;\n\tprivate _data: DataView;\n\t\n\tconstructor(initialCapacity: number) {\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\n\t\tthis._data = new DataView(this._arrayBuffer);\n\t}\n\t\n\tprivate _addBytes(numBytes: number): void {\n\t\tthis._fileSize += numBytes;\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\n\t\t\tthis._data = new DataView(this._arrayBuffer);\n\t\t}\n\t}\n\t\n\tpublic getWriteIndex(): number {\n\t\treturn this._writeIndex;\n\t}\n\t\n\tpublic rewriteUint32(index: number, value: number): void {\n\t\tthis._data.setUint32(index, value >>> 0, false);\n\t}\n\t\n\tpublic writeUint32(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(4);\n\t\tthis._data.setUint32(this._writeIndex, value, false);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\n\tpublic writeUint24(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(3);\n\t\tthis._data.setUint8(this._writeIndex  , (value>>16)&0xff);\n\t\tthis._data.setUint8(this._writeIndex+1, (value>> 8)&0xff);\n\t\tthis._data.setUint8(this._writeIndex+2, (value    )&0xff);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\n\tpublic writeUint16(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(2);\n\t\tthis._data.setUint16(this._writeIndex, value, false);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\n\tpublic writeUint8(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(1);\n\t\tthis._data.setUint8(this._writeIndex, value);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\n\tpublic writeInt8(value: number): void {\n\t\tvalue = value | 0;\n\t\tthis._addBytes(1);\n\t\tthis._data.setInt8(this._writeIndex, value);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\n\tpublic writeMidi7Bits(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\n\t\tthis._addBytes(1);\n\t\tthis._data.setUint8(this._writeIndex, value);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\n\tpublic writeMidiVariableLength(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\n\t\tlet startWriting: boolean = false;\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\tconst shift: number = 21 - i * 7;\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\n\t\t}\n\t}\n\t\n\tpublic writeMidiAscii(string: string): void {\n\t\tthis.writeMidiVariableLength(string.length);\n\t\tfor (let i: number = 0; i < string.length; i++) {\n\t\t\tconst charCode: number = string.charCodeAt(i);\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\n\t\t}\n\t}\n\t\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {InstrumentType, /*EnvelopeType,*/ Config, getArpeggioPitchIndex} from \"../synth/SynthConfig\";\nimport {Instrument, Pattern, Note, Song, Synth} from \"../synth/synth\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {Preset, EditorConfig} from \"./EditorConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {ArrayBufferWriter} from \"./ArrayBufferWriter\";\nimport {MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression} from \"./Midi\";\n\nconst {button, div, h2, input, select, option} = HTML;\n\nfunction lerp(low: number, high: number, t: number): number {\n\treturn low + t * (high - low);\n}\n\nfunction save(blob: Blob, name: string): void {\n\tif ((<any>navigator).msSaveOrOpenBlob) {\n\t\t(<any>navigator).msSaveOrOpenBlob(blob, name);\n\t\treturn;\n\t}\n\n\tconst anchor: HTMLAnchorElement = document.createElement(\"a\");\n\tif (anchor.download != undefined) {\n\t\tconst url: string = URL.createObjectURL(blob);\n\t\tsetTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\tanchor.href = url;\n\t\tanchor.download = name;\n\t\t// Chrome bug regression: We need to delay dispatching the click\n\t\t// event. Seems to be related to going back in the browser history.\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=825100\n\t\tsetTimeout(function() { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\n\t} else {\n\t\tconst url: string = URL.createObjectURL(blob);\n\t\tsetTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\tif (!window.open(url, \"_blank\")) window.location.href = url;\n\t}\n}\n\nexport class ExportPrompt implements Prompt {\n\tprivate readonly _fileName: HTMLInputElement = input({type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\"});\n\tprivate readonly _enableIntro: HTMLInputElement = input({type: \"checkbox\"});\n\tprivate readonly _loopDropDown: HTMLInputElement = input({style:\"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\"});\n\tprivate readonly _enableOutro: HTMLInputElement = input({type: \"checkbox\"});\n\tprivate readonly _formatSelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"wav\"}, \".wav\"),\n\t\toption({value: \"mp3\"}, \".mp3\"),\n\t\toption({value: \"midi\"}, \".mid\"),\n\t\toption({value: \"json\"}, \".json (for any BeepBox version)\"),\n\t\toption({value: \"html\"}, \".html (opens BeepBox)\"),\n\t);\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _exportButton: HTMLButtonElement = button({class: \"exportButton\", style: \"width:45%;\"}, \"Export\");\n\tprivate static readonly midiChipInstruments: number[] = [\n\t\t0x4A, // rounded -> recorder\n\t\t0x47, // triangle -> clarinet\n\t\t0x50, // square -> square wave\n\t\t0x46, // ¹/₄ pulse -> bassoon\n\t\t0x44, // ¹/₈ pulse -> oboe\n\t\t0x51, // sawtooth -> sawtooth wave\n\t\t0x51, // double saw -> sawtooth wave\n\t\t0x51, // double pulse -> sawtooth wave\n\t\t0x51, // spiky -> sawtooth wave\n\t];\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 200px;\"},\n\t\th2(\"Export Options\"),\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\"},\n\t\t\t\"File name:\",\n\t\t\tthis._fileName,\n\t\t),\n\t\tdiv({style: \"display: table; width: 100%;\"},\n\t\t\tdiv({style: \"display: table-row;\"},\n\t\t\t\tdiv({style: \"display: table-cell;\"}, \"Intro:\"),\n\t\t\t\tdiv({style: \"display: table-cell;\"}, \"Loop Count:\"),\n\t\t\t\tdiv({style: \"display: table-cell;\"}, \"Outro:\"),\n\t\t\t),\n\t\t\tdiv({style: \"display: table-row;\"},\n\t\t\t\tdiv({style: \"display: table-cell; vertical-align: middle;\"}, this._enableIntro),\n\t\t\t\tdiv({style: \"display: table-cell; vertical-align: middle;\"}, this._loopDropDown),\n\t\t\t\tdiv({style: \"display: table-cell; vertical-align: middle;\"}, this._enableOutro),\n\t\t\t),\n\t\t),\n\t\tdiv({style: \"text-align: left;\"}, \"File Type:\"),\n\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._formatSelect),\n\t\tdiv({style: \"text-align: left;\"}, \"(Be patient, exporting may take some time...)\"),\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._exportButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._loopDropDown.value = \"1\";\n\t\t\n\t\tif (this._doc.song.loopStart == 0) {\n\t\t\tthis._enableIntro.checked = false;\n\t\t\tthis._enableIntro.disabled = true;\n\t\t} else {\n\t\t\tthis._enableIntro.checked = true;\n\t\t\tthis._enableIntro.disabled = false;\n\t\t}\n\t\tif (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\n\t\t\tthis._enableOutro.checked = false;\n\t\t\tthis._enableOutro.disabled = true;\n\t\t} else {\n\t\t\tthis._enableOutro.checked = true;\n\t\t\tthis._enableOutro.disabled = false;\n\t\t}\n\t\t\n\t\tconst lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\n\t\tif (lastExportFormat != null) {\n\t\t\tthis._formatSelect.value = lastExportFormat;\n\t\t}\n\t\t\n\t\tthis._fileName.select();\n\t\tsetTimeout(()=>this._fileName.focus());\n\t\t\n\t\tthis._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\n\t\tthis._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\n\t\tthis._exportButton.addEventListener(\"click\", this._export);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\n\t\tthis._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\n\t\tthis._exportButton.removeEventListener(\"click\", this._export);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._export();\n\t\t}\n\t}\n\t\n\tprivate static _validateFileName(event: Event): void {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tconst deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\n\t\tif (deleteChars.test(input.value)) {\n\t\t\tlet cursorPos: number = <number>input.selectionStart;\n\t\t\tinput.value = input.value.replace(deleteChars, \"\");\n\t\t\tcursorPos--;\n\t\t\tinput.setSelectionRange(cursorPos, cursorPos);\n\t\t}\n\t}\n\t\n\tprivate static _validateNumber(event: Event): void {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tinput.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\n\t}\n\t\n\tprivate _export = (): void => {\n\t\twindow.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\n\t\tswitch(this._formatSelect.value) {\n\t\t\tcase \"wav\":\n\t\t\t\tthis._exportToWav();\n\t\t\t\tbreak;\n\t\t\tcase \"mp3\":\n\t\t\t\tthis._exportToMp3();\n\t\t\t\tbreak;\n\t\t\tcase \"midi\":\n\t\t\t\tthis._exportToMidi();\n\t\t\t\tbreak;\n\t\t\tcase \"json\":\n\t\t\t\tthis._exportToJson();\n\t\t\t\tbreak;\n\t\t\tcase \"html\":\n\t\t\t\tthis._exportToHtml();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unhandled file export type.\");\n\t\t}\n\t}\n\t\n\tprivate _synthesize(sampleRate: number): {recordedSamplesL: Float32Array, recordedSamplesR: Float32Array} {\n\t\tconst synth: Synth = new Synth(this._doc.song);\n\t\tsynth.samplesPerSecond = sampleRate;\n\t\tsynth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\n\t\tif (!this._enableIntro.checked) {\n\t\t\tfor (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\n\t\t\t\tsynth.goToNextBar();\n\t\t\t}\n\t\t}\n\t\tconst sampleFrames: number = Math.ceil(synth.getSamplesPerBar() * synth.getTotalBars(this._enableIntro.checked, this._enableOutro.checked));\n\t\tconst recordedSamplesL: Float32Array = new Float32Array(sampleFrames);\n\t\tconst recordedSamplesR: Float32Array = new Float32Array(sampleFrames);\n\t\t//const timer: number = performance.now();\n\t\tsynth.synthesize(recordedSamplesL, recordedSamplesR, sampleFrames);\n\t\t//console.log(\"export timer\", (performance.now() - timer) / 1000.0);\n\t\t\n\t\treturn {recordedSamplesL, recordedSamplesR};\n\t}\n\t\n\tprivate _exportToWav(): void {\n\t\tconst sampleRate: number = 48000; // Use professional video editing standard sample rate for .wav file export.\n\t\tconst {recordedSamplesL, recordedSamplesR} = this._synthesize(sampleRate);\n\t\tconst sampleFrames: number = recordedSamplesL.length;\n\t\t\n\t\tconst wavChannelCount: number = 2;\n\t\tconst bytesPerSample: number = 2;\n\t\tconst bitsPerSample: number = 8 * bytesPerSample;\n\t\tconst sampleCount: number = wavChannelCount * sampleFrames;\n\t\t\n\t\tconst totalFileSize: number = 44 + sampleCount * bytesPerSample;\n\t\t\n\t\tlet index: number = 0;\n\t\tconst arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\n\t\tconst data: DataView = new DataView(arrayBuffer);\n\t\tdata.setUint32(index, 0x52494646, false); index += 4;\n\t\tdata.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\n\t\tdata.setUint32(index, 0x57415645, false); index += 4;\n\t\tdata.setUint32(index, 0x666D7420, false); index += 4;\n\t\tdata.setUint32(index, 0x00000010, true); index += 4; // size of following header\n\t\tdata.setUint16(index, 0x0001, true); index += 2; // not compressed\n\t\tdata.setUint16(index, wavChannelCount, true); index += 2; // channel count\n\t\tdata.setUint32(index, sampleRate, true); index += 4; // sample rate\n\t\tdata.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\n\t\tdata.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\n\t\tdata.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\n\t\tdata.setUint32(index, 0x64617461, false); index += 4;\n\t\tdata.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\n\t\t\n\t\tif (bytesPerSample > 1) {\n\t\t\t// usually samples are signed. \n\t\t\tconst range: number = (1 << (bitsPerSample - 1)) - 1;\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, recordedSamplesL[i])) * range);\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, recordedSamplesR[i])) * range);\n\t\t\t\tif (bytesPerSample == 2) {\n\t\t\t\t\tdata.setInt16(index, valL, true); index += 2;\n\t\t\t\t\tdata.setInt16(index, valR, true); index += 2;\n\t\t\t\t} else if (bytesPerSample == 4) {\n\t\t\t\t\tdata.setInt32(index, valL, true); index += 4;\n\t\t\t\t\tdata.setInt32(index, valR, true); index += 4;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"unsupported sample size\");\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// 8 bit samples are a special case: they are unsigned.\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, recordedSamplesL[i])) * 127 + 128);\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, recordedSamplesR[i])) * 127 + 128);\n\t\t\t\tdata.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\n\t\t\t\tdata.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst blob: Blob = new Blob([arrayBuffer], {type: \"audio/wav\"});\n\t\tsave(blob, this._fileName.value.trim() + \".wav\");\n\t\tthis._close();\n\t}\n\t\n\tprivate _exportToMp3(): void {\n\t\tconst whenEncoderIsAvailable = (): void => {\n\t\t\tconst sampleRate: number = 44100; // Use consumer CD standard sample rate for .mp3 export.\n\t\t\tconst {recordedSamplesL, recordedSamplesR} = this._synthesize(sampleRate);\n\t\t\t\n\t\t\tconst lamejs: any = (<any> window)[\"lamejs\"];\n\t\t\tconst channelCount: number = 2;\n\t\t\tconst kbps: number = 192;\n\t\t\tconst sampleBlockSize: number = 1152;\n\t\t\tconst mp3encoder: any = new lamejs.Mp3Encoder(channelCount, sampleRate, kbps);\n\t\t\tconst mp3Data: any[] = [];\n\t\t\t\n\t\t\tconst left: Int16Array = new Int16Array(recordedSamplesL.length);\n\t\t\tconst right: Int16Array = new Int16Array(recordedSamplesR.length);\n\t\t\tconst range: number = (1 << 15) - 1;\n\t\t\tfor (let i: number = 0; i < recordedSamplesL.length; i++) {\n\t\t\t\tleft[i]  = Math.floor(Math.max(-1, Math.min(1, recordedSamplesL[i])) * range);\n\t\t\t\tright[i] = Math.floor(Math.max(-1, Math.min(1, recordedSamplesR[i])) * range);\n\t\t\t}\n\t\t\t\n\t\t\tfor (let i: number = 0; i < left.length; i += sampleBlockSize) {\n\t\t\t\tconst leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\n\t\t\t\tconst rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\n\t\t\t\tconst mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\n\t\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\n\t\t\t}\n\t\t\tconst mp3buf: any = mp3encoder.flush();\n\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\n\t\t\t\n\t\t\tconst blob: Blob = new Blob(mp3Data, {type: \"audio/mp3\"});\n\t\t\tsave(blob, this._fileName.value.trim() + \".mp3\");\n\t\t\tthis._close();\n\t\t}\n\t\t\n\t\tif (\"lamejs\" in window) {\n\t\t\twhenEncoderIsAvailable();\n\t\t} else {\n\t\t\tvar script = document.createElement(\"script\");\n\t\t\tscript.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\n\t\t\tscript.onload = whenEncoderIsAvailable;\n\t\t\tdocument.head.appendChild(script);\n\t\t}\n\t}\n\t\n\tprivate _exportToMidi(): void {\n\t\tconst song: Song = this._doc.song;\n\t\tconst midiTicksPerBeepBoxTick: number = 2;\n\t\tconst midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\n\t\tconst midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\n\t\tconst secondsPerMinute: number = 60;\n\t\tconst microsecondsPerMinute: number = secondsPerMinute * 1000000;\n\t\tconst beatsPerMinute: number = song.getBeatsPerMinute();\n\t\tconst microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\n\t\t//const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\n\t\tconst midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\n\t\tconst pitchBendRange: number = 24;\n\t\tconst defaultNoteVelocity: number = 90;\n\t\t\n\t\tconst unrolledBars: number[] = [];\n\t\tif (this._enableIntro.checked) {\n\t\t\tfor (let bar: number = 0; bar < song.loopStart; bar++) {\n\t\t\t\tunrolledBars.push(bar);\n\t\t\t}\n\t\t}\n\t\tfor (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\n\t\t\tfor (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\n\t\t\t\tunrolledBars.push(bar);\n\t\t\t}\n\t\t}\n\t\tif (this._enableOutro.checked) {\n\t\t\tfor (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\n\t\t\t\tunrolledBars.push(bar);\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst tracks = [{isMeta:  true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false}];\n\t\tlet midiChannelCounter: number = 0;\n\t\tlet foundADrumset: boolean = false;\n\t\tfor (let channel: number = 0; channel < this._doc.song.getChannelCount(); channel++) {\n\t\t\tif (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\n\t\t\t\ttracks.push({isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true});\n\t\t\t\tfoundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\n\t\t\t} else {\n\t\t\t\tif (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\n\t\t\t\ttracks.push({isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false});\n\t\t\t\tif (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\n\t\twriter.writeUint32(MidiChunkType.header);\n\t\twriter.writeUint32(6); // length of headers is 6 bytes\n\t\twriter.writeUint16(MidiFileFormat.simultaneousTracks);\n\t\twriter.writeUint16(tracks.length);\n\t\twriter.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\n\t\t\n\t\tfor (const track of tracks) {\n\t\t\twriter.writeUint32(MidiChunkType.track);\n\t\t\t\n\t\t\tconst {isMeta, channel, midiChannel, isNoise, isDrumset} = track;\n\t\t\t\n\t\t\t// We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\n\t\t\tconst trackStartIndex: number = writer.getWriteIndex();\n\t\t\twriter.writeUint32(0); // placeholder for track size\n\t\t\t\n\t\t\tlet prevTime: number = 0;\n\t\t\tlet barStartTime: number = 0;\n\t\t\tconst writeEventTime = function(time: number): void {\n\t\t\t\tif (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\n\t\t\t\twriter.writeMidiVariableLength(time - prevTime);\n\t\t\t\tprevTime = time;\n\t\t\t}\n\t\t\t\n\t\t\tconst writeControlEvent = function(message: MidiControlEventMessage, value: number): void {\n\t\t\t\tif (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\n\t\t\t\twriter.writeUint8(MidiEventType.controlChange | midiChannel);\n\t\t\t\twriter.writeMidi7Bits(message);\n\t\t\t\twriter.writeMidi7Bits(value | 0);\n\t\t\t}\n\t\t\t\n\t\t\tif (isMeta) {\n\t\t\t\t// for first midi track, include tempo, time signature, and key signature information.\n\t\t\t\t\n\t\t\t\twriteEventTime(0);\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.text);\n\t\t\t\twriter.writeMidiAscii(\"Composed with https://www.beepbox.co\");\n\t\t\t\t\n\t\t\t\twriteEventTime(0);\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.tempo);\n\t\t\t\twriter.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\n\t\t\t\twriter.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\n\t\t\t\t\n\t\t\t\twriteEventTime(0);\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\n\t\t\t\twriter.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\n\t\t\t\twriter.writeUint8(song.beatsPerBar); // numerator.\n\t\t\t\twriter.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\n\t\t\t\twriter.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\n\t\t\t\twriter.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\n\t\t\t\t\n\t\t\t\tconst isMinor: boolean = Config.scales[song.scale].flags[3] && !Config.scales[song.scale].flags[4];\n\t\t\t\tconst key: number = song.key; // C=0, C#=1, counting up to B=11\n\t\t\t\tlet numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\n\t\t\t\tif ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\n\t\t\t\tif (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\n\t\t\t\twhile (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\n\t\t\t\t\n\t\t\t\twriteEventTime(0);\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.keySignature);\n\t\t\t\twriter.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\n\t\t\t\twriter.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\n\t\t\t\twriter.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\n\t\t\t\t\n\t\t\t\tif (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\n\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\n\t\t\t\twriter.writeMidiAscii(\"Loop Start\");\n\t\t\t\t\n\t\t\t\tfor (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\n\t\t\t\t\tbarStartTime += midiTicksPerBar * song.loopLength;\n\t\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\n\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\n\t\t\t\t\twriter.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\n\t\t\t\tif (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t// For remaining tracks, set up the instruments and write the notes:\n\t\t\t\t\n\t\t\t\tlet channelName: string = ColorConfig.getChannelColor(song, channel).name + \" channel\";\n\t\t\t\twriteEventTime(0);\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.trackName);\n\t\t\t\twriter.writeMidiAscii(channelName);\n\t\t\t\t\n\t\t\t\t// This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\n\t\t\t\t\n\t\t\t\tlet prevInstrumentIndex: number = -1;\n\t\t\t\tfunction writeInstrumentSettings(instrumentIndex: number): void {\n\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\n\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\n\t\t\t\t\t\n\t\t\t\t\tif (prevInstrumentIndex != instrumentIndex) {\n\t\t\t\t\t\tprevInstrumentIndex = instrumentIndex;\n\t\t\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\n\t\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\n\t\t\t\t\t\twriter.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!isDrumset) {\n\t\t\t\t\t\t\tlet instrumentProgram: number = 81; // default to sawtooth wave. \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (preset != null && preset.midiProgram != undefined) {\n\t\t\t\t\t\t\t\tinstrumentProgram = preset.midiProgram;\n\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\n\t\t\t\t\t\t\t\t// The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\n\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\n\t\t\t\t\t\t\t\t\tif (isNoise) {\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = 75; // pan flute\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.chip) {\n\t\t\t\t\t\t\t\t\tif (ExportPrompt.midiChipInstruments.length > instrument.chipWave) {\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = ExportPrompt.midiChipInstruments[instrument.chipWave];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.supersaw) {\n\t\t\t\t\t\t\t\t\tinstrumentProgram = 81; // sawtooth\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.pickedString) {\n\t\t\t\t\t\t\t\t\tinstrumentProgram = 0x19; // steel guitar\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Unrecognized instrument type.\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Program (instrument) change event:\n\t\t\t\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.programChange | midiChannel);\n\t\t\t\t\t\t\twriter.writeMidi7Bits(instrumentProgram);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Instrument volume:\n\t\t\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\t\t\tlet instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Instrument pan:\n\t\t\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\t\t\tlet instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (song.getPattern(channel, 0) == null) {\n\t\t\t\t\t// Go ahead and apply the instrument settings at the beginning of the channel\n\t\t\t\t\t// even if a bar doesn't kick in until later.\n\t\t\t\t\twriteInstrumentSettings(0);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet prevPitchBend: number = defaultMidiPitchBend;\n\t\t\t\tlet prevExpression: number = defaultMidiExpression;\n\t\t\t\tlet shouldResetExpressionAndPitchBend: boolean = false;\n\t\t\t\t//let prevTremolo: number = -1;\n\t\t\t\tconst channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\n\t\t\t\tconst intervalScale: number = isNoise ? Config.noiseInterval : 1;\n\t\t\t\t\n\t\t\t\tfor (const bar of unrolledBars) {\n\t\t\t\t\tconst pattern: Pattern | null = song.getPattern(channel, bar);\n\t\t\t\t\t\n\t\t\t\t\tif (pattern != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst instrumentIndex: number = pattern.instruments[0]; // Don't bother trying to export multiple instruments per pattern to midi, just pick the first one.\n\t\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\n\t\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\n\t\t\t\t\t\twriteInstrumentSettings(instrumentIndex);\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet usesArpeggio: boolean = instrument.getChord().arpeggiates;\n\t\t\t\t\t\tlet polyphony: number = usesArpeggio ? 1 : Config.maxChordSize;\n\t\t\t\t\t\tif (instrument.getChord().customInterval) {\n\t\t\t\t\t\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics) {\n\t\t\t\t\t\t\t\tpolyphony = 2;\n\t\t\t\t\t\t\t\tusesArpeggio = true;\n\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\n\t\t\t\t\t\t\t\tpolyphony = Config.operatorCount;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\n\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\n\t\t\t\t\t\t\tlet pinTime: number = noteStartTime;\n\t\t\t\t\t\t\tlet pinSize: number = note.pins[0].size;\n\t\t\t\t\t\t\tlet pinInterval: number = note.pins[0].interval;\n\t\t\t\t\t\t\tconst prevPitches: number[] = [-1, -1, -1, -1];\n\t\t\t\t\t\t\tconst nextPitches: number[] = [-1, -1, -1, -1];\n\t\t\t\t\t\t\tconst toneCount: number = Math.min(polyphony, note.pitches.length);\n\t\t\t\t\t\t\tconst velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].size / Config.noteSizeMax)) : defaultNoteVelocity;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \n\t\t\t\t\t\t\t// To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\n\t\t\t\t\t\t\t// This may involve offsetting this base pitch from BeepBox's note pitch.\n\t\t\t\t\t\t\tlet mainInterval: number = note.pickMainInterval();\n\t\t\t\t\t\t\tlet pitchOffset: number = mainInterval * intervalScale;\n\t\t\t\t\t\t\tif (!isDrumset) {\n\t\t\t\t\t\t\t\tlet maxPitchOffset: number = pitchBendRange;\n\t\t\t\t\t\t\t\tlet minPitchOffset: number = -pitchBendRange;\n\t\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\n\t\t\t\t\t\t\t\t\tconst interval = note.pins[pinIndex].interval * intervalScale;\n\t\t\t\t\t\t\t\t\tmaxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\n\t\t\t\t\t\t\t\t\tminPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t// I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\n\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > polyphony) {\n\t\t\t\t\t\t\t\t\tlet lowestArpeggioOffset: number = 0;\n\t\t\t\t\t\t\t\t\tlet highestArpeggioOffset: number = 0;\n\t\t\t\t\t\t\t\t\tconst basePitch: number = note.pitches[toneCount - 1];\n\t\t\t\t\t\t\t\t\tfor (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\n\t\t\t\t\t\t\t\t\t\tlowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\n\t\t\t\t\t\t\t\t\t\thighestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmaxPitchOffset -= lowestArpeggioOffset;\n\t\t\t\t\t\t\t\t\tminPitchOffset += lowestArpeggioOffset;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tpitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\n\t\t\t\t\t\t\t\tconst nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\n\t\t\t\t\t\t\t\tconst nextPinSize: number = note.pins[pinIndex].size;\n\t\t\t\t\t\t\t\tconst nextPinInterval: number = note.pins[pinIndex].interval;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst length: number = nextPinTime - pinTime;\n\t\t\t\t\t\t\t\tfor (let midiTick: number = 0; midiTick < length; midiTick++) {\n\t\t\t\t\t\t\t\t\tconst midiTickTime: number = pinTime + midiTick;\n\t\t\t\t\t\t\t\t\tconst linearSize: number = lerp(pinSize, nextPinSize, midiTick / length);\n\t\t\t\t\t\t\t\t\tconst linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst interval: number = linearInterval * intervalScale - pitchOffset;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.noteSizeToVolumeMult(linearSize))));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (pitchBend != prevPitchBend) {\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\n\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\n\t\t\t\t\t\t\t\t\t\tprevPitchBend = pitchBend;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (expression != prevExpression && !isDrumset) {\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\n\t\t\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, expression);\n\t\t\t\t\t\t\t\t\t\tprevExpression = expression;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst noteStarting: boolean = midiTickTime == noteStartTime;\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\n\t\t\t\t\t\t\t\t\t\tlet nextPitch: number = note.pitches[toneIndex];\n\t\t\t\t\t\t\t\t\t\tif (isDrumset) {\n\t\t\t\t\t\t\t\t\t\t\tnextPitch += mainInterval;\n\t\t\t\t\t\t\t\t\t\t\tconst drumsetMap: number[] = [\n\t\t\t\t\t\t\t\t\t\t\t\t36, // Bass Drum 1\n\t\t\t\t\t\t\t\t\t\t\t\t41, // Low Floor Tom\n\t\t\t\t\t\t\t\t\t\t\t\t45, // Low Tom\n\t\t\t\t\t\t\t\t\t\t\t\t48, // Hi-Mid Tom\n\t\t\t\t\t\t\t\t\t\t\t\t40, // Electric Snare\n\t\t\t\t\t\t\t\t\t\t\t\t39, // Hand Clap\n\t\t\t\t\t\t\t\t\t\t\t\t59, // Ride Cymbal 2\n\t\t\t\t\t\t\t\t\t\t\t\t49, // Crash Cymbal 1\n\t\t\t\t\t\t\t\t\t\t\t\t46, // Open Hi-Hat\n\t\t\t\t\t\t\t\t\t\t\t\t55, // Splash Cymbal\n\t\t\t\t\t\t\t\t\t\t\t\t69, // Cabasa\n\t\t\t\t\t\t\t\t\t\t\t\t54, // Tambourine\n\t\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t\t\tif (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = drumsetMap[nextPitch];\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksPerArpeggio = Config.rhythms[song.rhythm].ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\n\t\t\t\t\t\t\t\t\t\t\t\tconst arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, song.rhythm, arpeggio)];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\n\t\t\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * preset.midiSubharmonicOctaves;\n\t\t\t\t\t\t\t\t\t\t\t} else if (isNoise) {\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (isNoise) nextPitch *= 2;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tnextPitch = Math.max(0, Math.min(127, nextPitch));\n\t\t\t\t\t\t\t\t\t\tnextPitches[toneIndex] = nextPitch;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\n\t\t\t\t\t\t\t\t\t\tif (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOn | midiChannel);\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\n\t\t\t\t\t\t\t\t\t\t\tprevPitches[toneIndex] = nextPitches[toneIndex];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tpinTime = nextPinTime;\n\t\t\t\t\t\t\t\tpinSize = nextPinSize;\n\t\t\t\t\t\t\t\tpinInterval = nextPinInterval;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// End all tones.\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\n\t\t\t\t\t\t\t\t// TODO: If the note at the start of the next pattern has\n\t\t\t\t\t\t\t\t// continuesLastPattern and has the same chord, it ought to extend\n\t\t\t\t\t\t\t\t// this previous note.\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\n\t\t\t\t\t\t\t\t// Reset expression\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\n\t\t\t\t\t\t\t\t// Reset pitch bend\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\twriteEventTime(barStartTime);\n\t\t\twriter.writeUint8(MidiEventType.meta);\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\n\t\t\twriter.writeMidiVariableLength(0x00);\n\t\t\t\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\n\t\t}\n\t\t\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], {type: \"audio/midi\"});\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\n\t\t\n\t\tthis._close();\n\t}\n\t\n\tprivate _exportToJson(): void {\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\n\t\tconst blob: Blob = new Blob([jsonString], {type: \"application/json\"});\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\n\t\tthis._close();\n\t}\n\t\n\tprivate _exportToHtml(): void {\n\t\tconst fileContents = `\\\n<!DOCTYPE html><meta charset=\"utf-8\">\n\nYou should be redirected to the song at:<br /><br />\n\n<a id=\"destination\" href=\"${new URL(\"#\" + this._doc.song.toBase64String(), location.href).href}\"></a>\n\n<style>\n\t:root {\n\t\tcolor: white;\n\t\tbackground: black;\n\t\tfont-family:\n\t\tsans-serif;\n\t}\n\ta {\n\t\tcolor: #98f;\n\t}\n\ta[href]::before {\n\t\tcontent: attr(href);\n\t}\n</style>\n\n<script>\n\tlocation.assign(document.querySelector(\"a#destination\").href);\n</script>\n`;\n\t\tconst blob: Blob = new Blob([fileContents], {type: \"text/html\"});\n\t\tsave(blob, this._fileName.value.trim() + \".html\");\n\t\tthis._close();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n// Note: All methods are big endian.\nexport class ArrayBufferReader {\n\tprivate _readIndex: number = 0;\n\tprivate _data: DataView;\n\t\n\tconstructor(data: DataView) {\n\t\tthis._data = data;\n\t}\n\t\n\tpublic getReadIndex(): number {\n\t\treturn this._readIndex;\n\t}\n\t\n\tpublic readUint32(): number {\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\n\t\tthis._readIndex += 4;\n\t\treturn result;\n\t}\n\t\n\tpublic readUint24(): number {\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\n\t}\n\t\n\tpublic readUint16(): number {\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\n\t\tthis._readIndex += 2;\n\t\treturn result;\n\t}\n\t\n\tpublic readUint8(): number {\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getUint8(this._readIndex);\n\t\tthis._readIndex++;\n\t\treturn result;\n\t}\n\t\n\tpublic readInt8(): number {\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getInt8(this._readIndex);\n\t\tthis._readIndex++;\n\t\treturn result;\n\t}\n\t\n\tpublic peakUint8(): number {\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\treturn this._data.getUint8(this._readIndex);\n\t}\n\t\n\tpublic readMidi7Bits(): number {\n\t\tconst result: number = this.readUint8();\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\n\t\treturn result & 0x7f;\n\t}\n\t\n\tpublic readMidiVariableLength(): number {\n\t\tlet result: number = 0;\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\tconst nextByte: number = this.readUint8();\n\t\t\tresult += nextByte & 0x7f;\n\t\t\tif (nextByte & 0x80) {\n\t\t\t\tresult = result << 7;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t\n\tpublic skipBytes(length: number): void {\n\t\tthis._readIndex += length;\n\t}\n\t\n\tpublic hasMore(): boolean {\n\t\treturn this._data.byteLength > this._readIndex;\n\t}\n\t\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\n\t\tthis.skipBytes(length);\n\t\treturn result;\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {InstrumentType, Config} from \"../synth/SynthConfig\";\nimport {NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth} from \"../synth/synth\";\nimport {Preset, EditorConfig} from \"./EditorConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {ChangeGroup} from \"./Change\";\nimport {removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns} from \"./changes\";\nimport {AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult} from \"./Midi\";\nimport {ArrayBufferReader} from \"./ArrayBufferReader\";\n\nconst {button, p, div, h2, input} = HTML;\n\nexport class ImportPrompt implements Prompt {\n\tprivate readonly _fileInput: HTMLInputElement = input({type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\"});\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px;\"},\n\t\th2(\"Import\"),\n\t\tp({style: \"text-align: left; margin: 0.5em 0;\"},\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\n\t\t),\n\t\tp({style: \"text-align: left; margin: 0.5em 0;\"},\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\n\t\t),\n\t\tthis._fileInput,\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._fileInput.select();\n\t\tsetTimeout(()=>this._fileInput.focus());\n\t\t\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t}\n\t\n\tprivate _whenFileSelected = (): void => {\n\t\tconst file: File = this._fileInput.files![0];\n\t\tif (!file) return;\n\t\t\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2).toLowerCase();\n\t\tif (extension == \"json\") {\n\t\t\tconst reader: FileReader = new FileReader();\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\n\t\t\t\tthis._doc.prompt = null;\n\t\t\t\tthis._doc.goBackToStart();\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\n\t\t\t});\n\t\t\treader.readAsText(file);\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\n\t\t\tconst reader: FileReader = new FileReader();\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\n\t\t\t\tthis._doc.prompt = null;\n\t\t\t\tthis._doc.goBackToStart();\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\n\t\t\t});\n\t\t\treader.readAsArrayBuffer(file);\n\t\t} else {\n\t\t\tconsole.error(\"Unrecognized file extension.\");\n\t\t\tthis._close();\n\t\t}\n\t}\n\t\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\n\t\t\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\n\t\tlet headerReader: ArrayBufferReader | null = null;\n\t\tinterface Track {\n\t\t\treader: ArrayBufferReader;\n\t\t\tnextEventMidiTick: number;\n\t\t\tended: boolean;\n\t\t\trunningStatus: number;\n\t\t}\n\t\tconst tracks: Track[] = [];\n\t\twhile(reader.hasMore()) {\n\t\t\tconst chunkType: number = reader.readUint32();\n\t\t\tconst chunkLength: number = reader.readUint32();\n\t\t\tif (chunkType == MidiChunkType.header) {\n\t\t\t\tif (headerReader == null) {\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\n\t\t\t\t}\n\t\t\t} else if (chunkType == MidiChunkType.track) {\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\n\t\t\t\tif (trackReader.hasMore()) {\n\t\t\t\t\ttracks.push({\n\t\t\t\t\t\treader: trackReader,\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\n\t\t\t\t\t\tended: false,\n\t\t\t\t\t\trunningStatus: -1,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Unknown chunk type. Skip it.\n\t\t\t\treader.skipBytes(chunkLength);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (headerReader == null) {\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\n\t\t\tthis._close();\n\t\t\treturn;\n\t\t}\n\t\tconst fileFormat: number = headerReader.readUint16();\n\t\t/*const trackCount: number =*/ headerReader.readUint16();\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\n\t\t\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\n\t\tlet currentIndependentTrackIndex: number = 0;\n\t\tconst currentTrackIndices: number[] = [];\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\n\t\tif (independentTracks) {\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\n\t\t} else {\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\n\t\t\t}\n\t\t}\n\t\t\n\t\tinterface NoteEvent {\n\t\t\tmidiTick: number;\n\t\t\tpitch: number;\n\t\t\tvelocity: number;\n\t\t\tprogram: number;\n\t\t\tinstrumentVolume: number;\n\t\t\tinstrumentPan: number;\n\t\t\ton: boolean;\n\t\t}\n\t\tinterface PitchBendEvent {\n\t\t\tmidiTick: number;\n\t\t\tinterval: number;\n\t\t}\n\t\tinterface NoteSizeEvent {\n\t\t\tmidiTick: number;\n\t\t\tsize: number;\n\t\t}\n\t\t\n\t\t// To read a MIDI file we have to simulate state changing over time.\n\t\t// Keep a record of various parameters for each channel that may\n\t\t// change over time, initialized to default values.\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\n\t\tconst channelRPNMSB: number[] = [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff];\n\t\tconst channelRPNLSB: number[] = [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff];\n\t\tconst pitchBendRangeMSB: number[] = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]; // pitch bend range defaults to 2 semitones.\n\t\tconst pitchBendRangeLSB: number[] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]; // and 0 cents.\n\t\tconst currentInstrumentProgram: number[] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n\t\tconst currentInstrumentVolumes: number[] = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100];\n\t\tconst currentInstrumentPans: number[] = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64];\n\t\tconst noteEvents: NoteEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\n\t\tconst pitchBendEvents: PitchBendEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\n\t\tconst noteSizeEvents: NoteSizeEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\n\t\tlet beatsPerBar: number = 8;\n\t\tlet numSharps: number = 0;\n\t\tlet isMinor: boolean = false;\n\t\t\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\n\t\tlet currentMidiTick: number = 0;\n\t\twhile (true) {\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\n\t\t\tlet anyTrackHasMore: boolean = false;\n\t\t\tfor (const trackIndex of currentTrackIndices) {\n\t\t\t\t\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\n\t\t\t\tconst track: Track = tracks[trackIndex];\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\n\t\t\t\t\t\n\t\t\t\t\t// If the most significant bit is set in the first byte\n\t\t\t\t\t// of the event, it's a new event status, otherwise\n\t\t\t\t\t// reuse the running status and save the next byte for\n\t\t\t\t\t// the content of the event. I'm assuming running status\n\t\t\t\t\t// is separate for each track.\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\n\t\t\t\t\t\n\t\t\t\t\tswitch (eventType) {\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tnoteEvents[eventChannel].push({midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false});\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tif (velocity == 0) {\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\n\t\t\t\t\t\t\t\t)));\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\n\t\t\t\t\t\t\t\t)));\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\n\t\t\t\t\t\t\t\t\tpitch: pitch,\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\n\t\t\t\t\t\t\t\t\ton: true,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\n\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tswitch (message) {\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\n\t\t\t\t\t\t\t\t\tnoteSizeEvents[eventChannel].push({midiTick: currentMidiTick, size: Synth.volumeMultToNoteSize(midiExpressionToVolumeMult(value))});\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.programChange: {\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\n\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({midiTick: currentMidiTick, interval: interval});\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 3);\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\n\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\n\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\n\t\t\t\t\t\t\t\tthis._close();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\n\t\t\t\t\t\t\tthis._close();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttrack.ended = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\n\t\t\t\t\t\tif (independentTracks) {\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!track.ended) {\n\t\t\t\t\tanyTrackHasMore = true;\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (anyTrackHasMore) {\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\n\t\t\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\n\t\t}\n\n\t\tlet key: number = numSharps;\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\n\t\t\n\t\t// Convert each midi channel into a BeepBox channel.\n\t\tconst pitchChannels: Channel[] = [];\n\t\tconst noiseChannels: Channel[] = [];\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\n\t\t\t\n\t\t\tconst channel: Channel = new Channel();\n\t\t\t\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\n\t\t\t\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\n\t\t\t\n\t\t\tif (isNoiseChannel) {\n\t\t\t\tif (isDrumsetChannel) {\n\t\t\t\t\tnoiseChannels.unshift(channel);\n\t\t\t\t} else {\n\t\t\t\t\tnoiseChannels.push(channel);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpitchChannels.push(channel);\n\t\t\t}\n\t\t\t\n\t\t\tlet currentVelocity: number = 1.0;\n\t\t\tlet currentProgram: number = 0;\n\t\t\tlet currentInstrumentVolume: number = 0;\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\n\t\t\t\n\t\t\tif (isDrumsetChannel) {\n\t\t\t\tconst heldPitches: number[] = [];\n\t\t\t\tlet currentBar: number = -1;\n\t\t\t\tlet pattern: Pattern | null = null;\n\t\t\t\tlet prevEventPart: number = 0;\n\t\t\t\tlet setInstrumentVolume: boolean = false;\n\t\t\t\t\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n\t\t\t\tconst instrument: Instrument = new Instrument(false);\n\t\t\t\tinstrument.fromJsonObject(preset.settings, false, 1);\n\t\t\t\tinstrument.preset = presetValue;\n\t\t\t\tchannel.instruments.push(instrument);\n\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\n\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\twhile (currentBar < bar) {\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\n\t\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpattern = new Pattern();\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\n\t\t\t\t\t\t\tpattern.instruments[0] = 0;\n\t\t\t\t\t\t\tpattern.instruments.length = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\n\t\t\t\t\t\t// zero volume.\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\n\t\t\t\t\t\tlet maxDuration: number = 0;\n\t\t\t\t\t\tlet noteSize: number = 1; // the minimum non-zero note size.\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnoteSize = Math.max(noteSize, Math.round(drum.volume * currentVelocity));\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, noteSize, true);\n\t\t\t\t\t\t\n\t\t\t\t\t\tnote.pitches.length = 0;\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpattern.notes.push(note);\n\t\t\t\t\t\t\n\t\t\t\t\t\theldPitches.length = 0;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\n\t\t\t\t\t\tprevEventPart = nextEventPart;\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\n\t\t\t\t\n\t\t\t\t// Advance the pitch bend and note size timelines to the given midiTick, \n\t\t\t\t// changing the value of currentMidiInterval or currentMidiNoteSize.\n\t\t\t\t// IMPORTANT: These functions can't rewind!\n\t\t\t\tlet currentMidiInterval: number = 0.0;\n\t\t\t\tlet currentMidiNoteSize: number = Config.noteSizeMax;\n\t\t\t\tlet pitchBendEventIndex: number = 0;\n\t\t\t\tlet noteSizeEventIndex: number = 0;\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\n\t\t\t\t\t\tpitchBendEventIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfunction updateCurrentMidiNoteSize(midiTick: number) {\n\t\t\t\t\twhile (noteSizeEventIndex < noteSizeEvents[midiChannel].length && noteSizeEvents[midiChannel][noteSizeEventIndex].midiTick <= midiTick) {\n\t\t\t\t\t\tcurrentMidiNoteSize = noteSizeEvents[midiChannel][noteSizeEventIndex].size;\n\t\t\t\t\t\tnoteSizeEventIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\n\t\t\t\tconst heldPitches: number[] = [];\n\t\t\t\tlet currentBar: number = -1;\n\t\t\t\tlet pattern: Pattern | null = null;\n\t\t\t\tlet prevEventMidiTick: number = 0;\n\t\t\t\tlet prevEventPart: number = 0;\n\t\t\t\tlet pitchSum: number = 0;\n\t\t\t\tlet pitchCount: number = 0;\n\t\t\t\t\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\n\t\t\t\t\t\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\n\t\t\t\t\t\tlet createdNote: boolean = false;\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\n\t\t\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel);\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\n\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, 1);\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel);\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tpattern.instruments[0] = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\n\t\t\t\t\t\t\t\t\tpattern.instruments.length = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\n\t\t\t\t\t\t\t\t// zero volume.\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and note size events\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and size.\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, false);\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\n\t\t\t\t\t\t\t\tnote.continuesLastPattern = (createdNote && noteStartPart == 0);\n\t\t\t\t\t\t\t\tcreatedNote = true;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\n\t\t\t\t\t\t\t\tupdateCurrentMidiNoteSize(noteStartMidiTick);\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiNoteSize));\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tinterface PotentialPin {\n\t\t\t\t\t\t\t\t\tpart: number;\n\t\t\t\t\t\t\t\t\tpitch: number;\n\t\t\t\t\t\t\t\t\tsize: number;\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\n\t\t\t\t\t\t\t\t\tkeySize: boolean;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\n\t\t\t\t\t\t\t\t\t{part: 0, pitch: initialBeepBoxPitch, size: firstPin.size, keyPitch: false, keySize: false}\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\n\t\t\t\t\t\t\t\tlet prevPartSize: number = currentVelocity * currentMidiNoteSize;\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and sizes. Detect places where\n\t\t\t\t\t\t\t\t\t// the interval or size are at or cross whole numbers, and add these to the list of\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiNoteSize(midiTick);\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\n\t\t\t\t\t\t\t\t\tconst partSize: number = currentVelocity * currentMidiNoteSize;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst nearestSize: number = Math.round(partSize);\n\t\t\t\t\t\t\t\t\tconst sizeIsNearInteger: boolean = Math.abs(partSize - nearestSize) < 0.01;\n\t\t\t\t\t\t\t\t\tconst sizeCrossedInteger: boolean = (Math.abs(prevPartSize - Math.round(prevPartSize)))\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partSize - prevPartSize) >= 1.0\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partSize) != Math.floor(prevPartSize);\n\t\t\t\t\t\t\t\t\tconst keySize: boolean = sizeIsNearInteger || sizeCrossedInteger;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\n\t\t\t\t\t\t\t\t\tprevPartSize = partSize;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (keyPitch || keySize || lastPart) {\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = {part: noteRelativePart, pitch: nearestPitch, size: nearestSize, keyPitch: keyPitch || lastPart, keySize: keySize || lastPart};\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keySize) {\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.size - prevPin.size) / (currentPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\tlet furthestSizeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\n\t\t\t\t\t\t\t\t\t\t\tlet addSizePin: boolean = false;\n\t\t\t\t\t\t\t\t\t\t\tlet addSizePinAtIndex: number = Number.MAX_VALUE;\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keySize) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedSize: number = prevPin.size + slope * (potentialPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedSize - potentialPin.size);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestSizeDistance < distance) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestSizeDistance = distance;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddSizePin = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddSizePinAtIndex = potentialIndex;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (addSizePin) {\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addSizePinAtIndex);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.size));\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.size));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (noteEvent.on) {\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\n\t\t\t\t\tprevEventPart = nextEventPart;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\n\t\t\t\tchannel.octave = isNoiseChannel ? 0 : Math.max(0, Math.min(Config.pitchOctaves - 1, Math.floor(averagePitch / 12)));\n\t\t\t}\n\t\t\t\t\n\t\t\twhile (channel.bars.length < songTotalBars) {\n\t\t\t\tchannel.bars.push(0);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\n\t\t// To compensate, try to merge non-overlapping channels.\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\n\t\t\twhile (channels.length > maxLength) {\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\n\t\t\t\t\t\tlet conflicts: number = 0;\n\t\t\t\t\t\tlet gaps: number = 0;\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\n\t\t\t\tfor (const instrument of channelB.instruments) {\n\t\t\t\t\tchannelA.instruments.push(instrument);\n\t\t\t\t}\n\t\t\t\tfor (const pattern of channelB.patterns) {\n\t\t\t\t\tpattern.instruments[0] += channelAInstrumentCount;\n\t\t\t\t\tchannelA.patterns.push(pattern);\n\t\t\t\t}\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Remove channelB.\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\n\t\t\n\t\tclass ChangeImportMidi extends ChangeGroup {\n\t\t\tconstructor(doc: SongDocument) {\n\t\t\t\tsuper();\n\t\t\t\tconst song: Song = doc.song;\n\t\t\t\tsong.tempo = beatsPerMinute;\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\n\t\t\t\tsong.key = key;\n\t\t\t\tsong.scale = 11;\n\t\t\t\tsong.rhythm = 1;\n\t\t\t\tsong.layeredInstruments = false;\n\t\t\t\tsong.patternInstruments = pitchChannels.some(channel => channel.instruments.length > 1) || noiseChannels.some(channel => channel.instruments.length > 1);\n\t\t\t\t\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\n\t\t\t\t\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels));\n\t\t\t\tsong.loopStart = 0;\n\t\t\t\tsong.loopLength = song.barCount;\n\t\t\t\tthis._didSomething();\n\t\t\t\tdoc.notifier.changed();\n\t\t\t}\n\t\t}\n\t\tthis._doc.goBackToStart();\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Dictionary} from \"../synth/SynthConfig\";\nimport {Song} from \"../synth/synth\";\n\nexport interface RecoveredVersion {\n\tuid: string;\n\ttime: number;\n\twork: number;\n}\n\nexport interface RecoveredSong {\n\tversions: RecoveredVersion[];\n}\n\nconst versionPrefix = \"songVersion: \";\nconst maximumSongCount = 8;\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\n\nfunction keyIsVersion(key: string): boolean {\n\treturn key.indexOf(versionPrefix) == 0;\n}\n\nfunction keyToVersion(key: string): RecoveredVersion {\n\treturn JSON.parse(key.substring(versionPrefix.length));\n}\n\nexport function versionToKey(version: RecoveredVersion): string {\n\treturn versionPrefix + JSON.stringify(version);\n}\n\nexport function generateUid(): string {\n\t// Not especially robust, but simple and effective!\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\n}\n\nexport function errorAlert(error: any): void {\n\tconsole.warn(error);\n\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\n}\n\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\n\treturn b.versions[0].time - a.versions[0].time;\n}\n\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\n\treturn b.time - a.time;\n}\n\t\nexport class SongRecovery {\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\n\t\n\tprivate _song: Song = new Song();\n\t\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\n\t\tconst songs: RecoveredSong[] = [];\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\n\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\tconst itemKey: string = localStorage.key(i)!;\n\t\t\tif (keyIsVersion(itemKey)) {\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\n\t\t\t\tif (song == undefined) {\n\t\t\t\t\tsong = {versions: []};\n\t\t\t\t\tsongsByUid[version.uid] = song;\n\t\t\t\t\tsongs.push(song);\n\t\t\t\t}\n\t\t\t\tsong.versions.push(version);\n\t\t\t}\n\t\t}\n\t\tfor (const song of songs) {\n\t\t\tsong.versions.sort(compareVersions);\n\t\t}\n\t\tsongs.sort(compareSongs);\n\t\treturn songs;\n\t}\n\t\n\tpublic saveVersion(uid: string, songData: string): void {\n\t\tconst newTime: number = Math.round(Date.now());\n\t\t\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\n\t\t\ttry {\n\t\t\t\t// Ensure that the song is not corrupted.\n\t\t\t\tthis._song.fromBase64String(songData);\n\t\t\t} catch (error) {\n\t\t\t\terrorAlert(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\n\t\t\tlet currentSong: RecoveredSong | null = null;\n\t\t\tfor (const song of songs) {\n\t\t\t\tif (song.versions[0].uid == uid) {\n\t\t\t\t\tcurrentSong = song;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (currentSong == null) {\n\t\t\t\tcurrentSong = {versions: []};\n\t\t\t\tsongs.unshift(currentSong);\n\t\t\t}\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\n\t\t\t\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\n\t\t\tif (versions.length > 0) {\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\n\t\t\t}\n\t\t\t\n\t\t\tconst newVersion: RecoveredVersion = {uid: uid, time: newTime, work: newWork};\n\t\t\tconst newKey: string = versionToKey(newVersion);\n\t\t\tversions.unshift(newVersion);\n\t\t\tlocalStorage.setItem(newKey, songData);\n\t\t\t\n\t\t\t// Consider deleting an old version to free up space.\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\n\t\t\t\tconst currentWork: number = versions[i].work;\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\n\t\t\t\tif (currentWork - olderWork < minSpan) {\n\t\t\t\t\tlet indexToDiscard: number = i;\n\t\t\t\t\tif (i < versions.length - 1) {\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\n\t\t\t\t\t\t// thus more memorable.\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tminSpan *= spanMult;\n\t\t\t}\n\t\t\t\n\t\t\t// If there are too many songs, discard the least important ones.\n\t\t\t// Songs that are older, or have less work, are less important.\n\t\t\twhile (songs.length > maximumSongCount) {\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\n\t\t\t\t\tif (leastImportance > weight) {\n\t\t\t\t\t\tleastImportance = weight;\n\t\t\t\t\t\tleastImportantSong = song;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\n\t\t\t\t}\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\n\t\t\t}\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {SongDocument} from \"./SongDocument\";\nimport {RecoveredSong, RecoveredVersion, SongRecovery, versionToKey} from \"./SongRecovery\";\nimport {Prompt} from \"./Prompt\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\n\nconst {button, div, h2, p, select, option, iframe} = HTML;\n\nexport class SongRecoveryPrompt implements Prompt {\n\tprivate readonly _songContainer: HTMLDivElement = div();\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt\", style: \"width: 300px;\"},\n\t\th2(\"Song Recovery\"),\n\t\tdiv({style: \"max-height: 385px; overflow-y: auto;\"},\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about!\"),\n\t\t\tthis._songContainer,\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\t\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\n\t\t\n\t\tif (songs.length == 0) {\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\n\t\t}\n\t\t\n\t\tfor (const song of songs) {\n\t\t\tconst versionMenu: HTMLSelectElement = select({style: \"width: 100%;\"});\n\t\t\t\n\t\t\tfor (const version of song.versions) {\n\t\t\t\tversionMenu.appendChild(option({value: version.time}, new Date(version.time).toLocaleString()));\n\t\t\t}\n\t\t\t\n\t\t\tconst player: HTMLIFrameElement = iframe({style: \"width: 100%; height: 60px; border: none; display: block;\"});\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\n\t\t\tconst container: HTMLDivElement = div({style: \"margin: 4px 0;\"}, div({class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\"}, versionMenu), player);\n\t\t\tthis._songContainer.appendChild(container);\n\t\t\t\n\t\t\tversionMenu.addEventListener(\"change\", () => {\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\n\t\t\t});\n\t\t}\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {EditorConfig} from \"./EditorConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {KeyboardLayout} from \"./KeyboardLayout\";\nimport {Piano} from \"./Piano\";\n\nconst {button, label, div, p, a, h2, input, select, option} = HTML;\n\nexport class RecordingSetupPrompt implements Prompt {\n\tprivate readonly _keyboardMode: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"useCapsLockForNotes\"}, \"simple shortcuts, use caps lock to play notes\"),\n\t\toption({value: \"pressControlForShortcuts\"}, \"simple notes, press \" + EditorConfig.ctrlName + \" for shortcuts\"),\n\t);\n\tprivate readonly _keyboardLayout: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"wickiHayden\"}, \"Wicki-Hayden\"),\n\t\toption({value: \"songScale\"}, \"selected song scale\"),\n\t\toption({value: \"pianoAtC\"}, \"piano starting at C :)\"),\n\t\toption({value: \"pianoAtA\"}, \"piano starting at A :(\"),\n\t\toption({value: \"pianoTransposingC\"}, \"piano transposing C :) to song key\"),\n\t\toption({value: \"pianoTransposingA\"}, \"piano transposing A :( to song key\"),\n\t);\n\tprivate readonly _keyboardLayoutPreview: HTMLDivElement = div({style: \"display: grid; row-gap: 4px; margin: 4px auto; font-size: 10px;\"});\n\tprivate readonly _enableMidi: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _showRecordButton: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _snapRecordedNotesToRhythm: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _ignorePerformedNotesNotInScale: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _metronomeCountIn: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _metronomeWhileRecording: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\t\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection recordingSetupPrompt\", style: \"width: 333px; text-align: right; max-height: 90%;\"},\n\t\th2(\"Note Recording Setup\"),\n\t\tdiv({style: \"display: grid; overflow-y: auto; overflow-x: hidden; flex-shrink: 1;\"},\n\t\t\tp(\"BeepBox can record notes as you perform them. You can start recording by pressing Ctrl+Space (or \" + EditorConfig.ctrlSymbol + \"P).\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Add ● record button next to ▶ play button:\",\n\t\t\t\tthis._showRecordButton,\n\t\t\t),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Snap recorded notes to the song's rhythm:\",\n\t\t\t\tthis._snapRecordedNotesToRhythm,\n\t\t\t),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Ignore notes not in the song's scale:\",\n\t\t\t\tthis._ignorePerformedNotesNotInScale,\n\t\t\t),\n\t\t\tp(\"While recording, you can perform notes on your keyboard!\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Keyboard layout:\",\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 65%; margin-left: 1em;\"}, this._keyboardLayout),\n\t\t\t),\n\t\t\tthis._keyboardLayoutPreview,\n\t\t\tp(\"When not recording, you can use the computer keyboard either for shortcuts (like C and V for copy and paste) or for performing notes, depending on this mode:\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._keyboardMode),\n\t\t\t),\n\t\t\tp(\"Performing music takes practice! Try slowing the tempo and using this metronome to help you keep a rhythm.\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Hear metronome while recording:\",\n\t\t\t\tthis._metronomeWhileRecording,\n\t\t\t),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Count-in 1 bar of metronome before recording:\",\n\t\t\t\tthis._metronomeCountIn,\n\t\t\t),\n\t\t\tp(\"If you have a \", a({href: \"https://caniuse.com/midi\", target: \"_blank\"}, \"compatible browser\"), \" on a device connected to a MIDI keyboard, you can use it to perform notes in BeepBox! (Or you could buy \", a({href: \"https://imitone.com/\", target: \"_blank\"}, \"Imitone\"), \" or \", a({href: \"https://vochlea.com/\", target: \"_blank\"}, \"Dubler\"), \" to hum notes into a microphone while wearing headphones!)\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Enable MIDI performance:\",\n\t\t\t\tthis._enableMidi,\n\t\t\t),\n\t\t\tp(\"The range of pitches available to play via your computer keyboard is affected by the octave scrollbar of the currently selected channel.\"),\n\t\t\tp(\"Recorded notes often overlap such that one note ends after the next note already started. In BeepBox, these notes get split into multiple notes which may sound different when re-played than they did when you were recording. To fix the sound, you can either manually clean up the notes in the pattern editor, or you could try enabling the \\\"transition type\\\" effect on the instrument and setting it to \\\"continue\\\".\"),\n\t\t\tdiv({style: `width: 100%; height: 80px; background: linear-gradient(rgba(0,0,0,0), ${ColorConfig.editorBackground}); position: sticky; bottom: 0; pointer-events: none;`}),\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._keyboardMode.value = this._doc.prefs.pressControlForShortcuts ? \"pressControlForShortcuts\" : \"useCapsLockForNotes\";\n\t\tthis._keyboardLayout.value = this._doc.prefs.keyboardLayout;\n\t\tthis._enableMidi.checked = this._doc.prefs.enableMidi;\n\t\tthis._showRecordButton.checked = this._doc.prefs.showRecordButton;\n\t\tthis._snapRecordedNotesToRhythm.checked = this._doc.prefs.snapRecordedNotesToRhythm;\n\t\tthis._ignorePerformedNotesNotInScale.checked = this._doc.prefs.ignorePerformedNotesNotInScale;\n\t\tthis._metronomeCountIn.checked = this._doc.prefs.metronomeCountIn;\n\t\tthis._metronomeWhileRecording.checked = this._doc.prefs.metronomeWhileRecording;\n\t\t\n\t\tsetTimeout(()=>this._showRecordButton.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\t\n\t\tthis._renderKeyboardLayoutPreview();\n\t\tthis._keyboardLayout.addEventListener(\"change\", this._renderKeyboardLayoutPreview);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._confirm();\n\t\t}\n\t}\n\t\n\tprivate _confirm = (): void => { \n\t\tthis._doc.prefs.pressControlForShortcuts = (this._keyboardMode.value == \"pressControlForShortcuts\");\n\t\tthis._doc.prefs.keyboardLayout = this._keyboardLayout.value;\n\t\tthis._doc.prefs.enableMidi = this._enableMidi.checked;\n\t\tthis._doc.prefs.showRecordButton = this._showRecordButton.checked;\n\t\tthis._doc.prefs.snapRecordedNotesToRhythm = this._snapRecordedNotesToRhythm.checked;\n\t\tthis._doc.prefs.ignorePerformedNotesNotInScale = this._ignorePerformedNotesNotInScale.checked;\n\t\tthis._doc.prefs.metronomeCountIn = this._metronomeCountIn.checked;\n\t\tthis._doc.prefs.metronomeWhileRecording = this._metronomeWhileRecording.checked;\n\t\tthis._doc.prefs.save();\n\t\tthis._close();\n\t}\n\t\n\tprivate _renderKeyboardLayoutPreview = (): void => {\n\t\twhile (this._keyboardLayoutPreview.firstChild) {\n\t\t\tthis._keyboardLayoutPreview.removeChild(this._keyboardLayoutPreview.firstChild);\n\t\t}\n\t\tconst rowLengths: number[] = [12, 12, 11, 10];\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\n\t\tfor (let rowIndex: number = 0; rowIndex < 4; rowIndex++) {\n\t\t\tconst row: HTMLDivElement = div({style: \"display: flex;\"});\n\t\t\tthis._keyboardLayoutPreview.appendChild(row);\n\t\t\tconst spacer: HTMLDivElement = div({style: \"width: \" + (rowIndex * 12) + \"px; height: 20px; flex-shrink: 0;\"});\n\t\t\trow.appendChild(spacer);\n\t\t\tfor (let colIndex: number = 0; colIndex < rowLengths[rowIndex]; colIndex++) {\n\t\t\t\tconst key: HTMLDivElement = div({style: `width: 20px; height: 20px; margin: 0 2px; box-sizing: border-box; flex-shrink: 0; display: flex; justify-content: center; align-items: center;`});\n\t\t\t\trow.appendChild(key);\n\t\t\t\tconst pitch: number | null = KeyboardLayout.keyPosToPitch(this._doc, colIndex, 3 - rowIndex, this._keyboardLayout.value);\n\t\t\t\tif (pitch != null) {\n\t\t\t\t\tconst scalePitch: number = pitch % 12;\n\t\t\t\t\tif (scale[scalePitch]) {\n\t\t\t\t\t\tif (scalePitch == 0) {\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.tonic;\n\t\t\t\t\t\t} else if (scalePitch == 7 && this._doc.prefs.showFifth) {\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.fifthNote;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.pitchBackground;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkey.style.border = \"2px solid \" + ColorConfig.pitchBackground;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst pitchNameIndex: number = (scalePitch + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\n\t\t\t\t\tkey.textContent = Piano.getPitchName(pitchNameIndex, scalePitch);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {InstrumentType, EffectType, Config, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb} from \"../synth/SynthConfig\";\nimport {Preset, PresetCategory, EditorConfig, isMobile, prettyNumber} from \"./EditorConfig\";\nimport {ColorConfig, ChannelColors} from \"./ColorConfig\";\nimport \"./Layout\"; // Imported here for the sake of ensuring this code is transpiled early.\nimport {Instrument, Channel, Synth} from \"../synth/synth\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {Preferences} from \"./Preferences\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {TipPrompt} from \"./TipPrompt\";\nimport {PatternEditor} from \"./PatternEditor\";\nimport {EnvelopeEditor} from \"./EnvelopeEditor\";\nimport {FadeInOutEditor} from \"./FadeInOutEditor\";\nimport {FilterEditor} from \"./FilterEditor\";\nimport {MuteEditor} from \"./MuteEditor\";\nimport {TrackEditor} from \"./TrackEditor\";\nimport {ChannelRow} from \"./ChannelRow\";\nimport {LayoutPrompt} from \"./LayoutPrompt\";\nimport {LoopEditor} from \"./LoopEditor\";\nimport {SpectrumEditor} from \"./SpectrumEditor\";\nimport {HarmonicsEditor} from \"./HarmonicsEditor\";\nimport {BarScrollBar} from \"./BarScrollBar\";\nimport {OctaveScrollBar} from \"./OctaveScrollBar\";\nimport {MidiInputHandler} from \"./MidiInput\";\nimport {KeyboardLayout} from \"./KeyboardLayout\";\nimport {Piano} from \"./Piano\";\nimport {BeatsPerBarPrompt} from \"./BeatsPerBarPrompt\";\nimport {MoveNotesSidewaysPrompt} from \"./MoveNotesSidewaysPrompt\";\nimport {SongDurationPrompt} from \"./SongDurationPrompt\";\nimport {SustainPrompt} from \"./SustainPrompt\";\nimport {ChannelSettingsPrompt} from \"./ChannelSettingsPrompt\";\nimport {ExportPrompt} from \"./ExportPrompt\";\nimport {ImportPrompt} from \"./ImportPrompt\";\nimport {SongRecoveryPrompt} from \"./SongRecoveryPrompt\";\nimport {RecordingSetupPrompt} from \"./RecordingSetupPrompt\";\nimport {Change} from \"./Change\";\nimport {ChangeTempo, ChangeChorus, ChangeEchoDelay, ChangeEchoSustain, ChangeReverb, ChangeVolume, ChangePan, ChangePatternSelection, ChangeSupersawDynamism, ChangeSupersawSpread, ChangeSupersawShape, ChangePulseWidth, ChangeFeedbackAmplitude, ChangeOperatorAmplitude, ChangeOperatorFrequency, ChangeDrumsetEnvelope, ChangePasteInstrument, ChangePreset, pickRandomPresetValue, ChangeRandomGeneratedInstrument, ChangeScale, ChangeDetectKey, ChangeKey, ChangeRhythm, ChangeFeedbackType, ChangeAlgorithm, ChangeCustomizeInstrument, ChangeChipWave, ChangeNoiseWave, ChangeTransition, ChangeToggleEffects, ChangeVibrato, ChangeUnison, ChangeChord, ChangeSong, ChangePitchShift, ChangeDetune, ChangeDistortion, ChangeStringSustain, ChangeBitcrusherFreq, ChangeBitcrusherQuantization, ChangeAddEnvelope, ChangeAddChannelInstrument, ChangeRemoveChannelInstrument} from \"./changes\";\n\nconst {a, button, div, input, select, span, optgroup, option} = HTML;\n\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\n\tfor (let index: number = 0; index < items.length; index++) {\n\t\tmenu.appendChild(option({value: index}, items[index]));\n\t} \n\treturn menu;\n}\n\nfunction buildPresetOptions(isNoise: boolean): HTMLSelectElement {\n\tconst menu: HTMLSelectElement = select();\n\t\n\tmenu.appendChild(optgroup({label: \"Edit\"},\n\t\toption({value: \"copyInstrument\"}, \"Copy Instrument (⇧C)\"),\n\t\toption({value: \"pasteInstrument\"}, \"Paste Instrument (⇧V)\"),\n\t\toption({value: \"randomPreset\"}, \"Random Preset (R)\"),\n\t\toption({value: \"randomGenerated\"}, \"Random Generated (⇧R)\"),\n\t));\n\t\n\t// Show the \"spectrum\" custom type in both pitched and noise channels.\n\tconst customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\n\tif (isNoise) {\n\t\tcustomTypeGroup.appendChild(option({value: InstrumentType.noise}, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\n\t\tcustomTypeGroup.appendChild(option({value: InstrumentType.spectrum}, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\n\t\tcustomTypeGroup.appendChild(option({value: InstrumentType.drumset}, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\n\t} else {\n\t\tcustomTypeGroup.appendChild(option({value: InstrumentType.chip}, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\n\t\tcustomTypeGroup.appendChild(option({value: InstrumentType.pwm}, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\n\t\tcustomTypeGroup.appendChild(option({value: InstrumentType.supersaw}, EditorConfig.valueToPreset(InstrumentType.supersaw)!.name));\n\t\tcustomTypeGroup.appendChild(option({value: InstrumentType.harmonics}, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\n\t\tcustomTypeGroup.appendChild(option({value: InstrumentType.pickedString}, EditorConfig.valueToPreset(InstrumentType.pickedString)!.name));\n\t\tcustomTypeGroup.appendChild(option({value: InstrumentType.spectrum}, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\n\t\tcustomTypeGroup.appendChild(option({value: InstrumentType.fm}, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\n\t}\n\tmenu.appendChild(customTypeGroup);\n\t\n\tfor (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n\t\tconst group: HTMLElement = optgroup({label: category.name});\n\t\tlet foundAny: boolean = false;\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n\t\t\tconst preset: Preset = category.presets[presetIndex];\n\t\t\tif ((preset.isNoise == true) == isNoise) {\n\t\t\t\tgroup.appendChild(option({value: (categoryIndex << 6) + presetIndex}, preset.name));\n\t\t\t\tfoundAny = true;\n\t\t\t}\n\t\t}\n\t\tif (foundAny) menu.appendChild(group);\n\t}\n\treturn menu;\n}\n\nfunction setSelectedValue(menu: HTMLSelectElement, value: number): void {\n\tconst stringValue = value.toString();\n\tif (menu.value != stringValue) menu.value = stringValue;\n}\n\nclass Slider {\n\tprivate _change: Change | null = null;\n\tprivate _value: number = 0;\n\tprivate _oldValue: number = 0;\n\t\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: number, newValue: number)=>Change) {\n\t\tinput.addEventListener(\"input\", this._whenInput);\n\t\tinput.addEventListener(\"change\", this._whenChange);\n\t}\n\t\n\tpublic updateValue(value: number): void {\n\t\tthis._value = value;\n\t\tthis.input.value = String(value);\n\t}\n\t\n\tprivate _whenInput = (): void => {\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\n\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\n\t\tthis._doc.setProspectiveChange(this._change);\n\t};\n\t\n\tprivate _whenChange = (): void => {\n\t\tthis._doc.record(this._change!);\n\t\tthis._change = null;\n\t};\n}\n\nexport class SongEditor {\n\tpublic prompt: Prompt | null = null;\n\t\n\tprivate readonly _keyboardLayout: KeyboardLayout = new KeyboardLayout(this._doc);\n\tprivate readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\n\tprivate readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\n\tprivate readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\n\tprivate readonly _muteEditor: MuteEditor = new MuteEditor(this._doc);\n\tprivate readonly _trackEditor: TrackEditor = new TrackEditor(this._doc);\n\tprivate readonly _loopEditor: LoopEditor = new LoopEditor(this._doc);\n\tprivate readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc);\n\tprivate readonly _piano: Piano = new Piano(this._doc);\n\tprivate readonly _playButton: HTMLButtonElement = button({class: \"playButton\", type: \"button\", title: \"Play (Space)\"}, span(\"Play\"));\n\tprivate readonly _pauseButton: HTMLButtonElement = button({class: \"pauseButton\", style: \"display: none;\", type: \"button\", title: \"Pause (Space)\"}, \"Pause\");\n\tprivate readonly _recordButton: HTMLButtonElement = button({class: \"recordButton\", style: \"display: none;\", type: \"button\", title: \"Record (Ctrl+Space)\"}, span(\"Record\"));\n\tprivate readonly _stopButton: HTMLButtonElement = button({class: \"stopButton\", style: \"display: none;\", type: \"button\", title: \"Stop Recording (Space)\"}, \"Stop Recording\");\n\tprivate readonly _prevBarButton: HTMLButtonElement = button({class: \"prevBarButton\", type: \"button\", title: \"Previous Bar (left bracket)\"});\n\tprivate readonly _nextBarButton: HTMLButtonElement = button({class: \"nextBarButton\", type: \"button\", title: \"Next Bar (right bracket)\"});\n\tprivate readonly _volumeSlider: HTMLInputElement = input({title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\"});\n\tprivate readonly _fileMenu: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({selected: true, disabled: true, hidden: false}, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n\t\toption({value: \"new\"}, \"+ New Blank Song\"),\n\t\toption({value: \"import\"}, \"↑ Import Song... (\" + EditorConfig.ctrlSymbol + \"O)\"),\n\t\toption({value: \"export\"}, \"↓ Export Song... (\" + EditorConfig.ctrlSymbol + \"S)\"),\n\t\toption({value: \"copyUrl\"}, \"⎘ Copy Song URL\"),\n\t\toption({value: \"shareUrl\"}, \"⤳ Share Song URL\"),\n\t\toption({value: \"shortenUrl\"}, \"… Shorten Song URL\"),\n\t\toption({value: \"viewPlayer\"}, \"▶ View in Song Player\"),\n\t\toption({value: \"copyEmbed\"}, \"⎘ Copy HTML Embed Code\"),\n\t\toption({value: \"songRecovery\"}, \"⚠ Recover Recent Song...\"),\n\t);\n\tprivate readonly _editMenu: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({selected: true, disabled: true, hidden: false}, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n\t\toption({value: \"undo\"}, \"Undo (Z)\"),\n\t\toption({value: \"redo\"}, \"Redo (Y)\"),\n\t\toption({value: \"copy\"}, \"Copy Pattern (C)\"),\n\t\toption({value: \"pasteNotes\"}, \"Paste Pattern Notes (V)\"),\n\t\toption({value: \"pasteNumbers\"}, \"Paste Pattern Numbers (\" + EditorConfig.ctrlSymbol + \"⇧V)\"),\n\t\toption({value: \"insertBars\"}, \"Insert Bar (⏎)\"),\n\t\toption({value: \"deleteBars\"}, \"Delete Selected Bars (⌫)\"),\n\t\toption({value: \"insertChannel\"}, \"Insert Channel (\" + EditorConfig.ctrlSymbol + \"⏎)\"),\n\t\toption({value: \"deleteChannel\"}, \"Delete Selected Channels (\" + EditorConfig.ctrlSymbol + \"⌫)\"),\n\t\toption({value: \"selectAll\"}, \"Select All (A)\"),\n\t\toption({value: \"selectChannel\"}, \"Select Channel (⇧A)\"),\n\t\toption({value: \"duplicatePatterns\"}, \"Duplicate Reused Patterns (D)\"),\n\t\toption({value: \"transposeUp\"}, \"Move Notes Up (+ or ⇧+)\"),\n\t\toption({value: \"transposeDown\"}, \"Move Notes Down (- or ⇧-)\"),\n\t\toption({value: \"moveNotesSideways\"}, \"Move All Notes Sideways...\"),\n\t\toption({value: \"beatsPerBar\"}, \"Change Beats Per Bar...\"),\n\t\toption({value: \"barCount\"}, \"Change Song Length...\"),\n\t\toption({value: \"channelSettings\"}, \"Channel Settings... (Q)\"),\n\t);\n\tprivate readonly _optionsMenu: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({selected: true, disabled: true, hidden: false}, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n\t\toption({value: \"autoPlay\"}, \"Auto Play on Load\"),\n\t\toption({value: \"autoFollow\"}, \"Show And Play The Same Bar\"),\n\t\toption({value: \"enableNotePreview\"}, \"Hear Preview of Added Notes\"),\n\t\toption({value: \"showLetters\"}, \"Show Piano Keys\"),\n\t\toption({value: \"showFifth\"}, 'Highlight \"Fifth\" of Song Key'),\n\t\toption({value: \"notesOutsideScale\"}, \"Allow Adding Notes Not in Scale\"),\n\t\toption({value: \"setDefaultScale\"}, \"Use Current Scale as Default\"),\n\t\toption({value: \"showChannels\"}, \"Show Notes From All Channels\"),\n\t\toption({value: \"showScrollBar\"}, \"Show Octave Scroll Bar\"),\n\t\toption({value: \"alwaysShowSettings\"}, \"Customize All Instruments\"),\n\t\toption({value: \"instrumentCopyPaste\"}, \"Instrument Copy/Paste Buttons\"),\n\t\toption({value: \"enableChannelMuting\"}, \"Enable Channel Muting\"),\n\t\toption({value: \"displayBrowserUrl\"}, \"Display Song Data in URL\"),\n\t\toption({value: \"boxbeepLayout\"}, \"Choose Layout...\"),\n\t\toption({value: \"boxbeepColorTheme\"}, \"Light Theme\"),\n\t\toption({value: \"recordingSetup\"}, \"Set Up Note Recording...\"),\n\t);\n\tprivate readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale=>scale.name));\n\tprivate readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key=>key.name).reverse());\n\tprivate readonly _tempoSlider: Slider = new Slider(input({style: \"margin: 0; width: 4em; flex-grow: 1; vertical-align: middle;\", type: \"range\", min: \"0\", max: \"14\", value: \"7\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, Math.round(120.0 * Math.pow(2.0, (-4.0 + newValue) / 9.0))));\n\tprivate readonly _tempoStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\"});\n\tprivate readonly _chorusSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.chorusRange - 1, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeChorus(this._doc, oldValue, newValue));\n\tprivate readonly _chorusRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"chorus\")}, \"Chorus:\"), this._chorusSlider.input);\n\tprivate readonly _reverbSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue));\n\tprivate readonly _reverbRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"reverb\")}, \"Reverb:\"), this._reverbSlider.input);\n\tprivate readonly _echoSustainSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.echoSustainRange - 1, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeEchoSustain(this._doc, oldValue, newValue));\n\tprivate readonly _echoSustainRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"echoSustain\")}, \"Echo:\"), this._echoSustainSlider.input);\n\tprivate readonly _echoDelaySlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.echoDelayRange - 1, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeEchoDelay(this._doc, oldValue, newValue));\n\tprivate readonly _echoDelayRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"echoDelay\")}, \"Echo Delay:\"), this._echoDelaySlider.input);\n\tprivate readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm=>rhythm.name));\n\tprivate readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false);\n\tprivate readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true);\n\tprivate readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm=>algorithm.name));\n\tprivate readonly _algorithmSelectRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"algorithm\")}, \"Algorithm:\"), div({class: \"selectContainer\"}, this._algorithmSelect));\n\tprivate readonly _instrumentButtons: HTMLButtonElement[] = [];\n\tprivate readonly _instrumentAddButton: HTMLButtonElement = button({type: \"button\", class: \"add-instrument last-button\"});\n\tprivate readonly _instrumentRemoveButton: HTMLButtonElement = button({type: \"button\", class: \"remove-instrument\"});\n\tprivate readonly _instrumentsButtonBar: HTMLDivElement = div({class: \"instrument-bar\"}, this._instrumentRemoveButton, this._instrumentAddButton);\n\tprivate readonly _instrumentsButtonRow: HTMLDivElement = div({class: \"selectRow\", style: \"display: none;\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"instrumentIndex\")}, \"Instrument:\"), this._instrumentsButtonBar);\n\tprivate readonly _instrumentCopyButton: HTMLButtonElement = button({type: \"button\", class: \"copy-instrument\", title: \"Copy Instrument (⇧C)\"}, \"Copy\");\n\tprivate readonly _instrumentPasteButton: HTMLButtonElement = button({type: \"button\", class: \"paste-instrument\", title: \"Paste Instrument (⇧V)\"}, \"Paste\");\n\tprivate readonly _instrumentCopyPasteRow: HTMLDivElement = div({class: \"instrumentCopyPasteRow\", style: \"display: none;\"}, this._instrumentCopyButton, this._instrumentPasteButton);\n\tprivate readonly _instrumentVolumeSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: -(Config.volumeRange - 1), max: \"0\", value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, -newValue));\n\tprivate readonly _instrumentVolumeSliderRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"instrumentVolume\")}, \"Volume:\"), this._instrumentVolumeSlider.input);\n\tprivate readonly _panSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue));\n\tprivate readonly _panSliderRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"pan\")}, \"Panning:\"), this._panSlider.input);\n\tprivate readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave=>wave.name));\n\tprivate readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave=>wave.name));\n\tprivate readonly _chipWaveSelectRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"chipWave\")}, \"Wave:\"), div({class: \"selectContainer\"}, this._chipWaveSelect));\n\tprivate readonly _chipNoiseSelectRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"chipNoise\")}, \"Noise:\"), div({class: \"selectContainer\"}, this._chipNoiseSelect));\n\tprivate readonly _fadeInOutEditor: FadeInOutEditor = new FadeInOutEditor(this._doc);\n\tprivate readonly _fadeInOutRow: HTMLElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"fadeInOut\")}, \"Fade In/Out:\"), this._fadeInOutEditor.container);\n\tprivate readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition=>transition.name));\n\tprivate readonly _transitionRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"transition\")}, \"Transition:\"), div({class: \"selectContainer\"}, this._transitionSelect));\n\tprivate readonly _effectsSelect: HTMLSelectElement = select(option({selected: true, disabled: true, hidden: false})); // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n\tprivate readonly _eqFilterEditor: FilterEditor = new FilterEditor(this._doc);\n\tprivate readonly _eqFilterRow: HTMLElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"eqFilter\")}, \"EQ Filter:\"), this._eqFilterEditor.container);\n\tprivate readonly _noteFilterEditor: FilterEditor = new FilterEditor(this._doc, true);\n\tprivate readonly _noteFilterRow: HTMLElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"noteFilter\")}, \"Note Filter:\"), this._noteFilterEditor.container);\n\tprivate readonly _supersawDynamismSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.supersawDynamismMax, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeSupersawDynamism(this._doc, oldValue, newValue));\n\tprivate readonly _supersawDynamismRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"supersawDynamism\")}, \"Dynamism:\"), this._supersawDynamismSlider.input);\n\tprivate readonly _supersawSpreadSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.supersawSpreadMax, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeSupersawSpread(this._doc, oldValue, newValue));\n\tprivate readonly _supersawSpreadRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"supersawSpread\")}, \"Spread:\"), this._supersawSpreadSlider.input);\n\tprivate readonly _supersawShapeSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.supersawShapeMax, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeSupersawShape(this._doc, oldValue, newValue));\n\tprivate readonly _supersawShapeRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"supersawShape\")}, \"Saw↔Pulse:\"), this._supersawShapeSlider.input);\n\tprivate readonly _pulseWidthSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.pulseWidthRange - 1, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue));\n\tprivate readonly _pulseWidthRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"pulseWidth\")}, \"Pulse Width:\"), this._pulseWidthSlider.input);\n\tprivate readonly _pitchShiftSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.pitchShiftRange - 1, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangePitchShift(this._doc, oldValue, newValue));\n\tprivate readonly _pitchShiftTonicMarkers: HTMLDivElement[] = [div({class: \"pitchShiftMarker\", style: {color: ColorConfig.tonic}}), div({class: \"pitchShiftMarker\", style: {color: ColorConfig.tonic, left: \"50%\"}}), div({class: \"pitchShiftMarker\", style: {color: ColorConfig.tonic, left: \"100%\"}})];\n\tprivate readonly _pitchShiftFifthMarkers: HTMLDivElement[] = [div({class: \"pitchShiftMarker\", style: {color: ColorConfig.fifthNote, left: (100*7/24)+\"%\"}}), div({class: \"pitchShiftMarker\", style: {color: ColorConfig.fifthNote, left: (100*19/24)+\"%\"}})];\n\tprivate readonly _pitchShiftMarkerContainer: HTMLDivElement = div({style: \"display: flex; position: relative;\"}, this._pitchShiftSlider.input, div({class: \"pitchShiftMarkerContainer\"}, this._pitchShiftTonicMarkers, this._pitchShiftFifthMarkers));\n\tprivate readonly _pitchShiftRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"pitchShift\")}, \"Pitch Shift:\"), this._pitchShiftMarkerContainer);\n\tprivate readonly _detuneSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.detuneMax, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue));\n\tprivate readonly _detuneRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"detune\")}, \"Detune:\"), this._detuneSlider.input);\n\tprivate readonly _distortionSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.distortionRange - 1, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeDistortion(this._doc, oldValue, newValue));\n\tprivate readonly _distortionRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"distortion\")}, \"Distortion:\"), this._distortionSlider.input);\n\tprivate readonly _bitcrusherQuantizationSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.bitcrusherQuantizationRange - 1, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeBitcrusherQuantization(this._doc, oldValue, newValue));\n\tprivate readonly _bitcrusherQuantizationRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"bitcrusherQuantization\")}, \"Bit Crush:\"), this._bitcrusherQuantizationSlider.input);\n\tprivate readonly _bitcrusherFreqSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.bitcrusherFreqRange - 1, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeBitcrusherFreq(this._doc, oldValue, newValue));\n\tprivate readonly _bitcrusherFreqRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"bitcrusherFreq\")}, \"Freq Crush:\"), this._bitcrusherFreqSlider.input);\n\tprivate readonly _stringSustainSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.stringSustainRange - 1, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeStringSustain(this._doc, oldValue, newValue));\n\tprivate readonly _stringSustainLabel: HTMLSpanElement = span({class: \"tip\", onclick: ()=>this._openPrompt(\"stringSustain\")}, \"Sustain:\");\n\tprivate readonly _stringSustainRow: HTMLDivElement = div({class: \"selectRow\"}, this._stringSustainLabel, this._stringSustainSlider.input);\n\tprivate readonly _unisonSelect: HTMLSelectElement = buildOptions(select(), Config.unisons.map(unison=>unison.name));\n\tprivate readonly _unisonSelectRow: HTMLElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"unison\")}, \"Unison:\"), div({class: \"selectContainer\"}, this._unisonSelect));\n\tprivate readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord=>chord.name));\n\tprivate readonly _chordSelectRow: HTMLElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"chords\")}, \"Chords:\"), div({class: \"selectContainer\"}, this._chordSelect));\n\tprivate readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato=>vibrato.name));\n\tprivate readonly _vibratoSelectRow: HTMLElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"vibrato\")}, \"Vibrato:\"), div({class: \"selectContainer\"}, this._vibratoSelect));\n\tprivate readonly _phaseModGroup: HTMLElement = div({class: \"editor-controls\"});\n\tprivate readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback=>feedback.name));\n\tprivate readonly _feedbackRow1: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"feedbackType\")}, \"Feedback:\"), div({class: \"selectContainer\"}, this._feedbackTypeSelect));\n\tprivate readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\n\tprivate readonly _spectrumRow: HTMLElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"spectrum\")}, \"Spectrum:\"), this._spectrumEditor.container);\n\tprivate readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\n\tprivate readonly _harmonicsRow: HTMLElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"harmonics\")}, \"Harmonics:\"), this._harmonicsEditor.container);\n\tprivate readonly _envelopeEditor: EnvelopeEditor = new EnvelopeEditor(this._doc);\n\tprivate readonly _drumsetGroup: HTMLElement = div({class: \"editor-controls\"});\n\t\n\tprivate readonly _feedbackAmplitudeSlider: Slider = new Slider(input({type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\"}), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue));\n\tprivate readonly _feedbackRow2: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"feedbackVolume\")}, \"Fdback Vol:\"), this._feedbackAmplitudeSlider.input);\n\tprivate readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", class: \"customize-instrument\"},\n\t\t\"Customize Instrument\",\n\t);\n\tprivate readonly _addEnvelopeButton: HTMLButtonElement = button({type: \"button\", class: \"add-envelope\"});\n\tprivate readonly _customInstrumentSettingsGroup: HTMLDivElement = div({class: \"editor-controls\"},\n\t\tthis._eqFilterRow,\n\t\tthis._fadeInOutRow,\n\t\tthis._chipWaveSelectRow,\n\t\tthis._chipNoiseSelectRow,\n\t\tthis._algorithmSelectRow,\n\t\tthis._phaseModGroup,\n\t\tthis._feedbackRow1,\n\t\tthis._feedbackRow2,\n\t\tthis._spectrumRow,\n\t\tthis._harmonicsRow,\n\t\tthis._drumsetGroup,\n\t\tthis._supersawDynamismRow,\n\t\tthis._supersawSpreadRow,\n\t\tthis._supersawShapeRow,\n\t\tthis._pulseWidthRow,\n\t\tthis._stringSustainRow,\n\t\tthis._unisonSelectRow,\n\t\tdiv({style: `margin: 2px 0; margin-left: 2em; display: flex; align-items: center;`},\n\t\t\tspan({style: `flex-grow: 1; text-align: center;`}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"effects\")}, \"Effects\")),\n\t\t\tdiv({class: \"effects-menu\"}, this._effectsSelect),\n\t\t),\n\t\tthis._transitionRow,\n\t\tthis._chordSelectRow,\n\t\tthis._pitchShiftRow,\n\t\tthis._detuneRow,\n\t\tthis._vibratoSelectRow,\n\t\tthis._noteFilterRow,\n\t\tthis._distortionRow,\n\t\tthis._bitcrusherQuantizationRow,\n\t\tthis._bitcrusherFreqRow,\n\t\tthis._panSliderRow,\n\t\tthis._chorusRow,\n\t\tthis._echoSustainRow,\n\t\tthis._echoDelayRow,\n\t\tthis._reverbRow,\n\t\tdiv({style: `margin: 2px 0; margin-left: 2em; display: flex; align-items: center;`},\n\t\t\tspan({style: `flex-grow: 1; text-align: center;`}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"envelopes\")}, \"Envelopes\")),\n\t\t\tthis._addEnvelopeButton,\n\t\t),\n\t\tthis._envelopeEditor.container,\n\t);\n\tprivate readonly _instrumentSettingsGroup: HTMLDivElement = div({class: \"editor-controls\"},\n\t\tdiv({style: `margin: 3px 0; text-align: center; color: ${ColorConfig.secondaryText};`},\n\t\t\t\"Instrument Settings\"\n\t\t),\n\t\tthis._instrumentsButtonRow,\n\t\tthis._instrumentCopyPasteRow,\n\t\tthis._instrumentVolumeSliderRow,\n\t\tdiv({class: \"selectRow\"},\n\t\t\tspan({class: \"tip\", onclick: ()=>this._openPrompt(\"instrumentType\")}, \"Type:\"),\n\t\t\tdiv({class: \"selectContainer\"}, this._pitchedPresetSelect, this._drumPresetSelect),\n\t\t),\n\t\tthis._customizeInstrumentButton,\n\t\tthis._customInstrumentSettingsGroup,\n\t);\n\tprivate readonly _promptContainer: HTMLDivElement = div({class: \"promptContainer\", style: \"display: none;\"});\n\tprivate readonly _zoomInButton: HTMLButtonElement = button({class: \"zoomInButton\", type: \"button\", title: \"Zoom In\"});\n\tprivate readonly _zoomOutButton: HTMLButtonElement = button({class: \"zoomOutButton\", type: \"button\", title: \"Zoom Out\"});\n\tprivate readonly _patternEditorRow: HTMLDivElement = div({style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\"},\n\t\tthis._patternEditorPrev.container,\n\t\tthis._patternEditor.container,\n\t\tthis._patternEditorNext.container,\n\t);\n\tprivate readonly _patternArea: HTMLDivElement = div({class: \"pattern-area\"},\n\t\tthis._piano.container,\n\t\tthis._patternEditorRow,\n\t\tthis._octaveScrollBar.container,\n\t\tthis._zoomInButton,\n\t\tthis._zoomOutButton,\n\t);\n\tprivate readonly _trackContainer: HTMLDivElement = div({class: \"trackContainer\"},\n\t\tthis._trackEditor.container,\n\t\tthis._loopEditor.container,\n\t);\n\tprivate readonly _trackVisibleArea: HTMLDivElement = div({style: \"position: absolute; width: 100%; height: 100%; pointer-events: none;\"});\n\tprivate readonly _trackAndMuteContainer: HTMLDivElement = div({class: \"trackAndMuteContainer\"},\n\t\tthis._muteEditor.container,\n\t\tthis._trackContainer,\n\t\tthis._trackVisibleArea,\n\t);\n\tprivate readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc);\n\tprivate readonly _trackArea: HTMLDivElement = div({class: \"track-area\"},\n\t\tthis._trackAndMuteContainer,\n\t\tthis._barScrollBar.container,\n\t);\n\t\n\tprivate readonly _menuArea: HTMLDivElement = div({class: \"menu-area\"},\n\t\tdiv({class: \"selectContainer menu file\"},\n\t\t\tthis._fileMenu,\n\t\t),\n\t\tdiv({class: \"selectContainer menu edit\"},\n\t\t\tthis._editMenu,\n\t\t),\n\t\tdiv({class: \"selectContainer menu preferences\"},\n\t\t\tthis._optionsMenu,\n\t\t),\n\t);\n\tprivate readonly _songSettingsArea: HTMLDivElement = div({class: \"song-settings-area\"},\n\t\tdiv({class: \"editor-controls\"},\n\t\t\tdiv({style: `margin: 3px 0; text-align: center; color: ${ColorConfig.secondaryText};`},\n\t\t\t\t\"Song Settings\",\n\t\t\t),\n\t\t\tdiv({class: \"selectRow\"},\n\t\t\t\tspan({class: \"tip\", onclick: ()=>this._openPrompt(\"scale\")}, \"Scale:\"),\n\t\t\t\tdiv({class: \"selectContainer\"}, this._scaleSelect),\n\t\t\t),\n\t\t\tdiv({class: \"selectRow\"},\n\t\t\t\tspan({class: \"tip\", onclick: ()=>this._openPrompt(\"key\")}, \"Key:\"),\n\t\t\t\tdiv({class: \"selectContainer\"}, this._keySelect),\n\t\t\t),\n\t\t\tdiv({class: \"selectRow\"},\n\t\t\t\tspan({class: \"tip\", onclick: ()=>this._openPrompt(\"tempo\")}, \"Tempo:\"),\n\t\t\t\tspan({style: \"display: flex;\"},\n\t\t\t\t\tthis._tempoSlider.input,\n\t\t\t\t\tthis._tempoStepper,\n\t\t\t\t),\n\t\t\t),\n\t\t\tdiv({class: \"selectRow\"},\n\t\t\t\tspan({class: \"tip\", onclick: ()=>this._openPrompt(\"rhythm\")}, \"Rhythm:\"),\n\t\t\t\tdiv({class: \"selectContainer\"}, this._rhythmSelect),\n\t\t\t),\n\t\t),\n\t);\n\tprivate readonly _instrumentSettingsArea: HTMLDivElement = div({class: \"instrument-settings-area\"}, this._instrumentSettingsGroup);\n\tprivate readonly _settingsArea: HTMLDivElement = div({class: \"settings-area noSelection\"},\n\t\tdiv({class: \"version-area\"},\n\t\t\tdiv({style: `text-align: center; margin: 3px 0; color: ${ColorConfig.secondaryText};`},\n\t\t\t\tEditorConfig.versionDisplayName,\n\t\t\t\t\" \",\n\t\t\t\ta({class: \"tip\", target: \"_blank\", href: EditorConfig.releaseNotesURL},\n\t\t\t\t\tEditorConfig.version,\n\t\t\t\t),\n\t\t\t),\n\t\t),\n\t\tdiv({class: \"play-pause-area\"},\n\t\t\tdiv({class: \"playback-bar-controls\"},\n\t\t\t\tthis._playButton,\n\t\t\t\tthis._pauseButton,\n\t\t\t\tthis._recordButton,\n\t\t\t\tthis._stopButton,\n\t\t\t\tthis._prevBarButton,\n\t\t\t\tthis._nextBarButton,\n\t\t\t),\n\t\t\tdiv({class: \"playback-volume-controls\"},\n\t\t\t\tspan({class: \"volume-speaker\"}),\n\t\t\t\tthis._volumeSlider,\n\t\t\t),\n\t\t),\n\t\tthis._menuArea,\n\t\tthis._songSettingsArea,\n\t\tthis._instrumentSettingsArea,\n\t);\n\t\n\tpublic readonly mainLayer: HTMLDivElement = div({class: \"beepboxEditor\", tabIndex: \"0\"},\n\t\tthis._patternArea,\n\t\tthis._trackArea,\n\t\tthis._settingsArea,\n\t\tthis._promptContainer,\n\t);\n\t\n\tprivate _wasPlaying: boolean = false;\n\tprivate _currentPromptName: string | null = null;\n\tprivate _highlightedInstrumentIndex: number = -1;\n\tprivate _renderedInstrumentCount: number = 0;\n\tprivate _renderedIsPlaying: boolean = false;\n\tprivate _renderedIsRecording: boolean = false;\n\tprivate _renderedShowRecordButton: boolean = false;\n\tprivate _renderedCtrlHeld: boolean = false;\n\tprivate _ctrlHeld: boolean = false;\n\tprivate _deactivatedInstruments: boolean = false;\n\tprivate readonly _operatorRows: HTMLDivElement[] = []\n\tprivate readonly _operatorAmplitudeSliders: Slider[] = []\n\tprivate readonly _operatorFrequencySelects: HTMLSelectElement[] = []\n\tprivate readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\n\tprivate readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._doc.notifier.watch(this.whenUpdated);\n\t\tnew MidiInputHandler(this._doc);\n\t\twindow.addEventListener(\"resize\", this.whenUpdated);\n\t\twindow.requestAnimationFrame(this.updatePlayButton);\n\t\t\n\t\tif (!(\"share\" in navigator)) {\n\t\t\tthis._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\n\t\t}\n\t\t\n\t\tthis._scaleSelect.appendChild(optgroup({label: \"Edit\"},\n\t\t\toption({value: \"forceScale\"}, \"Snap Notes To Scale\"),\n\t\t));\n\t\tthis._keySelect.appendChild(optgroup({label: \"Edit\"},\n\t\t\toption({value: \"detectKey\"}, \"Detect Key\"),\n\t\t));\n\t\tthis._rhythmSelect.appendChild(optgroup({label: \"Edit\"},\n\t\t\toption({value: \"forceRhythm\"}, \"Snap Notes To Rhythm\"),\n\t\t));\n\t\t\n\t\tthis._phaseModGroup.appendChild(div({class: \"selectRow\", style: `color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;`},\n\t\t\tdiv({style: \"margin-right: .1em; visibility: hidden;\"}, 1 + \".\"),\n\t\t\tdiv({style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: ()=>this._openPrompt(\"operatorFrequency\")}, \"Freq:\"),\n\t\t\tdiv({class: \"tip\", onclick: ()=>this._openPrompt(\"operatorVolume\")}, \"Volume:\"),\n\t\t));\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\n\t\t\tconst operatorIndex: number = i;\n\t\t\tconst operatorNumber: HTMLDivElement = div({style: `margin-right: .1em; color: ${ColorConfig.secondaryText};`}, i + 1 + \".\");\n\t\t\tconst frequencySelect: HTMLSelectElement = buildOptions(select({style: \"width: 100%;\", title: \"Frequency\"}), Config.operatorFrequencies.map(freq=>freq.name));\n\t\t\tconst amplitudeSlider: Slider = new Slider(input({type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\"}), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue));\n\t\t\tconst row: HTMLDivElement = div({class: \"selectRow\"},\n\t\t\t\toperatorNumber,\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\"}, frequencySelect),\n\t\t\t\tamplitudeSlider.input,\n\t\t\t);\n\t\t\tthis._phaseModGroup.appendChild(row);\n\t\t\tthis._operatorRows[i] = row;\n\t\t\tthis._operatorAmplitudeSliders[i] = amplitudeSlider;\n\t\t\tthis._operatorFrequencySelects[i] = frequencySelect;\n\t\t\t\n\t\t\tfrequencySelect.addEventListener(\"change\", () => {\n\t\t\t\tthis._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, frequencySelect.selectedIndex));\n\t\t\t});\n\t\t}\n\t\t\n\t\tthis._drumsetGroup.appendChild(\n\t\t\tdiv({class: \"selectRow\"},\n\t\t\t\tspan({class: \"tip\", onclick: ()=>this._openPrompt(\"drumsetEnvelope\")}, \"Envelope:\"),\n\t\t\t\tspan({class: \"tip\", onclick: ()=>this._openPrompt(\"drumsetSpectrum\")}, \"Spectrum:\"),\n\t\t\t),\n\t\t);\n\t\tfor (let i: number = Config.drumCount - 1; i >= 0; i--) {\n\t\t\tconst drumIndex: number = i;\n\t\t\tconst spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\n\t\t\tspectrumEditor.container.addEventListener(\"mousedown\", this._refocusStage);\n\t\t\tthis._drumsetSpectrumEditors[i] = spectrumEditor;\n\t\t\t\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({style: \"width: 100%;\", title: \"Filter Envelope\"}), Config.envelopes.map(envelope=>envelope.name));\n\t\t\tthis._drumsetEnvelopeSelects[i] = envelopeSelect;\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\n\t\t\t\tthis._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\n\t\t\t});\n\t\t\t\n\t\t\tconst row: HTMLDivElement = div({class: \"selectRow\"},\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\"}, envelopeSelect),\n\t\t\t\tthis._drumsetSpectrumEditors[i].container,\n\t\t\t);\n\t\t\tthis._drumsetGroup.appendChild(row);\n\t\t}\n\t\t\n\t\tthis._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\n\t\tthis._editMenu.addEventListener(\"change\", this._editMenuHandler);\n\t\tthis._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\n\t\tthis._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\n\t\tthis._scaleSelect.addEventListener(\"change\", this._whenSetScale);\n\t\tthis._keySelect.addEventListener(\"change\", this._whenSetKey);\n\t\tthis._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\n\t\tthis._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\n\t\tthis._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\n\t\tthis._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\n\t\tthis._instrumentsButtonBar.addEventListener(\"click\", this._whenSelectInstrument);\n\t\tthis._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument);\n\t\tthis._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument);\n\t\tthis._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\n\t\tthis._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\n\t\tthis._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\n\t\tthis._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\n\t\tthis._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\n\t\tthis._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\n\t\tthis._unisonSelect.addEventListener(\"change\", this._whenSetUnison);\n\t\tthis._chordSelect.addEventListener(\"change\", this._whenSetChord);\n\t\tthis._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\n\t\tthis._pauseButton.addEventListener(\"click\", this._togglePlay);\n\t\tthis._recordButton.addEventListener(\"click\", this._toggleRecord);\n\t\tthis._stopButton.addEventListener(\"click\", this._toggleRecord);\n\t\t// Start recording instead of opening context menu when control-clicking the record button on a Mac.\n\t\tthis._recordButton.addEventListener(\"contextmenu\", (event: MouseEvent) => {\n\t\t\tif (event.ctrlKey) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis._toggleRecord();\n\t\t\t}\n\t\t});\n\t\tthis._stopButton.addEventListener(\"contextmenu\", (event: MouseEvent) => {\n\t\t\tif (event.ctrlKey) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis._toggleRecord();\n\t\t\t}\n\t\t});\n\t\tthis._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\n\t\tthis._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\n\t\tthis._volumeSlider.addEventListener(\"input\", this._setVolumeSlider);\n\t\tthis._zoomInButton.addEventListener(\"click\", this._zoomIn);\n\t\tthis._zoomOutButton.addEventListener(\"click\", this._zoomOut);\n\t\t\n\t\tthis._patternArea.addEventListener(\"mousedown\", this._refocusStage);\n\t\tthis._trackArea.addEventListener(\"mousedown\", this._refocusStage);\n\t\tthis._fadeInOutEditor.container.addEventListener(\"mousedown\", this._refocusStage);\n\t\tthis._spectrumEditor.container.addEventListener(\"mousedown\", this._refocusStage);\n\t\tthis._eqFilterEditor.container.addEventListener(\"mousedown\", this._refocusStage);\n\t\tthis._noteFilterEditor.container.addEventListener(\"mousedown\", this._refocusStage);\n\t\tthis._harmonicsEditor.container.addEventListener(\"mousedown\", this._refocusStage);\n\t\tthis._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\n\t\tthis._addEnvelopeButton.addEventListener(\"click\", this._addNewEnvelope);\n\t\tthis._patternArea.addEventListener(\"contextmenu\", this._disableCtrlContextMenu);\n\t\tthis._trackArea.addEventListener(\"contextmenu\", this._disableCtrlContextMenu);\n\t\tthis.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis.mainLayer.addEventListener(\"keyup\", this._whenKeyReleased);\n\t\tthis.mainLayer.addEventListener(\"focusin\", this._onFocusIn);\n\t\t\n\t\tthis._promptContainer.addEventListener(\"click\", (event) => {\n\t\t\tif (event.target == this._promptContainer) {\n\t\t\t\tthis._doc.undo();\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\n\t\t//this._trackAndMuteContainer.addEventListener(\"scroll\", this._onTrackAreaScroll, {capture: false, passive: true});\n\t\t(<Function>this._trackAndMuteContainer.addEventListener)(\"scroll\", this._onTrackAreaScroll, {capture: false, passive: true});\n\t\t\n\t\tif (isMobile) {\n\t\t\tconst autoPlayOption: HTMLOptionElement = <HTMLOptionElement> this._optionsMenu.querySelector(\"[value=autoPlay]\");\n\t\t\tautoPlayOption.disabled = true;\n\t\t\tautoPlayOption.setAttribute(\"hidden\", \"\");\n\t\t}\n\t\t\n\t\tif (window.screen.availWidth < 710 || window.screen.availHeight < 710) {\n\t\t\tconst layoutOption: HTMLOptionElement = <HTMLOptionElement> this._optionsMenu.querySelector(\"[value=boxbeepLayout]\");\n\t\t\tlayoutOption.disabled = true;\n\t\t\tlayoutOption.setAttribute(\"hidden\", \"\");\n\t\t}\n\t}\n\t\n\tprivate _openPrompt(promptName: string): void {\n\t\tthis._doc.openPrompt(promptName);\n\t\tthis._setPrompt(promptName);\n\t}\n\t\n\tprivate _setPrompt(promptName: string | null): void {\n\t\tif (this._currentPromptName == promptName) return;\n\t\tthis._currentPromptName = promptName;\n\t\t\n\t\tif (this.prompt) {\n\t\t\tif (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof SustainPrompt)) {\n\t\t\t\tthis._doc.performance.play();\n\t\t\t}\n\t\t\tthis._wasPlaying = false;\n\t\t\tthis._promptContainer.style.display = \"none\";\n\t\t\tthis._promptContainer.removeChild(this.prompt.container);\n\t\t\tthis.prompt.cleanUp();\n\t\t\tthis.prompt = null;\n\t\t\tthis._refocusStage();\n\t\t}\n\t\t\n\t\tif (promptName) {\n\t\t\tswitch (promptName) {\n\t\t\t\tcase \"export\":\n\t\t\t\t\tthis.prompt = new ExportPrompt(this._doc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"import\":\n\t\t\t\t\tthis.prompt = new ImportPrompt(this._doc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"songRecovery\":\n\t\t\t\t\tthis.prompt = new SongRecoveryPrompt(this._doc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"barCount\":\n\t\t\t\t\tthis.prompt = new SongDurationPrompt(this._doc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"beatsPerBar\":\n\t\t\t\t\tthis.prompt = new BeatsPerBarPrompt(this._doc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"moveNotesSideways\":\n\t\t\t\t\tthis.prompt = new MoveNotesSidewaysPrompt(this._doc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"channelSettings\":\n\t\t\t\t\tthis.prompt = new ChannelSettingsPrompt(this._doc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"boxbeepLayout\":\n\t\t\t\t\tthis.prompt = new LayoutPrompt(this._doc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"recordingSetup\":\n\t\t\t\t\tthis.prompt = new RecordingSetupPrompt(this._doc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"stringSustain\":\n\t\t\t\t\tthis.prompt = new SustainPrompt(this._doc);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.prompt = new TipPrompt(this._doc, promptName);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.prompt) {\n\t\t\t\tif (!(this.prompt instanceof TipPrompt || this.prompt instanceof SustainPrompt)) {\n\t\t\t\t\tthis._wasPlaying = this._doc.synth.playing;\n\t\t\t\t\tthis._doc.performance.pause();\n\t\t\t\t}\n\t\t\t\tthis._promptContainer.style.display = \"\";\n\t\t\t\tthis._promptContainer.appendChild(this.prompt.container);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _refocusStage = (): void => {\n\t\tthis.mainLayer.focus({preventScroll: true});\n\t}\n\t\n\tprivate _onFocusIn = (event: Event): void => {\n\t\tif (this._doc.synth.recording && event.target != this.mainLayer && event.target != this._stopButton && event.target != this._volumeSlider) {\n\t\t\t// Don't allow using tab to focus on the song settings while recording,\n\t\t\t// since interacting with them while recording would mess up the recording.\n\t\t\tthis._refocusStage();\n\t\t}\n\t}\n\t\n\tpublic whenUpdated = (): void => {\n\t\tconst prefs: Preferences = this._doc.prefs;\n\t\tthis._muteEditor.container.style.display = prefs.enableChannelMuting ? \"\" : \"none\";\n\t\tconst trackBounds: DOMRect = this._trackVisibleArea.getBoundingClientRect();\n\t\tthis._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left - (prefs.enableChannelMuting ? 32 : 0)) / this._doc.getBarWidth());\n\t\tthis._doc.trackVisibleChannels = Math.floor((trackBounds.bottom - trackBounds.top - 30) / ChannelRow.patternHeight);\n\t\tthis._barScrollBar.render();\n\t\tthis._muteEditor.render();\n\t\tthis._trackEditor.render();\n\t\t\n\t\tthis._trackAndMuteContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\n\t\tthis._trackAndMuteContainer.scrollTop = this._doc.channelScrollPos * ChannelRow.patternHeight;\n\t\t\n\t\tthis._piano.container.style.display = prefs.showLetters ? \"\" : \"none\";\n\t\tthis._octaveScrollBar.container.style.display = prefs.showScrollBar ? \"\" : \"none\";\n\t\tthis._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\n\t\t\n\t\tif (this._doc.getFullScreen()) {\n\t\t\tconst semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.getVisiblePitchCount();\n\t\t\tconst targetBeatWidth: number = semitoneHeight * 5;\n\t\t\tconst minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\n\t\t\tconst maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\n\t\t\tconst beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\n\t\t\tconst patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\n\t\t\t\n\t\t\tthis._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\n\t\t\tthis._patternEditor.container.style.width = patternEditorWidth + \"px\";\n\t\t\tthis._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\n\t\t\tthis._patternEditorPrev.container.style.flexShrink = \"0\";\n\t\t\tthis._patternEditor.container.style.flexShrink = \"0\";\n\t\t\tthis._patternEditorNext.container.style.flexShrink = \"0\";\n\t\t\tthis._patternEditorPrev.container.style.display = \"\";\n\t\t\tthis._patternEditorNext.container.style.display = \"\";\n\t\t\tthis._patternEditorPrev.render();\n\t\t\tthis._patternEditorNext.render();\n\t\t\tthis._zoomInButton.style.display = \"\";\n\t\t\tthis._zoomOutButton.style.display = \"\";\n\t\t\tthis._zoomInButton.style.right = prefs.showScrollBar ? \"24px\" : \"4px\";\n\t\t\tthis._zoomOutButton.style.right = prefs.showScrollBar ? \"24px\" : \"4px\";\n\t\t} else {\n\t\t\tthis._patternEditor.container.style.width = \"\";\n\t\t\tthis._patternEditor.container.style.flexShrink = \"\";\n\t\t\tthis._patternEditorPrev.container.style.display = \"none\";\n\t\t\tthis._patternEditorNext.container.style.display = \"none\";\n\t\t\tthis._zoomInButton.style.display = \"none\";\n\t\t\tthis._zoomOutButton.style.display = \"none\";\n\t\t}\n\t\tthis._patternEditor.render();\n\t\t\n\t\tconst optionCommands: ReadonlyArray<string> = [\n\t\t\t(prefs.autoPlay ? \"✓ \" : \"　\") + \"Auto Play on Load\",\n\t\t\t(prefs.autoFollow ? \"✓ \" : \"　\") + \"Show And Play The Same Bar\",\n\t\t\t(prefs.enableNotePreview ? \"✓ \" : \"　\") + \"Hear Preview of Added Notes\",\n\t\t\t(prefs.showLetters ? \"✓ \" : \"　\") + \"Show Piano Keys\",\n\t\t\t(prefs.showFifth ? \"✓ \" : \"　\") + 'Highlight \"Fifth\" of Song Key',\n\t\t\t(prefs.notesOutsideScale ? \"✓ \" : \"　\") + \"Allow Adding Notes Not in Scale\",\n\t\t\t(prefs.defaultScale == this._doc.song.scale ? \"✓ \" : \"　\") + \"Use Current Scale as Default\",\n\t\t\t(prefs.showChannels ? \"✓ \" : \"　\") + \"Show Notes From All Channels\",\n\t\t\t(prefs.showScrollBar ? \"✓ \" : \"　\") + \"Show Octave Scroll Bar\",\n\t\t\t(prefs.alwaysShowSettings ? \"✓ \" : \"　\") + \"Customize All Instruments\",\n\t\t\t(prefs.instrumentCopyPaste ? \"✓ \" : \"　\") + \"Instrument Copy/Paste Buttons\",\n\t\t\t(prefs.enableChannelMuting ? \"✓ \" : \"　\") + \"Enable Channel Muting\",\n\t\t\t(prefs.displayBrowserUrl ? \"✓ \" : \"　\") + \"Display Song Data in URL\",\n\t\t\t\"　Choose Layout...\",\n\t\t\t(prefs.boxbeepColorTheme == \"light classic\" ? \"✓ \" : \"　\") + \"Light Theme\",\n\t\t\t\"　Set Up Note Recording...\",\n\t\t];\n\t\tfor (let i: number = 0; i < optionCommands.length; i++) {\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement> this._optionsMenu.children[i + 1];\n\t\t\tif (option.textContent != optionCommands[i]) option.textContent = optionCommands[i];\n\t\t}\n\t\t\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\n\t\tconst instrumentIndex: number = this._doc.getCurrentInstrument();\n\t\tconst instrument: Instrument = channel.instruments[instrumentIndex];\n\t\tconst wasActive: boolean = this.mainLayer.contains(document.activeElement);\n\t\tconst activeElement: Element | null = document.activeElement;\n\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, this._doc.channel);\n\t\t\n\t\tfor (let i: number = this._effectsSelect.childElementCount - 1; i < Config.effectOrder.length; i++) {\n\t\t\tthis._effectsSelect.appendChild(option({value: i}));\n\t\t}\n\t\tthis._effectsSelect.selectedIndex = 0;\n\t\tfor (let i: number = 0; i < Config.effectOrder.length; i++) {\n\t\t\tlet effectFlag: number = Config.effectOrder[i];\n\t\t\tconst selected: boolean = ((instrument.effects & (1 << effectFlag)) != 0);\n\t\t\tconst label: string = (selected ? \"✓ \" : \"　\") + Config.effectNames[effectFlag];\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement> this._effectsSelect.children[i + 1];\n\t\t\tif (option.textContent != label) option.textContent = label;\n\t\t}\n\t\t\n\t\tsetSelectedValue(this._scaleSelect, this._doc.song.scale);\n\t\tthis._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\n\t\tsetSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\n\t\tthis._tempoSlider.updateValue(Math.max(0, Math.min(28, Math.round(4.0 + 9.0 * Math.log2(this._doc.song.tempo / 120.0)))));\n\t\tthis._tempoStepper.value = this._doc.song.tempo.toString();\n\t\tsetSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\n\t\t\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\n\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\n\t\t\tthis._drumPresetSelect.style.display = \"\";\n\t\t\tsetSelectedValue(this._drumPresetSelect, instrument.preset);\n\t\t} else {\n\t\t\tthis._pitchedPresetSelect.style.display = \"\";\n\t\t\tthis._drumPresetSelect.style.display = \"none\";\n\t\t\tsetSelectedValue(this._pitchedPresetSelect, instrument.preset);\n\t\t}\n\t\t\n\t\tif (prefs.instrumentCopyPaste) {\n\t\t\tthis._instrumentCopyPasteRow.style.display = \"\";\n\t\t} else {\n\t\t\tthis._instrumentCopyPasteRow.style.display = \"none\";\n\t\t}\n\t\t\n\t\tif (!prefs.alwaysShowSettings && instrument.preset != instrument.type) {\n\t\t\tthis._customizeInstrumentButton.style.display = \"\";\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"none\";\n\t\t} else {\n\t\t\tthis._customizeInstrumentButton.style.display = \"none\";\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"\";\n\t\t\t\n\t\t\tif (instrument.type == InstrumentType.noise) {\n\t\t\t\tthis._chipNoiseSelectRow.style.display = \"\";\n\t\t\t\tsetSelectedValue(this._chipNoiseSelect, instrument.chipNoise);\n\t\t\t} else {\n\t\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\n\t\t\t}\n\t\t\tif (instrument.type == InstrumentType.spectrum) {\n\t\t\t\tthis._spectrumRow.style.display = \"\";\n\t\t\t\tthis._spectrumEditor.render();\n\t\t\t} else {\n\t\t\t\tthis._spectrumRow.style.display = \"none\";\n\t\t\t}\n\t\t\tif (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n\t\t\t\tthis._harmonicsRow.style.display = \"\";\n\t\t\t\tthis._harmonicsEditor.render();\n\t\t\t} else {\n\t\t\t\tthis._harmonicsRow.style.display = \"none\";\n\t\t\t}\n\t\t\tif (instrument.type == InstrumentType.pickedString) {\n\t\t\t\tthis._stringSustainRow.style.display = \"\";\n\t\t\t\tthis._stringSustainSlider.updateValue(instrument.stringSustain);\n\t\t\t\tthis._stringSustainLabel.textContent = Config.enableAcousticSustain ? \"Sustain (\" + Config.sustainTypeNames[instrument.stringSustainType].substring(0,1).toUpperCase() + \"):\" : \"Sustain:\";\n\t\t\t} else {\n\t\t\t\tthis._stringSustainRow.style.display = \"none\";\n\t\t\t}\n\t\t\tif (instrument.type == InstrumentType.drumset) {\n\t\t\t\tthis._drumsetGroup.style.display = \"\";\n\t\t\t\tthis._fadeInOutRow.style.display = \"none\";\n\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\n\t\t\t\t\tsetSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\n\t\t\t\t\tthis._drumsetSpectrumEditors[i].render();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._drumsetGroup.style.display = \"none\";\n\t\t\t\tthis._fadeInOutRow.style.display = \"\";\n\t\t\t\tthis._fadeInOutEditor.render();\n\t\t\t}\n\t\t\t\n\t\t\tif (instrument.type == InstrumentType.chip) {\n\t\t\t\tthis._chipWaveSelectRow.style.display = \"\";\n\t\t\t\tsetSelectedValue(this._chipWaveSelect, instrument.chipWave);\n\t\t\t} else {\n\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\n\t\t\t}\n\t\t\tif (instrument.type == InstrumentType.fm) {\n\t\t\t\tthis._algorithmSelectRow.style.display = \"\";\n\t\t\t\tthis._phaseModGroup.style.display = \"\";\n\t\t\t\tthis._feedbackRow1.style.display = \"\";\n\t\t\t\tthis._feedbackRow2.style.display = \"\";\n\t\t\t\tsetSelectedValue(this._algorithmSelect, instrument.algorithm);\n\t\t\t\tsetSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\n\t\t\t\tthis._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\n\t\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\n\t\t\t\t\tconst isCarrier: boolean = (i < Config.algorithms[instrument.algorithm].carrierCount);\n\t\t\t\t\tthis._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\n\t\t\t\t\tsetSelectedValue(this._operatorFrequencySelects[i], instrument.operators[i].frequency);\n\t\t\t\t\tthis._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\n\t\t\t\t\tconst operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\n\t\t\t\t\tthis._operatorFrequencySelects[i].title = operatorName + \" Frequency\";\n\t\t\t\t\tthis._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._algorithmSelectRow.style.display = \"none\";\n\t\t\t\tthis._phaseModGroup.style.display = \"none\";\n\t\t\t\tthis._feedbackRow1.style.display = \"none\";\n\t\t\t\tthis._feedbackRow2.style.display = \"none\";\n\t\t\t}\n\t\t\tif (instrument.type == InstrumentType.supersaw) {\n\t\t\t\tthis._supersawDynamismRow.style.display = \"\";\n\t\t\t\tthis._supersawSpreadRow.style.display = \"\";\n\t\t\t\tthis._supersawShapeRow.style.display = \"\";\n\t\t\t\tthis._supersawDynamismSlider.updateValue(instrument.supersawDynamism);\n\t\t\t\tthis._supersawSpreadSlider.updateValue(instrument.supersawSpread);\n\t\t\t\tthis._supersawShapeSlider.updateValue(instrument.supersawShape);\n\t\t\t} else {\n\t\t\t\tthis._supersawDynamismRow.style.display = \"none\";\n\t\t\t\tthis._supersawSpreadRow.style.display = \"none\";\n\t\t\t\tthis._supersawShapeRow.style.display = \"none\";\n\t\t\t}\n\t\t\tif (instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.supersaw) {\n\t\t\t\tthis._pulseWidthRow.style.display = \"\";\n\t\t\t\tthis._pulseWidthSlider.input.title = prettyNumber(getPulseWidthRatio(instrument.pulseWidth) * 100) + \"%\";\n\t\t\t\tthis._pulseWidthSlider.updateValue(instrument.pulseWidth);\n\t\t\t} else {\n\t\t\t\tthis._pulseWidthRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludeTransition(instrument.effects)) {\n\t\t\t\tthis._transitionRow.style.display = \"\";\n\t\t\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\n\t\t\t} else {\n\t\t\t\tthis._transitionRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludeChord(instrument.effects)) {\n\t\t\t\tthis._chordSelectRow.style.display = \"\";\n\t\t\t\tsetSelectedValue(this._chordSelect, instrument.chord);\n\t\t\t} else {\n\t\t\t\tthis._chordSelectRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludePitchShift(instrument.effects)) {\n\t\t\t\tthis._pitchShiftRow.style.display = \"\";\n\t\t\t\tthis._pitchShiftSlider.updateValue(instrument.pitchShift);\n\t\t\t\tthis._pitchShiftSlider.input.title = (instrument.pitchShift - Config.pitchShiftCenter) + \" semitone(s)\";\n\t\t\t\tfor (const marker of this._pitchShiftFifthMarkers) {\n\t\t\t\t\tmarker.style.display = prefs.showFifth ? \"\" : \"none\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._pitchShiftRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludeDetune(instrument.effects)) {\n\t\t\t\tthis._detuneRow.style.display = \"\";\n\t\t\t\tthis._detuneSlider.updateValue(instrument.detune);\n\t\t\t\tthis._detuneSlider.input.title = (Synth.detuneToCents(instrument.detune - Config.detuneCenter)) + \" cent(s)\";\n\t\t\t} else {\n\t\t\t\tthis._detuneRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludeVibrato(instrument.effects)) {\n\t\t\t\tthis._vibratoSelectRow.style.display = \"\";\n\t\t\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\n\t\t\t} else {\n\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludeNoteFilter(instrument.effects)) {\n\t\t\t\tthis._noteFilterRow.style.display = \"\";\n\t\t\t\tthis._noteFilterEditor.render();\n\t\t\t} else {\n\t\t\t\tthis._noteFilterRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludeDistortion(instrument.effects)) {\n\t\t\t\tthis._distortionRow.style.display = \"\";\n\t\t\t\tthis._distortionSlider.updateValue(instrument.distortion);\n\t\t\t} else {\n\t\t\t\tthis._distortionRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludeBitcrusher(instrument.effects)) {\n\t\t\t\tthis._bitcrusherQuantizationRow.style.display = \"\";\n\t\t\t\tthis._bitcrusherFreqRow.style.display = \"\";\n\t\t\t\tthis._bitcrusherQuantizationSlider.updateValue(instrument.bitcrusherQuantization);\n\t\t\t\tthis._bitcrusherFreqSlider.updateValue(instrument.bitcrusherFreq);\n\t\t\t} else {\n\t\t\t\tthis._bitcrusherQuantizationRow.style.display = \"none\";\n\t\t\t\tthis._bitcrusherFreqRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludePanning(instrument.effects)) {\n\t\t\t\tthis._panSliderRow.style.display = \"\";\n\t\t\t\tthis._panSlider.updateValue(instrument.pan);\n\t\t\t} else {\n\t\t\t\tthis._panSliderRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludeChorus(instrument.effects)) {\n\t\t\t\tthis._chorusRow.style.display = \"\";\n\t\t\t\tthis._chorusSlider.updateValue(instrument.chorus);\n\t\t\t} else {\n\t\t\t\tthis._chorusRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludeEcho(instrument.effects)) {\n\t\t\t\tthis._echoSustainRow.style.display = \"\";\n\t\t\t\tthis._echoSustainSlider.updateValue(instrument.echoSustain);\n\t\t\t\tthis._echoDelayRow.style.display = \"\";\n\t\t\t\tthis._echoDelaySlider.updateValue(instrument.echoDelay);\n\t\t\t\tthis._echoDelaySlider.input.title = (Math.round((instrument.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat) * 1000) / 1000) + \" beat(s)\";\n\t\t\t} else {\n\t\t\t\tthis._echoSustainRow.style.display = \"none\";\n\t\t\t\tthis._echoDelayRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (effectsIncludeReverb(instrument.effects)) {\n\t\t\t\tthis._reverbRow.style.display = \"\";\n\t\t\t\tthis._reverbSlider.updateValue(instrument.reverb);\n\t\t\t} else {\n\t\t\t\tthis._reverbRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n\t\t\t\tthis._unisonSelectRow.style.display = \"\";\n\t\t\t\tsetSelectedValue(this._unisonSelect, instrument.unison);\n\t\t\t} else {\n\t\t\t\tthis._unisonSelectRow.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tthis._envelopeEditor.render();\n\t\t}\n\t\t\n\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\n\t\t\tlet hidden: boolean = (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[chordIndex].customInterval);\n\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\n\t\t\tif (hidden) {\n\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\n\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toption.removeAttribute(\"hidden\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this._doc.song.layeredInstruments || this._doc.song.patternInstruments) {\n\t\t\tthis._instrumentsButtonRow.style.display = \"\";\n\t\t\t\n\t\t\tthis._instrumentsButtonBar.style.setProperty(\"--text-color-lit\", colors.primaryNote);\n\t\t\tthis._instrumentsButtonBar.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\n\t\t\tthis._instrumentsButtonBar.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\n\t\t\tthis._instrumentsButtonBar.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\n\t\t\t\n\t\t\tconst maxInstrumentsPerChannel = this._doc.song.getMaxInstrumentsPerChannel();\n\t\t\twhile (this._instrumentButtons.length < channel.instruments.length) {\n\t\t\t\tconst instrumentButton: HTMLButtonElement = button(String(this._instrumentButtons.length + 1));\n\t\t\t\tthis._instrumentButtons.push(instrumentButton);\n\t\t\t\tthis._instrumentsButtonBar.insertBefore(instrumentButton, this._instrumentRemoveButton);\n\t\t\t}\n\t\t\tfor (let i: number = this._renderedInstrumentCount; i < channel.instruments.length; i++) {\n\t\t\t\tthis._instrumentButtons[i].style.display = \"\";\n\t\t\t}\n\t\t\tfor (let i: number = channel.instruments.length; i < this._renderedInstrumentCount; i++) {\n\t\t\t\tthis._instrumentButtons[i].style.display = \"none\";\n\t\t\t}\n\t\t\tthis._renderedInstrumentCount = channel.instruments.length;\n\t\t\twhile (this._instrumentButtons.length > maxInstrumentsPerChannel) {\n\t\t\t\tthis._instrumentsButtonBar.removeChild(this._instrumentButtons.pop()!);\n\t\t\t}\n\t\t\t\n\t\t\tthis._instrumentRemoveButton.style.display = (channel.instruments.length > Config.instrumentCountMin) ? \"\" : \"none\";\n\t\t\tthis._instrumentAddButton.style.display = (channel.instruments.length < maxInstrumentsPerChannel) ? \"\" : \"none\";\n\t\t\tif (channel.instruments.length < maxInstrumentsPerChannel) {\n\t\t\t\tthis._instrumentRemoveButton.classList.remove(\"last-button\");\n\t\t\t} else {\n\t\t\t\tthis._instrumentRemoveButton.classList.add(\"last-button\");\n\t\t\t}\n\t\t\tif (channel.instruments.length > 1) {\n\t\t\t\tif (this._highlightedInstrumentIndex != instrumentIndex) {\n\t\t\t\t\tconst oldButton: HTMLButtonElement = this._instrumentButtons[this._highlightedInstrumentIndex];\n\t\t\t\t\tif (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\n\t\t\t\t\tconst newButton: HTMLButtonElement = this._instrumentButtons[instrumentIndex];\n\t\t\t\t\tnewButton.classList.add(\"selected-instrument\");\n\t\t\t\t\tthis._highlightedInstrumentIndex = instrumentIndex;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst oldButton: HTMLButtonElement = this._instrumentButtons[this._highlightedInstrumentIndex];\n\t\t\t\tif (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\n\t\t\t\tthis._highlightedInstrumentIndex = -1;\n\t\t\t}\n\t\t\t\n\t\t\tif (this._doc.song.layeredInstruments && this._doc.song.patternInstruments) {\n\t\t\t\t//const pattern: Pattern | null = this._doc.getCurrentPattern();\n\t\t\t\tfor (let i: number = 0; i < channel.instruments.length; i++) {\n\t\t\t\t\tif (this._doc.recentPatternInstruments[this._doc.channel].indexOf(i) != -1) {\n\t\t\t\t\t\tthis._instrumentButtons[i].classList.remove(\"deactivated\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._instrumentButtons[i].classList.add(\"deactivated\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._deactivatedInstruments = true;\n\t\t\t} else if (this._deactivatedInstruments) {\n\t\t\t\tfor (let i: number = 0; i < channel.instruments.length; i++) {\n\t\t\t\t\tthis._instrumentButtons[i].classList.remove(\"deactivated\");\n\t\t\t\t}\n\t\t\t\tthis._deactivatedInstruments = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._instrumentsButtonRow.style.display = \"none\";\n\t\t}\n\t\t\n\t\tthis._instrumentSettingsGroup.style.color = colors.primaryNote;\n\t\t\n\t\tthis._eqFilterEditor.render();\n\t\tthis._instrumentVolumeSlider.updateValue(-instrument.volume);\n\t\tthis._addEnvelopeButton.disabled = (instrument.envelopeCount >= Config.maxEnvelopeCount);\n\t\t\n\t\tthis._volumeSlider.value = String(prefs.volume);\n\t\t\n\t\t// If an interface element was selected, but becomes invisible (e.g. an instrument\n\t\t// select menu) just select the editor container so keyboard commands still work.\n\t\tif (wasActive && activeElement != null && activeElement.clientWidth == 0) {\n\t\t\tthis._refocusStage();\n\t\t}\n\t\t\n\t\tthis._setPrompt(this._doc.prompt);\n\t\t\n\t\tif (prefs.autoFollow && !this._doc.synth.playing) {\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\n\t\t}\n\t\t\n\t\t// When adding effects or envelopes to an instrument in fullscreen modes,\n\t\t// auto-scroll the settings areas to ensure the new settings are visible.\n\t\tif (this._doc.addedEffect) {\n\t\t\tconst envButtonRect: DOMRect = this._addEnvelopeButton.getBoundingClientRect();\n\t\t\tconst instSettingsRect: DOMRect = this._instrumentSettingsArea.getBoundingClientRect();\n\t\t\tconst settingsRect: DOMRect = this._settingsArea.getBoundingClientRect();\n\t\t\tthis._instrumentSettingsArea.scrollTop += Math.max(0, envButtonRect.top - (instSettingsRect.top + instSettingsRect.height));\n\t\t\tthis._settingsArea.scrollTop += Math.max(0, envButtonRect.top - (settingsRect.top + settingsRect.height));\n\t\t\tthis._doc.addedEffect = false;\n\t\t}\n\t\tif (this._doc.addedEnvelope) {\n\t\t\tthis._instrumentSettingsArea.scrollTop = this._instrumentSettingsArea.scrollHeight;\n\t\t\tthis._settingsArea.scrollTop = this._settingsArea.scrollHeight;\n\t\t\tthis._doc.addedEnvelope = false;\n\t\t}\n\t}\n\t\n\tpublic updatePlayButton = (): void => {\n\t\tif (this._renderedIsPlaying != this._doc.synth.playing || this._renderedIsRecording != this._doc.synth.recording || this._renderedShowRecordButton != this._doc.prefs.showRecordButton || this._renderedCtrlHeld != this._ctrlHeld) {\n\t\t\tthis._renderedIsPlaying = this._doc.synth.playing;\n\t\t\tthis._renderedIsRecording = this._doc.synth.recording;\n\t\t\tthis._renderedShowRecordButton = this._doc.prefs.showRecordButton;\n\t\t\tthis._renderedCtrlHeld = this._ctrlHeld;\n\t\t\t\n\t\t\tif (document.activeElement == this._playButton || document.activeElement == this._pauseButton || document.activeElement == this._recordButton || document.activeElement == this._stopButton) {\n\t\t\t\t// When a focused element is hidden, focus is transferred to the document, so let's refocus the editor instead to make sure we can still capture keyboard input.\n\t\t\t\tthis._refocusStage();\n\t\t\t}\n\t\t\t\n\t\t\tthis._playButton.style.display = \"none\";\n\t\t\tthis._pauseButton.style.display = \"none\";\n\t\t\tthis._recordButton.style.display = \"none\";\n\t\t\tthis._stopButton.style.display = \"none\";\n\t\t\tthis._prevBarButton.style.display = \"\";\n\t\t\tthis._nextBarButton.style.display = \"\";\n\t\t\tthis._playButton.classList.remove(\"shrunk\");\n\t\t\tthis._recordButton.classList.remove(\"shrunk\");\n\t\t\tthis._patternEditorRow.style.pointerEvents = \"\";\n\t\t\tthis._octaveScrollBar.container.style.pointerEvents = \"\";\n\t\t\tthis._octaveScrollBar.container.style.opacity = \"\";\n\t\t\tthis._trackContainer.style.pointerEvents = \"\";\n\t\t\tthis._loopEditor.container.style.opacity = \"\";\n\t\t\tthis._instrumentSettingsArea.style.pointerEvents = \"\";\n\t\t\tthis._instrumentSettingsArea.style.opacity = \"\";\n\t\t\tthis._menuArea.style.pointerEvents = \"\";\n\t\t\tthis._menuArea.style.opacity = \"\";\n\t\t\tthis._songSettingsArea.style.pointerEvents = \"\";\n\t\t\tthis._songSettingsArea.style.opacity = \"\";\n\t\t\t\n\t\t\tif (this._doc.synth.recording) {\n\t\t\t\tthis._stopButton.style.display = \"\";\n\t\t\t\tthis._prevBarButton.style.display = \"none\";\n\t\t\t\tthis._nextBarButton.style.display = \"none\";\n\t\t\t\tthis._patternEditorRow.style.pointerEvents = \"none\";\n\t\t\t\tthis._octaveScrollBar.container.style.pointerEvents = \"none\";\n\t\t\t\tthis._octaveScrollBar.container.style.opacity = \"0.5\";\n\t\t\t\tthis._trackContainer.style.pointerEvents = \"none\";\n\t\t\t\tthis._loopEditor.container.style.opacity = \"0.5\";\n\t\t\t\tthis._instrumentSettingsArea.style.pointerEvents = \"none\";\n\t\t\t\tthis._instrumentSettingsArea.style.opacity = \"0.5\";\n\t\t\t\tthis._menuArea.style.pointerEvents = \"none\";\n\t\t\t\tthis._menuArea.style.opacity = \"0.5\";\n\t\t\t\tthis._songSettingsArea.style.pointerEvents = \"none\";\n\t\t\t\tthis._songSettingsArea.style.opacity = \"0.5\";\n\t\t\t} else if (this._doc.synth.playing) {\n\t\t\t\tthis._pauseButton.style.display = \"\";\n\t\t\t} else if (this._doc.prefs.showRecordButton) {\n\t\t\t\tthis._playButton.style.display = \"\";\n\t\t\t\tthis._recordButton.style.display = \"\";\n\t\t\t\tthis._playButton.classList.add(\"shrunk\");\n\t\t\t\tthis._recordButton.classList.add(\"shrunk\");\n\t\t\t} else if (this._ctrlHeld) {\n\t\t\t\tthis._recordButton.style.display = \"\";\n\t\t\t} else {\n\t\t\t\tthis._playButton.style.display = \"\";\n\t\t\t}\n\t\t}\n\t\twindow.requestAnimationFrame(this.updatePlayButton);\n\t}\n\t\n\tprivate _onTrackAreaScroll = (event: Event): void => {\n\t\tthis._doc.barScrollPos = (this._trackAndMuteContainer.scrollLeft / this._doc.getBarWidth());\n\t\t//this._doc.notifier.changed();\n\t}\n\t\n\tprivate _disableCtrlContextMenu = (event: MouseEvent): boolean => {\n\t\t// On a Mac, clicking while holding control opens the right-click context menu.\n\t\t// But in the pattern and track editors I'd rather prevent that and instead allow\n\t\t// custom behaviors such as setting the volume of a note.\n\t\tif (event.ctrlKey) {\n\t\t\tevent.preventDefault();\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tprivate _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\n\t\t// When the number input is in focus, allow some keyboard events to\n\t\t// edit the input without accidentally editing the song otherwise.\n\t\tswitch (event.keyCode) {\n\t\t\tcase 8: // backspace/delete\n\t\t\tcase 13: // enter/return\n\t\t\tcase 38: // up\n\t\t\tcase 40: // down\n\t\t\tcase 37: // left\n\t\t\tcase 39: // right\n\t\t\tcase 48: // 0\n\t\t\tcase 49: // 1\n\t\t\tcase 50: // 2\n\t\t\tcase 51: // 3\n\t\t\tcase 52: // 4\n\t\t\tcase 53: // 5\n\t\t\tcase 54: // 6\n\t\t\tcase 55: // 7\n\t\t\tcase 56: // 8\n\t\t\tcase 57: // 9\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tthis._ctrlHeld = event.ctrlKey;\n\t\t\n\t\tif (this.prompt) {\n\t\t\tif (event.keyCode == 27) { // ESC key\n\t\t\t\t// close prompt.\n\t\t\t\tthis._doc.undo();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (this._doc.synth.recording) {\n\t\t\t// The only valid keyboard interactions when recording are playing notes or pressing space OR P to stop.\n\t\t\tif (!event.ctrlKey && !event.metaKey) {\n\t\t\t\tthis._keyboardLayout.handleKeyEvent(event, true);\n\t\t\t}\n\t\t\tif (event.keyCode == 32) { // space\n\t\t\t\tthis._toggleRecord();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis._refocusStage();\n\t\t\t} else if (event.keyCode == 80 && (event.ctrlKey || event.metaKey)) { // p\n\t\t\t\tthis._toggleRecord();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis._refocusStage();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst needControlForShortcuts: boolean = (this._doc.prefs.pressControlForShortcuts != event.getModifierState(\"CapsLock\"));\n\t\tconst canPlayNotes: boolean = (!event.ctrlKey && !event.metaKey && needControlForShortcuts);\n\t\tif (canPlayNotes) this._keyboardLayout.handleKeyEvent(event, true);\n\t\t\n\t\tswitch (event.keyCode) {\n\t\t\tcase 27: // ESC key\n\t\t\t\tif (!event.ctrlKey && !event.metaKey) {\n\t\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 32: // space\n\t\t\t\tif (event.ctrlKey) {\n\t\t\t\t\tthis._toggleRecord();\n\t\t\t\t} else if (event.shiftKey) {\n\t\t\t\t\t// Jump to mouse\n\t\t\t\t\tif (this._trackEditor.movePlayheadToMouse() || this._patternEditor.movePlayheadToMouse()) {\n\t\t\t\t\t\tif (!this._doc.synth.playing) this._doc.performance.play();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._togglePlay();\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis._refocusStage();\n\t\t\t\tbreak;\n\t\t\tcase 80: // p\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (event.ctrlKey || event.metaKey) {\n\t\t\t\t\tthis._toggleRecord();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis._refocusStage();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 90: // z\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tthis._doc.redo();\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.undo();\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 89: // y\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tthis._doc.redo();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 67: // c\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tthis._copyInstrument();\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.selection.copy();\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 13: // enter/return\n\t\t\t\tif (event.ctrlKey || event.metaKey) {\n\t\t\t\t\tthis._doc.selection.insertChannel();\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.selection.insertBars();\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 8: // backspace/delete\n\t\t\t\tif (event.ctrlKey || event.metaKey) {\n\t\t\t\t\tthis._doc.selection.deleteChannel();\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.selection.deleteBars();\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 65: // a\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tthis._doc.selection.selectChannel();\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.selection.selectAll();\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 68: // d\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.duplicatePatterns();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 70: // f\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.synth.snapToStart();\n\t\t\t\t\tif (this._doc.prefs.autoFollow) {\n\t\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n\t\t\t\t\t}\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 72: // h\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.synth.goToBar(this._doc.bar);\n\t\t\t\t\tthis._doc.synth.snapToBar();\n\t\t\t\t\tif (this._doc.prefs.autoFollow) {\n\t\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n\t\t\t\t\t}\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 77: // m\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tif (this._doc.prefs.enableChannelMuting) {\n\t\t\t\t\t\tthis._doc.selection.muteChannels(event.shiftKey);\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 81: // q\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._openPrompt(\"channelSettings\");\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 83: // s\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (event.ctrlKey || event.metaKey) {\n\t\t\t\t\tthis._openPrompt(\"export\");\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\tif (this._doc.prefs.enableChannelMuting) {\n\t\t\t\t\t\tthis._doc.selection.soloChannels(event.shiftKey);\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 79: // o\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (event.ctrlKey || event.metaKey) {\n\t\t\t\t\tthis._openPrompt(\"import\");\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 86: // v\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif ((event.ctrlKey || event.metaKey) && event.shiftKey && !needControlForShortcuts) {\n\t\t\t\t\tthis._doc.selection.pasteNumbers();\n\t\t\t\t} else if (event.shiftKey) {\n\t\t\t\t\tthis._pasteInstrument();\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.selection.pasteNotes();\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 73: // i\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey) && event.shiftKey) {\n\t\t\t\t\t// Copy the current instrument as a preset to the clipboard.\n\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\t\t\tconst instrumentObject: any = instrument.toJsonObject();\n\t\t\t\t\tdelete instrumentObject[\"preset\"];\n\t\t\t\t\t// Volume and the panning effect are not included in presets.\n\t\t\t\t\tdelete instrumentObject[\"volume\"];\n\t\t\t\t\tdelete instrumentObject[\"pan\"];\n\t\t\t\t\tconst panningEffectIndex: number = instrumentObject[\"effects\"].indexOf(Config.effectNames[EffectType.panning]);\n\t\t\t\t\tif (panningEffectIndex != -1) instrumentObject[\"effects\"].splice(panningEffectIndex, 1);\n\t\t\t\t\tfor (let i: number = 0; i < instrumentObject[\"envelopes\"].length; i++) {\n\t\t\t\t\t\tconst envelope: any = instrumentObject[\"envelopes\"][i];\n\t\t\t\t\t\t// If there are any envelopes targeting panning or none, remove those too.\n\t\t\t\t\t\tif (envelope[\"target\"] == \"panning\" || envelope[\"target\"] == \"none\" || envelope[\"envelope\"] == \"none\") {\n\t\t\t\t\t\t\tinstrumentObject[\"envelopes\"].splice(i, 1);\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._copyTextToClipboard(JSON.stringify(instrumentObject));\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 82: // r\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\t\tthis._randomGenerated();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._randomPreset();\n\t\t\t\t\t}\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 219: // left brace\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.synth.goToPrevBar();\n\t\t\t\t\tif (this._doc.prefs.autoFollow) {\n\t\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n\t\t\t\t\t}\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 221: // right brace\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.synth.goToNextBar();\n\t\t\t\t\tif (this._doc.prefs.autoFollow) {\n\t\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n\t\t\t\t\t}\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 189: // -\n\t\t\tcase 173: // Firefox -\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.transpose(false, event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 187: // +\n\t\t\tcase 61: // Firefox +\n\t\t\tcase 171: // Some users have this as +? Hmm.\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.transpose(true, event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 38: // up\n\t\t\t\tif (event.ctrlKey || event.metaKey) {\n\t\t\t\t\tthis._doc.selection.swapChannels(-1);\n\t\t\t\t} else if (event.shiftKey) {\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\n\t\t\t\t\tthis._doc.selection.scrollToEndOfSelection();\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 40: // down\n\t\t\t\tif (event.ctrlKey || event.metaKey) {\n\t\t\t\t\tthis._doc.selection.swapChannels(1);\n\t\t\t\t} else if (event.shiftKey) {\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\n\t\t\t\t\tthis._doc.selection.scrollToEndOfSelection();\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 37: // left\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\n\t\t\t\t\tthis._doc.selection.scrollToEndOfSelection();\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 39: // right\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\n\t\t\t\t\tthis._doc.selection.scrollToEndOfSelection();\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 48: // 0\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.nextDigit(\"0\", event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 49: // 1\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.nextDigit(\"1\", event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 50: // 2\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.nextDigit(\"2\", event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 51: // 3\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.nextDigit(\"3\", event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 52: // 4\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.nextDigit(\"4\", event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 53: // 5\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.nextDigit(\"5\", event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 54: // 6\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.nextDigit(\"6\", event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 55: // 7\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.nextDigit(\"7\", event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 56: // 8\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.nextDigit(\"8\", event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 57: // 9\n\t\t\t\tif (canPlayNotes) break;\n\t\t\t\tif (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\tthis._doc.selection.nextDigit(\"9\", event.shiftKey);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._doc.selection.digits = \"\";\n\t\t\t\tthis._doc.selection.instrumentDigits = \"\";\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif (canPlayNotes) {\n\t\t\tthis._doc.selection.digits = \"\";\n\t\t\tthis._doc.selection.instrumentDigits = \"\";\n\t\t}\n\t}\n\t\n\tprivate _whenKeyReleased = (event: KeyboardEvent): void => {\n\t\tthis._ctrlHeld = event.ctrlKey;\n\t\t// Release live pitches regardless of control or caps lock so that any pitches played before will get released even if the modifier keys changed.\n\t\tthis._keyboardLayout.handleKeyEvent(event, false);\n\t}\n\t\n\tprivate _copyTextToClipboard(text: string): void {\n\t\tif (navigator.clipboard && navigator.clipboard.writeText) {\n\t\t\tnavigator.clipboard.writeText(text).catch(()=>{\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", text);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\n\t\ttextField.textContent = text;\n\t\tdocument.body.appendChild(textField);\n\t\ttextField.select();\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\n\t\ttextField.remove();\n\t\tthis._refocusStage();\n\t\tif (!succeeded) window.prompt(\"Copy this:\", text);\n\t}\n\t\n\tprivate _whenPrevBarPressed = (): void => {\n\t\tthis._doc.synth.goToPrevBar();\n\t}\n\t\n\tprivate _whenNextBarPressed = (): void => {\n\t\tthis._doc.synth.goToNextBar();\n\t}\n\t\n\tprivate _togglePlay = (): void => {\n\t\tif (this._doc.synth.playing) {\n\t\t\tthis._doc.performance.pause();\n\t\t} else {\n\t\t\tthis._doc.synth.snapToBar();\n\t\t\tthis._doc.performance.play();\n\t\t}\n\t}\n\t\n\tprivate _toggleRecord = (): void => {\n\t\tif (this._doc.synth.playing) {\n\t\t\tthis._doc.performance.pause();\n\t\t} else {\n\t\t\tthis._doc.performance.record();\n\t\t}\n\t}\n\t\n\tprivate _setVolumeSlider = (): void => {\n\t\tthis._doc.setVolume(Number(this._volumeSlider.value));\n\t}\n\t\n\tprivate _copyInstrument = (): void => {\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\n\t\tconst instrumentCopy: any = instrument.toJsonObject();\n\t\tinstrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\twindow.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\n\t\tthis._refocusStage();\n\t}\n\t\n\tprivate _pasteInstrument = (): void => {\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\n\t\tconst instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\n\t\tif (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel)) {\n\t\t\tthis._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\n\t\t}\n\t\tthis._refocusStage();\n\t}\n\t\n\tprivate _randomPreset(): void {\n\t\tconst isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tthis._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\n\t}\n\t\n\tprivate _randomGenerated(): void {\n\t\tthis._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\n\t}\n\t\n\tprivate _whenSetTempo = (): void => {\n\t\tthis._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\n\t}\n\t\n\tprivate _whenSetScale = (): void => {\n\t\tif (isNaN(<number> <unknown> this._scaleSelect.value)) {\n\t\t\tswitch (this._scaleSelect.value) {\n\t\t\t\tcase \"forceScale\":\n\t\t\t\t\tthis._doc.selection.forceScale();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._doc.notifier.changed();\n\t\t} else {\n\t\t\tthis._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\n\t\t}\n\t}\n\t\n\tprivate _whenSetKey = (): void => {\n\t\tif (isNaN(<number> <unknown> this._keySelect.value)) {\n\t\t\tswitch (this._keySelect.value) {\n\t\t\t\tcase \"detectKey\":\n\t\t\t\t\tthis._doc.record(new ChangeDetectKey(this._doc));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._doc.notifier.changed();\n\t\t} else {\n\t\t\tthis._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\n\t\t}\n\t}\n\t\n\tprivate _whenSetRhythm = (): void => {\n\t\tif (isNaN(<number> <unknown> this._rhythmSelect.value)) {\n\t\t\tswitch (this._rhythmSelect.value) {\n\t\t\t\tcase \"forceRhythm\":\n\t\t\t\t\tthis._doc.selection.forceRhythm();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._doc.notifier.changed();\n\t\t} else {\n\t\t\tthis._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\n\t\t}\n\t}\n\t\n\tprivate _whenSetPitchedPreset = (): void => {\n\t\tthis._setPreset(this._pitchedPresetSelect.value);\n\t}\n\t\n\tprivate _whenSetDrumPreset = (): void => {\n\t\tthis._setPreset(this._drumPresetSelect.value);\n\t}\n\t\n\tprivate _setPreset(preset: string): void {\n\t\tif (isNaN(<number> <unknown> preset)) {\n\t\t\tswitch (preset) {\n\t\t\t\tcase \"copyInstrument\":\n\t\t\t\t\tthis._copyInstrument();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pasteInstrument\":\n\t\t\t\t\tthis._pasteInstrument();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"randomPreset\":\n\t\t\t\t\tthis._randomPreset();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"randomGenerated\":\n\t\t\t\t\tthis._randomGenerated();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._doc.notifier.changed();\n\t\t} else {\n\t\t\tthis._doc.record(new ChangePreset(this._doc, parseInt(preset)));\n\t\t}\n\t}\n\t\n\tprivate _whenSetFeedbackType = (): void => {\n\t\tthis._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\n\t}\n\t\n\tprivate _whenSetAlgorithm = (): void => {\n\t\tthis._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\n\t}\n\t\n\tprivate _whenSelectInstrument = (event: MouseEvent): void => {\n\t\tif (event.target == this._instrumentAddButton) {\n\t\t\tthis._doc.record(new ChangeAddChannelInstrument(this._doc));\n\t\t} else if (event.target == this._instrumentRemoveButton) {\n\t\t\tthis._doc.record(new ChangeRemoveChannelInstrument(this._doc));\n\t\t} else {\n\t\t\tconst index: number = this._instrumentButtons.indexOf(<any>event.target);\n\t\t\tif (index != -1) {\n\t\t\t\tthis._doc.selection.selectInstrument(index);\n\t\t\t}\n\t\t}\n\t\tthis._refocusStage();\n\t}\n\t\n\tprivate _whenCustomizePressed = (): void => {\n\t\tthis._doc.record(new ChangeCustomizeInstrument(this._doc));\n\t}\n\t\n\tprivate _whenSetChipWave = (): void => {\n\t\tthis._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\n\t}\n\t\n\tprivate _whenSetNoiseWave = (): void => {\n\t\tthis._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\n\t}\n\tprivate _whenSetTransition = (): void => {\n\t\tthis._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\n\t}\n\t\n\tprivate _whenSetEffects = (): void => {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tconst oldValue: number = instrument.effects;\n\t\tconst toggleFlag: number = Config.effectOrder[this._effectsSelect.selectedIndex - 1];\n\t\tthis._doc.record(new ChangeToggleEffects(this._doc, toggleFlag));\n\t\tthis._effectsSelect.selectedIndex = 0;\n\t\tif (instrument.effects > oldValue) {\n\t\t\tthis._doc.addedEffect = true;\n\t\t}\n\t}\n\t\n\tprivate _whenSetVibrato = (): void => {\n\t\tthis._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\n\t}\n\t\n\tprivate _whenSetUnison = (): void => {\n\t\tthis._doc.record(new ChangeUnison(this._doc, this._unisonSelect.selectedIndex));\n\t}\n\t\n\tprivate _whenSetChord = (): void => {\n\t\tthis._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\n\t}\n\t\n\tprivate _addNewEnvelope = (): void => {\n\t\tthis._doc.record(new ChangeAddEnvelope(this._doc));\n\t\tthis._refocusStage();\n\t\tthis._doc.addedEnvelope = true;\n\t}\n\t\n\tprivate _zoomIn = (): void => {\n\t\tthis._doc.prefs.visibleOctaves = Math.max(1, this._doc.prefs.visibleOctaves - 1);\n\t\tthis._doc.prefs.save();\n\t\tthis._doc.notifier.changed();\n\t\tthis._refocusStage();\n\t}\n\t\n\tprivate _zoomOut = (): void => {\n\t\tthis._doc.prefs.visibleOctaves = Math.min(Config.pitchOctaves, this._doc.prefs.visibleOctaves + 1);\n\t\tthis._doc.prefs.save();\n\t\tthis._doc.notifier.changed();\n\t\tthis._refocusStage();\n\t}\n\t\n\tprivate _fileMenuHandler = (event:Event): void => {\n\t\tswitch (this._fileMenu.value) {\n\t\t\tcase \"new\":\n\t\t\t\tthis._doc.goBackToStart();\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, \"\"), false, true);\n\t\t\t\tbreak;\n\t\t\tcase \"export\":\n\t\t\t\tthis._openPrompt(\"export\");\n\t\t\t\tbreak;\n\t\t\tcase \"import\":\n\t\t\t\tthis._openPrompt(\"import\");\n\t\t\t\tbreak;\n\t\t\tcase \"copyUrl\":\n\t\t\t\tthis._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\n\t\t\t\tbreak;\n\t\t\tcase \"shareUrl\":\n\t\t\t\t(<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\n\t\t\t\tbreak;\n\t\t\tcase \"shortenUrl\":\n\t\t\t\twindow.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\n\t\t\t\tbreak;\n\t\t\tcase \"viewPlayer\":\n\t\t\t\tlocation.href = \"player/#song=\" + this._doc.song.toBase64String();\n\t\t\t\tbreak;\n\t\t\tcase \"copyEmbed\":\n\t\t\t\tthis._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\n\t\t\t\tbreak;\n\t\t\tcase \"songRecovery\":\n\t\t\t\tthis._openPrompt(\"songRecovery\");\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._fileMenu.selectedIndex = 0;\n\t}\n\t\n\tprivate _editMenuHandler = (event:Event): void => {\n\t\tswitch (this._editMenu.value) {\n\t\t\tcase \"undo\":\n\t\t\t\tthis._doc.undo();\n\t\t\t\tbreak;\n\t\t\tcase \"redo\":\n\t\t\t\tthis._doc.redo();\n\t\t\t\tbreak;\n\t\t\tcase \"copy\":\n\t\t\t\tthis._doc.selection.copy();\n\t\t\t\tbreak;\n\t\t\tcase \"insertBars\":\n\t\t\t\tthis._doc.selection.insertBars();\n\t\t\t\tbreak;\n\t\t\tcase \"deleteBars\":\n\t\t\t\tthis._doc.selection.deleteBars();\n\t\t\t\tbreak;\n\t\t\tcase \"insertChannel\":\n\t\t\t\tthis._doc.selection.insertChannel();\n\t\t\t\tbreak;\n\t\t\tcase \"deleteChannel\":\n\t\t\t\tthis._doc.selection.deleteChannel();\n\t\t\t\tbreak;\n\t\t\tcase \"pasteNotes\":\n\t\t\t\tthis._doc.selection.pasteNotes();\n\t\t\t\tbreak;\n\t\t\tcase \"pasteNumbers\":\n\t\t\t\tthis._doc.selection.pasteNumbers();\n\t\t\t\tbreak;\n\t\t\tcase \"transposeUp\":\n\t\t\t\tthis._doc.selection.transpose(true, false);\n\t\t\t\tbreak;\n\t\t\tcase \"transposeDown\":\n\t\t\t\tthis._doc.selection.transpose(false, false);\n\t\t\t\tbreak;\n\t\t\tcase \"selectAll\":\n\t\t\t\tthis._doc.selection.selectAll();\n\t\t\t\tbreak;\n\t\t\tcase \"selectChannel\":\n\t\t\t\tthis._doc.selection.selectChannel();\n\t\t\t\tbreak;\n\t\t\tcase \"duplicatePatterns\":\n\t\t\t\tthis._doc.selection.duplicatePatterns();\n\t\t\t\tbreak;\n\t\t\tcase \"barCount\":\n\t\t\t\tthis._openPrompt(\"barCount\");\n\t\t\t\tbreak;\n\t\t\tcase \"beatsPerBar\":\n\t\t\t\tthis._openPrompt(\"beatsPerBar\");\n\t\t\t\tbreak;\n\t\t\tcase \"moveNotesSideways\":\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\n\t\t\t\tbreak;\n\t\t\tcase \"channelSettings\":\n\t\t\t\tthis._openPrompt(\"channelSettings\");\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._editMenu.selectedIndex = 0;\n\t}\n\t\n\tprivate _optionsMenuHandler = (event:Event): void => {\n\t\tswitch (this._optionsMenu.value) {\n\t\t\tcase \"autoPlay\":\n\t\t\t\tthis._doc.prefs.autoPlay = !this._doc.prefs.autoPlay;\n\t\t\t\tbreak;\n\t\t\tcase \"autoFollow\":\n\t\t\t\tthis._doc.prefs.autoFollow = !this._doc.prefs.autoFollow;\n\t\t\t\tbreak;\n\t\t\tcase \"enableNotePreview\":\n\t\t\t\tthis._doc.prefs.enableNotePreview = !this._doc.prefs.enableNotePreview;\n\t\t\t\tbreak;\n\t\t\tcase \"showLetters\":\n\t\t\t\tthis._doc.prefs.showLetters = !this._doc.prefs.showLetters;\n\t\t\t\tbreak;\n\t\t\tcase \"showFifth\":\n\t\t\t\tthis._doc.prefs.showFifth = !this._doc.prefs.showFifth;\n\t\t\t\tbreak;\n\t\t\tcase \"notesOutsideScale\":\n\t\t\t\tthis._doc.prefs.notesOutsideScale = !this._doc.prefs.notesOutsideScale;\n\t\t\t\tbreak;\n\t\t\tcase \"setDefaultScale\":\n\t\t\t\tthis._doc.prefs.defaultScale = this._doc.song.scale;\n\t\t\t\tbreak;\n\t\t\tcase \"showChannels\":\n\t\t\t\tthis._doc.prefs.showChannels = !this._doc.prefs.showChannels;\n\t\t\t\tbreak;\n\t\t\tcase \"showScrollBar\":\n\t\t\t\tthis._doc.prefs.showScrollBar = !this._doc.prefs.showScrollBar;\n\t\t\t\tbreak;\n\t\t\tcase \"alwaysShowSettings\":\n\t\t\t\tthis._doc.prefs.alwaysShowSettings = !this._doc.prefs.alwaysShowSettings;\n\t\t\t\tbreak;\n\t\t\tcase \"instrumentCopyPaste\":\n\t\t\t\tthis._doc.prefs.instrumentCopyPaste = !this._doc.prefs.instrumentCopyPaste;\n\t\t\t\tbreak;\n\t\t\tcase \"enableChannelMuting\":\n\t\t\t\tthis._doc.prefs.enableChannelMuting = !this._doc.prefs.enableChannelMuting;\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\n\t\t\t\tbreak;\n\t\t\tcase \"displayBrowserUrl\":\n\t\t\t\tthis._doc.toggleDisplayBrowserUrl();\n\t\t\t\tbreak;\n\t\t\tcase \"boxbeepLayout\":\n\t\t\t\tthis._openPrompt(\"boxbeepLayout\");\n\t\t\t\tbreak;\n\t\t\tcase \"boxbeepColorTheme\":\n\t\t\t\tthis._doc.prefs.boxbeepColorTheme = this._doc.prefs.boxbeepColorTheme == \"light classic\" ? \"dark classic\" : \"light classic\";\n\t\t\t\tColorConfig.setTheme(this._doc.prefs.boxbeepColorTheme);\n\t\t\t\tbreak;\n\t\t\tcase \"recordingSetup\":\n\t\t\t\tthis._openPrompt(\"recordingSetup\");\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._optionsMenu.selectedIndex = 0;\n\t\tthis._doc.notifier.changed();\n\t\tthis._doc.prefs.save();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {Note, Pattern} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {ChangeGroup} from \"./Change\";\nimport {ChangeChannelBar, ChangePinTime, ChangeEnsurePatternExists, ChangeNoteAdded, ChangeInsertBars, ChangeDeleteBars, ChangeNoteLength} from \"./changes\";\n\nexport class SongPerformance {\n\tprivate _channelIsDrum: boolean = false;\n\tprivate _channelOctave: number = -1;\n\tprivate _songKey: number = -1;\n\tprivate _pitchesAreTemporary: boolean = false;\n\tprivate readonly _recentlyAddedPitches: number[] = []; // Pitches that are rapidly added then removed within a minimum rhythm duration wouldn't get recorded until I explicitly track recently added notes and check if any are no longer held.\n\t\n\tprivate _songLengthWhenRecordingStarted: number = -1;\n\tprivate _playheadPart: number = -1;\n\tprivate _playheadPattern: Pattern | null = null;\n\tprivate _pitchesChanged: boolean = false;\n\tprivate _lastNote: Note | null = null;\n\tprivate _recordingChange: ChangeGroup | null = null;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\tthis._documentChanged();\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t}\n\t\n\tpublic play(): void {\n\t\tthis._doc.synth.play();\n\t\tthis._doc.synth.enableMetronome = false;\n\t\tthis._doc.synth.countInMetronome = false\n\t\tthis._doc.synth.maintainLiveInput();\n\t}\n\t\n\tpublic pause(): void {\n\t\tthis.clearAllPitches();\n\t\tif (this._recordingChange != null) {\n\t\t\tif (this._doc.song.barCount > this._songLengthWhenRecordingStarted && !this._lastBarHasPatterns()) {\n\t\t\t\t// If an extra empty bar was added in case it was needed for recording, but it didn't end up getting used, delete it now.\n\t\t\t\tnew ChangeDeleteBars(this._doc, this._doc.song.barCount - 1, 1);\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, this._doc.song.barCount - 1);\n\t\t\t}\n\t\t\tif (!this._recordingChange.isNoop()) {\n\t\t\t\tthis._doc.record(this._recordingChange);\n\t\t\t\tthis._recordingChange = null;\n\t\t\t}\n\t\t\tthis._lastNote = null;\n\t\t}\n\t\tthis._doc.synth.pause();\n\t\tthis._doc.synth.resetEffects();\n\t\tthis._doc.synth.enableMetronome = false;\n\t\tthis._doc.synth.countInMetronome = false\n\t\tif (this._doc.prefs.autoFollow) {\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\n\t\t}\n\t\tthis._doc.synth.snapToBar();\n\t}\n\t\n\tpublic record(): void {\n\t\tthis._doc.synth.snapToBar();\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\n\t\tif (playheadBar != this._doc.bar) {\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\n\t\t}\n\t\tif (this._pitchesAreTemporary) {\n\t\t\tthis.clearAllPitches();\n\t\t\tthis._pitchesAreTemporary = false;\n\t\t}\n\t\tthis._doc.synth.enableMetronome = this._doc.prefs.metronomeWhileRecording;\n\t\tthis._doc.synth.countInMetronome = this._doc.prefs.metronomeCountIn;\n\t\tthis._doc.synth.startRecording();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tthis._songLengthWhenRecordingStarted = this._doc.song.barCount;\n\t\tthis._playheadPart = this._getCurrentPlayheadPart();\n\t\tthis._playheadPattern = null;\n\t\tthis._pitchesChanged = false;\n\t\tthis._lastNote = null;\n\t\tthis._recentlyAddedPitches.length = 0;\n\t\tthis._recordingChange = new ChangeGroup();\n\t\tthis._doc.setProspectiveChange(this._recordingChange);\n\t}\n\t\n\tpublic abortRecording(): void {\n\t\tthis._recordingChange = null;\n\t\tthis.pause();\n\t}\n\t\n\tpublic pitchesAreTemporary(): boolean {\n\t\treturn this._pitchesAreTemporary;\n\t}\n\t\n\tprivate _getMinDivision(): number {\n\t\tif (this._doc.prefs.snapRecordedNotesToRhythm) {\n\t\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\t\n\tprivate _getCurrentPlayheadPart(): number {\n\t\tconst currentPart: number = this._doc.synth.playhead * this._doc.song.beatsPerBar * Config.partsPerBeat;\n\t\tif (this._doc.prefs.snapRecordedNotesToRhythm) {\n\t\t\tconst minDivision: number = this._getMinDivision();\n\t\t\treturn Math.round(currentPart / minDivision) * minDivision;\n\t\t}\n\t\treturn Math.round(currentPart);\n\t}\n\t\n\tprivate _lastBarHasPatterns(): boolean {\n\t\tfor (let channelIndex: number = 0; channelIndex < this._doc.song.getChannelCount(); channelIndex++) {\n\t\t\tif (this._doc.song.channels[channelIndex].bars[this._doc.song.barCount - 1] != 0) return true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tprivate _onAnimationFrame = (): void => {\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t\tif (this._doc.synth.recording) {\n\t\t\tconst dirty = this._updateRecordedNotes();\n\t\t\tif (dirty) {\n\t\t\t\t// The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\n\t\t\t\tthis._doc.notifier.notifyWatchers();\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Returns true if the full interface needs to be rerendered.\n\tprivate _updateRecordedNotes(): boolean {\n\t\tif (this._recordingChange == null) return false;\n\t\tif (!this._doc.lastChangeWas(this._recordingChange)) {\n\t\t\tthis.abortRecording();\n\t\t\treturn false;\n\t\t}\n\t\tif (this._doc.synth.countInMetronome) {\n\t\t\t// If the synth is still counting in before recording, discard any recently added pitches.\n\t\t\tthis._recentlyAddedPitches.length = 0;\n\t\t\tthis._pitchesChanged = false;\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tconst partsPerBar: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\t\tconst oldPart: number = this._playheadPart % partsPerBar;\n\t\tconst oldBar: number = Math.floor(this._playheadPart / partsPerBar);\n\t\tconst oldPlayheadPart: number = this._playheadPart;\n\t\tthis._playheadPart = this._getCurrentPlayheadPart();\n\t\tconst newPart: number = this._playheadPart % partsPerBar;\n\t\tconst newBar: number = Math.floor(this._playheadPart / partsPerBar);\n\t\tif (oldPart == newPart && oldBar == newBar) return false;\n\t\tif (this._playheadPart < oldPlayheadPart) {\n\t\t\tthis._lastNote = null;\n\t\t\tthis._playheadPattern = null;\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tlet dirty = false;\n\t\tfor (let bar: number = oldBar; bar <= newBar; bar++) {\n\t\t\tif (bar != oldBar) this._playheadPattern = null;\n\t\t\tconst startPart: number = (bar == oldBar) ? oldPart : 0;\n\t\t\tconst endPart: number = (bar == newBar) ? newPart : partsPerBar;\n\t\t\tif (startPart == endPart) break;\n\t\t\tif (this._lastNote != null && !this._pitchesChanged && startPart > 0 && this._doc.synth.liveInputPitches.length > 0) {\n\t\t\t\tthis._recordingChange.append(new ChangePinTime(this._doc, this._lastNote, 1, endPart, this._lastNote.continuesLastPattern));\n\t\t\t\t// Instead of updating the entire interface when extending the last note, just update the current pattern as a special case to avoid doing too much work every frame since performance is important while recording.\n\t\t\t\tthis._doc.currentPatternIsDirty = true;\n\t\t\t} else {\n\t\t\t\tif (this._lastNote != null) {\n\t\t\t\t\t// End the last note.\n\t\t\t\t\tthis._lastNote = null;\n\t\t\t\t}\n\t\t\t\t// All current pitches will usually fill the time span from startPart to endPart, but\n\t\t\t\t// if any recent pitches were released before being recorded, they'll get recorded here\n\t\t\t\t// as short as possible and then any remaining time will be dedicated to pitches that\n\t\t\t\t// haven't been released yet.\n\t\t\t\tlet noteStartPart: number = startPart;\n\t\t\t\tlet noteEndPart: number = endPart;\n\t\t\t\twhile (noteStartPart < endPart) {\n\t\t\t\t\tlet addedAlreadyReleasedPitch: boolean = false;\n\t\t\t\t\tif (this._recentlyAddedPitches.length > 0 || this._doc.synth.liveInputPitches.length > 0) {\n\t\t\t\t\t\tif (this._playheadPattern == null) {\n\t\t\t\t\t\t\tthis._doc.selection.erasePatternInBar(this._recordingChange, this._doc.synth.liveInputChannel, bar);\n\t\t\t\t\t\t\tthis._recordingChange.append(new ChangeEnsurePatternExists(this._doc, this._doc.synth.liveInputChannel, bar));\n\t\t\t\t\t\t\tthis._playheadPattern = this._doc.song.getPattern(this._doc.synth.liveInputChannel, bar);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._playheadPattern == null) throw new Error();\n\t\t\t\t\t\tthis._lastNote = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.synth.liveInputChannel));\n\t\t\t\t\t\tthis._lastNote.continuesLastPattern = (noteStartPart == 0 && !this._pitchesChanged);\n\t\t\t\t\t\tthis._lastNote.pitches.length = 0;\n\t\t\t\t\t\twhile (this._recentlyAddedPitches.length > 0) {\n\t\t\t\t\t\t\tif (this._lastNote.pitches.length >= Config.maxChordSize) break;\n\t\t\t\t\t\t\tconst recentPitch: number = this._recentlyAddedPitches.shift()!;\n\t\t\t\t\t\t\tif (this._doc.synth.liveInputPitches.indexOf(recentPitch) == -1) {\n\t\t\t\t\t\t\t\tthis._lastNote.pitches.push(recentPitch);\n\t\t\t\t\t\t\t\taddedAlreadyReleasedPitch = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\n\t\t\t\t\t\t\tif (this._lastNote.pitches.length >= Config.maxChordSize) break;\n\t\t\t\t\t\t\tthis._lastNote.pitches.push(this._doc.synth.liveInputPitches[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._recordingChange.append(new ChangeNoteAdded(this._doc, this._playheadPattern, this._lastNote, this._playheadPattern.notes.length));\n\t\t\t\t\t\tif (addedAlreadyReleasedPitch) {\n\t\t\t\t\t\t\t// If this note contains pitches that were already released, shorten it and start a new note.\n\t\t\t\t\t\t\tnoteEndPart = noteStartPart + this._getMinDivision();\n\t\t\t\t\t\t\tnew ChangeNoteLength(this._doc, this._lastNote, this._lastNote.start, noteEndPart);\n\t\t\t\t\t\t\tthis._lastNote = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdirty = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._pitchesChanged = addedAlreadyReleasedPitch;\n\t\t\t\t\tnoteStartPart = noteEndPart;\n\t\t\t\t\tnoteEndPart = endPart;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (bar == this._doc.song.barCount - 1) {\n\t\t\t\tif (this._lastBarHasPatterns()) {\n\t\t\t\t\tnew ChangeInsertBars(this._doc, this._doc.song.barCount, 1);\n\t\t\t\t\tthis._doc.bar--; // To counteract it increasing in ChangeInsertBars.\n\t\t\t\t\tdirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dirty;\n\t}\n\t\n\tpublic setTemporaryPitches(pitches: number[], duration: number): void {\n\t\tthis._updateRecordedNotes();\n\t\tfor (let i: number = 0; i < pitches.length; i++) {\n\t\t\tthis._doc.synth.liveInputPitches[i] = pitches[i];\n\t\t}\n\t\tthis._doc.synth.liveInputPitches.length = Math.min(pitches.length, Config.maxChordSize);\n\t\tthis._doc.synth.liveInputDuration = duration;\n\t\tthis._doc.synth.liveInputStarted = true;\n\t\tthis._pitchesAreTemporary = true;\n\t\tthis._pitchesChanged = true;\n\t}\n\t\n\tpublic addPerformedPitch(pitch: number): void {\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tthis._updateRecordedNotes();\n\t\tif (this._pitchesAreTemporary) {\n\t\t\tthis.clearAllPitches();\n\t\t\tthis._pitchesAreTemporary = false;\n\t\t}\n\t\tif (this._doc.prefs.ignorePerformedNotesNotInScale && !Config.scales[this._doc.song.scale].flags[pitch % Config.pitchesPerOctave]) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._doc.synth.liveInputPitches.indexOf(pitch) == -1) {\n\t\t\tthis._doc.synth.liveInputPitches.push(pitch);\n\t\t\tthis._pitchesChanged = true;\n\t\t\twhile (this._doc.synth.liveInputPitches.length > Config.maxChordSize) {\n\t\t\t\tthis._doc.synth.liveInputPitches.shift();\n\t\t\t}\n\t\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\n\t\t\t\n\t\t\tif (this._recordingChange != null) {\n\t\t\t\tconst recentIndex: number = this._recentlyAddedPitches.indexOf(pitch);\n\t\t\t\tif (recentIndex != -1) {\n\t\t\t\t\t// If the latest pitch is already in _recentlyAddedPitches, remove it before adding it back at the end.\n\t\t\t\t\tthis._recentlyAddedPitches.splice(recentIndex, 1);\n\t\t\t\t}\n\t\t\t\tthis._recentlyAddedPitches.push(pitch);\n\t\t\t\twhile (this._recentlyAddedPitches.length > Config.maxChordSize * 4) {\n\t\t\t\t\tthis._recentlyAddedPitches.shift();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic removePerformedPitch(pitch: number): void {\n\t\tthis._updateRecordedNotes();\n\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\n\t\t\tif (this._doc.synth.liveInputPitches[i] == pitch) {\n\t\t\t\tthis._doc.synth.liveInputPitches.splice(i, 1);\n\t\t\t\tthis._pitchesChanged = true;\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic clearAllPitches(): void {\n\t\tthis._updateRecordedNotes();\n\t\tthis._doc.synth.liveInputPitches.length = 0;\n\t\tthis._pitchesChanged = true;\n\t}\n\t\n\tprivate _documentChanged = (): void => {\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tconst octave: number = this._doc.song.channels[this._doc.channel].octave;\n\t\tif (this._doc.synth.liveInputChannel != this._doc.channel || this._channelIsDrum != isDrum || this._channelOctave != octave || this._songKey != this._doc.song.key) {\n\t\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\n\t\t\tthis._channelIsDrum = isDrum;\n\t\t\tthis._channelOctave = octave;\n\t\t\tthis._songKey = this._doc.song.key;\n\t\t\tthis.clearAllPitches();\n\t\t}\n\t\tthis._doc.synth.liveInputInstruments = this._doc.recentPatternInstruments[this._doc.channel];\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Dictionary, Config} from \"../synth/SynthConfig\";\nimport {Note, Pattern, Channel} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {ChangeGroup} from \"./Change\";\nimport {ChangeTrackSelection, ChangeChannelBar, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeAddChannel, ChangeDeleteBars, ChangeRemoveChannel, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangeSetPatternInstruments, ChangeViewInstrument, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, ChangeChannelOrder, comparePatternNotes, unionOfUsedNotes, generateScaleMap, discardInvalidPatternInstruments, patternsContainSameInstruments} from \"./changes\";\n\ninterface PatternCopy {\n\tinstruments: number[];\n\tnotes: any[];\n}\n\ninterface ChannelCopy {\n\tisNoise: boolean;\n\tpatterns: Dictionary<PatternCopy>;\n\tbars: number[];\n}\n\ninterface SelectionCopy {\n\tpartDuration: number;\n\tchannels: ChannelCopy[];\n}\n\nexport class Selection {\n\tpublic boxSelectionX0: number = 0;\n\tpublic boxSelectionY0: number = 0;\n\tpublic boxSelectionX1: number = 0;\n\tpublic boxSelectionY1: number = 0;\n\tpublic digits: string = \"\";\n\tpublic instrumentDigits: string = \"\";\n\tpublic patternSelectionStart: number = 0;\n\tpublic patternSelectionEnd: number = 0;\n\tpublic patternSelectionActive: boolean = false;\n\t\n\tprivate _changeTranspose: ChangeGroup | null = null;\n\tprivate _changeReorder: ChangeGroup | null = null;\n\tprivate _changeTrack: ChangeGroup | null = null;\n\tprivate _changeInstrument: ChangeGroup | null = null;\n\t\n\tconstructor(private _doc: SongDocument) {}\n\t\n\tpublic toJSON(): {x0: number, x1: number, y0: number, y1: number, start: number, end: number} {\n\t\treturn {\n\t\t\t\"x0\": this.boxSelectionX0,\n\t\t\t\"x1\": this.boxSelectionX1,\n\t\t\t\"y0\": this.boxSelectionY0,\n\t\t\t\"y1\": this.boxSelectionY1,\n\t\t\t\"start\": this.patternSelectionStart,\n\t\t\t\"end\": this.patternSelectionEnd,\n\t\t};\n\t}\n\t\n\tpublic fromJSON(json: {x0: number, x1: number, y0: number, y1: number, start: number, end: number}): void {\n\t\tif (json == null) return;\n\t\tthis.boxSelectionX0 = +json[\"x0\"];\n\t\tthis.boxSelectionX1 = +json[\"x1\"];\n\t\tthis.boxSelectionY0 = +json[\"y0\"];\n\t\tthis.boxSelectionY1 = +json[\"y1\"];\n\t\tthis.patternSelectionStart = +json[\"start\"];\n\t\tthis.patternSelectionEnd = +json[\"end\"];\n\t\tthis.digits = \"\";\n\t\tthis.instrumentDigits = \"\";\n\t\tthis.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\n\t}\n\t\n\tpublic selectionUpdated(): void {\n\t\tthis._doc.notifier.changed();\n\t\tthis.digits = \"\";\n\t\tthis.instrumentDigits = \"\";\n\t}\n\t\n\tpublic get boxSelectionBar(): number {\n\t\treturn Math.min(this.boxSelectionX0, this.boxSelectionX1);\n\t}\n\tpublic get boxSelectionChannel(): number {\n\t\treturn Math.min(this.boxSelectionY0, this.boxSelectionY1);\n\t}\n\tpublic get boxSelectionWidth(): number {\n\t\treturn Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\n\t}\n\tpublic get boxSelectionHeight(): number {\n\t\treturn Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\n\t}\n\tpublic get boxSelectionActive(): boolean {\n\t\treturn this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1;\n\t}\n\tpublic scrollToSelectedPattern(): void {\n\t\tthis._doc.barScrollPos     = Math.min(this._doc.bar,     Math.max(this._doc.bar     - (this._doc.trackVisibleBars     - 1), this._doc.barScrollPos));\n\t\tthis._doc.channelScrollPos = Math.min(this._doc.channel, Math.max(this._doc.channel - (this._doc.trackVisibleChannels - 1), this._doc.channelScrollPos));\n\t}\n\tpublic scrollToEndOfSelection(): void {\n\t\tthis._doc.barScrollPos     = Math.min(this.boxSelectionX1, Math.max(this.boxSelectionX1 - (this._doc.trackVisibleBars     - 1), this._doc.barScrollPos));\n\t\tthis._doc.channelScrollPos = Math.min(this.boxSelectionY1, Math.max(this.boxSelectionY1 - (this._doc.trackVisibleChannels - 1), this._doc.channelScrollPos));\n\t}\n\t\n\tpublic setChannelBar(channelIndex: number, bar: number): void {\n\t\tif (channelIndex == this._doc.channel && bar == this._doc.bar) return;\n\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTrack);\n\t\tthis._changeTrack = new ChangeGroup();\n\t\tthis._changeTrack.append(new ChangeChannelBar(this._doc, channelIndex, bar));\n\t\t// @jummbus - changing current viewed instrument to the first for the current pattern if the viewedInstrument is not in the pattern\n\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(0);\n\t\tif (pattern != null && this._doc.song.patternInstruments) {\n\t\t\tif (pattern.instruments.indexOf(this._doc.viewedInstrument[this._doc.channel]) == -1) {\n\t\t\t\tthis._doc.viewedInstrument[this._doc.channel] = pattern.instruments[0];\n\t\t\t}\n\t\t}\n\t\t// Don't erase existing redo history just to look at highlighted pattern.\n\t\tif (!this._doc.hasRedoHistory()) {\n\t\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\n\t\t}\n\t\tthis.selectionUpdated();\n\t}\n\t\n\tpublic setPattern(pattern: number): void {\n\t\tthis._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\n\t}\n\t\n\tpublic nextDigit(digit: string, forInstrument: boolean): void {\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\n\t\t\n\t\tif (forInstrument) {\n\t\t\t// Treat \"0\" as meaning instrument 10\n\t\t\tif (digit == \"0\") digit = \"10\";\n\t\t\tthis.instrumentDigits += digit;\n\t\t\tvar parsed = parseInt(this.instrumentDigits);\n\t\t\tif (parsed != 0 && parsed <= channel.instruments.length) {\n\t\t\t\tthis.selectInstrument(parsed - 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.instrumentDigits = digit;\n\t\t\tparsed = parseInt(this.instrumentDigits);\n\t\t\tif (parsed != 0 && parsed <= channel.instruments.length) {\n\t\t\t\tthis.selectInstrument(parsed - 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.instrumentDigits = \"\";\n\t\t} else {\n\t\t\tif (this.digits.length > 0 && this.digits != String(channel.bars[this.boxSelectionBar])) {\n\t\t\t\tthis.digits = \"\";\n\t\t\t}\n\t\t\t\n\t\t\tthis.digits += digit;\n\t\t\tlet parsed: number = parseInt(this.digits);\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\n\t\t\t\tthis.setPattern(parsed);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tthis.digits = digit;\n\t\t\tparsed = parseInt(this.digits);\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\n\t\t\t\tthis.setPattern(parsed);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tthis.digits = \"\";\n\t\t}\n\t}\n\t\n\tpublic insertBars(): void {\n\t\tthis._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\n\t\tconst width: number = this.boxSelectionWidth;\n\t\tthis.boxSelectionX0 += width;\n\t\tthis.boxSelectionX1 += width;\n\t}\n\t\n\tpublic insertChannel(): void {\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\tconst insertIndex: number = this.boxSelectionChannel + this.boxSelectionHeight;\n\t\tconst isNoise: boolean = this._doc.song.getChannelIsNoise(insertIndex - 1);\n\t\tgroup.append(new ChangeAddChannel(this._doc, insertIndex, isNoise));\n\t\tif (!group.isNoop()) {\n\t\t\tthis.boxSelectionY0 = this.boxSelectionY1 = insertIndex;\n\t\t\tgroup.append(new ChangeChannelBar(this._doc, insertIndex, this._doc.bar));\n\t\t\tthis._doc.record(group);\n\t\t}\n\t}\n\t\n\tpublic deleteBars(): void {\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\tif (this._doc.selection.patternSelectionActive) {\n\t\t\t\n\t\t\tif (this.boxSelectionActive) {\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n\t\t\t}\n\t\t\t\n\t\t\tfor (const channelIndex of this._eachSelectedChannel()) {\n\t\t\t\tfor (const pattern of this._eachSelectedPattern(channelIndex)) {\n\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\n\t\t\t\t}\n\t\t\t}\n\t\t\tgroup.append(new ChangePatternSelection(this._doc, 0, 0));\n\t\t} else {\n\t\t\tgroup.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\n\t\t\tconst width: number = this.boxSelectionWidth;\n\t\t\tthis.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\n\t\t\tthis.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\n\t\t}\n\t\tthis._doc.record(group);\n\t}\n\t\n\tpublic deleteChannel(): void {\n\t\tthis._doc.record(new ChangeRemoveChannel(this._doc, this.boxSelectionChannel, this.boxSelectionChannel + this.boxSelectionHeight - 1));\n\t\tthis.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\n\t}\n\t\n\tprivate *_eachSelectedChannel(): IterableIterator<number> {\n\t\tfor (let channelIndex: number = this.boxSelectionChannel; channelIndex < this.boxSelectionChannel + this.boxSelectionHeight; channelIndex++) {\n\t\t\tyield channelIndex;\n\t\t}\n\t}\n\t\n\tprivate *_eachSelectedBar(): IterableIterator<number> {\n\t\tfor (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\n\t\t\tyield bar;\n\t\t}\n\t}\n\t\n\tprivate *_eachSelectedPattern(channelIndex: number): IterableIterator<Pattern> {\n\t\tconst handledPatterns: Dictionary<boolean> = {};\n\t\tfor (const bar of this._eachSelectedBar()) {\n\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\n\t\t\tif (currentPatternIndex == 0) continue;\n\t\t\tif (handledPatterns[String(currentPatternIndex)]) continue;\n\t\t\thandledPatterns[String(currentPatternIndex)] = true;\n\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n\t\t\tif (pattern == null) throw new Error();\n\t\t\tyield pattern;\n\t\t}\n\t}\n\t\n\tprivate _parseCopiedInstrumentArray(patternCopy: any, channelIndex: number): number[] {\n\t\tconst instruments: number[] = Array.from(patternCopy[\"instruments\"]).map(i => (<any>i) >>> 0);\n\t\tdiscardInvalidPatternInstruments(instruments, this._doc.song, channelIndex);\n\t\treturn instruments;\n\t}\n\t\n\tprivate _patternIndexIsUnused(channelIndex: number, patternIndex: number): boolean {\n\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\n\t\t\tif (this._doc.song.channels[channelIndex].bars[i] == patternIndex) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tpublic copy(): void {\n\t\tconst channels: ChannelCopy[] = [];\n\t\t\n\t\tfor (const channelIndex of this._eachSelectedChannel()) {\n\t\t\tconst patterns: Dictionary<PatternCopy> = {};\n\t\t\tconst bars: number[] = [];\n\t\t\t\n\t\t\tfor (const bar of this._eachSelectedBar()) {\n\t\t\t\tconst patternNumber: number = this._doc.song.channels[channelIndex].bars[bar];\n\t\t\t\tbars.push(patternNumber);\n\t\t\t\tif (patterns[String(patternNumber)] == undefined) {\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n\t\t\t\t\tlet instruments: number[] = this._doc.recentPatternInstruments[channelIndex];\n\t\t\t\t\tlet notes: Note[] = [];\n\t\t\t\t\tif (pattern != null) {\n\t\t\t\t\t\tinstruments = pattern.instruments.concat();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.patternSelectionActive) {\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\n\t\t\t\t\t\t\t\tif (note.end <= this.patternSelectionStart) continue;\n\t\t\t\t\t\t\t\tif (note.start >= this.patternSelectionEnd) continue;\n\t\t\t\t\t\t\t\tnote.start -= this.patternSelectionStart;\n\t\t\t\t\t\t\t\tnote.end -= this.patternSelectionStart;\n\t\t\t\t\t\t\t\tif (note.start < 0 || note.end > this.patternSelectionEnd - this.patternSelectionStart) {\n\t\t\t\t\t\t\t\t\tnew ChangeNoteLength(null, note, Math.max(note.start, 0), Math.min(this.patternSelectionEnd - this.patternSelectionStart, note.end));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnotes.push(note);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnotes = pattern.notes;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpatterns[String(patternNumber)] = {\"instruments\": instruments, \"notes\": notes};\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tconst channelCopy: ChannelCopy = {\n\t\t\t\t\"isNoise\": this._doc.song.getChannelIsNoise(channelIndex),\n\t\t\t\t\"patterns\": patterns,\n\t\t\t\t\"bars\": bars,\n\t\t\t};\n\t\t\tchannels.push(channelCopy);\n\t\t}\n\t\t\n\t\tconst selectionCopy: SelectionCopy = {\n\t\t\t\"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\n\t\t\t\"channels\": channels,\n\t\t};\n\t\twindow.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\n\t}\n\t\n\t// I'm sorry this function is so complicated!\n\t// Basically I'm trying to avoid accidentally modifying patterns that are used\n\t// elsewhere in the song (unless we're just pasting a single pattern) but I'm\n\t// also trying to reuse patterns where it makes sense to do so, especially \n\t// in the same channel it was copied from.\n\tpublic pasteNotes(): void {\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\n\t\tif (selectionCopy == null) return;\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\n\t\tconst copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\n\t\t\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\tconst fillSelection: boolean = this.boxSelectionActive;\n\t\t\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\n\t\t\tconst channelIndex: number = this.boxSelectionChannel + pasteChannel;\n\t\t\t\n\t\t\tconst isNoise: boolean = !!channelCopy[\"isNoise\"];\n\t\t\tconst patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\n\t\t\tif (copiedBars.length == 0) continue;\n\t\t\tif (isNoise != this._doc.song.getChannelIsNoise(channelIndex)) continue;\n\t\t\t\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\n\t\t\tif (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\n\t\t\t\t// Special case: if there's just one pattern being copied, try to insert it\n\t\t\t\t// into whatever pattern is already selected.\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[0] >>> 0;\n\t\t\t\tconst bar: number = this.boxSelectionBar;\n\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\n\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\n\t\t\t\t\n\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n\t\t\t\tconst instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\n\t\t\t\t\n\t\t\t\tif (currentPatternIndex == 0) {\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channelIndex].patterns[copiedPatternIndex - 1];\n\t\t\t\t\tif (existingPattern != undefined &&\n\t\t\t\t\t\t!this.patternSelectionActive &&\n\t\t\t\t\t\t((comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) && patternsContainSameInstruments(instrumentsCopy, existingPattern.instruments)) ||\n\t\t\t\t\t\tthis._patternIndexIsUnused(channelIndex, copiedPatternIndex)))\n\t\t\t\t\t{\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n\t\t\t\tif (pattern == null) throw new Error();\n\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\n\t\t\t\tif (currentPatternIndex == 0) group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\n\t\t\t} else if (this.patternSelectionActive) {\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\n\t\t\t\tconst usedPatterns: Dictionary<boolean> = {};\n\t\t\t\t\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\n\t\t\t\t\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\n\t\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\n\t\t\t\t\tconst reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\n\t\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channelIndex, 1, 1));\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (currentPatternIndex == 0) {\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n\t\t\t\t\t\tconst instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\n\t\t\t\t\t\tconst pattern: Pattern = this._doc.song.getPattern(channelIndex, bar)!;\n\t\t\t\t\t\tgroup.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n\t\t\t\t\t\tif (pattern == null) throw new Error();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!usedPatterns[String(currentPatternIndex)]) {\n\t\t\t\t\t\t\tusedPatterns[String(currentPatternIndex)] = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// If this pattern is used here and elsewhere, it's not safe to modify it directly, so\n\t\t\t\t\t\t\t// make a duplicate of it and modify that instead.\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n\t\t\t\t\t\t\tconst newPattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n\t\t\t\t\t\t\tif (newPattern == null) throw new Error();\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\n\t\t\t\t\t\t\t\tgroup.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Don't overwrite the existing pattern's instruments if only part of the pattern content is being replaced.\n\t\t\t\t\t\t\t//group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, pattern.instruments, newPattern));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n\t\t\t\t\tif (pattern == null) throw new Error();\n\t\t\t\t\tif (copiedPatternIndex == 0) {\n\t\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channelIndex].bars[bar];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n\t\t\t\t\t// When a pattern becomes unused when replaced by rectangular selection pasting,\n\t\t\t\t\t// remove all the notes from the pattern so that it may be reused.\n\t\t\t\t\tthis.erasePatternInBar(group, channelIndex, this.boxSelectionBar + pasteBar);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\n\t\t\t\t\tconst reusedIndex: string = String(copiedPatternIndex);\n\t\t\t\t\t\n\t\t\t\t\tif (copiedPatternIndex == 0) continue;\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channelIndex, 1, 1));\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n\t\t\t\t\tconst instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channelIndex].patterns[copiedPatternIndex - 1];\n\t\t\t\t\t\n\t\t\t\t\tif (existingPattern != undefined &&\n\t\t\t\t\t\tcopiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\n\t\t\t\t\t\tcomparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) &&\n\t\t\t\t\t\tpatternsContainSameInstruments(instrumentsCopy, existingPattern.instruments))\n\t\t\t\t\t{\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (existingPattern != undefined && this._patternIndexIsUnused(channelIndex, copiedPatternIndex)) {\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n\t\t\t\t\t\tif (pattern == null) throw new Error();\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\n\t\t\t\t\t\tgroup.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channelIndex].bars[bar];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._doc.record(group);\n\t}\n\t\n\t// Set a bar's pattern number to zero, and if that pattern was not used\n\t// elsewhere in the channel, erase all notes in it as well.\n\tpublic erasePatternInBar(group: ChangeGroup, channelIndex: number, bar: number): void {\n\t\tconst removedPattern: number = this._doc.song.channels[channelIndex].bars[bar];\n\t\tif (removedPattern != 0) {\n\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\n\t\t\tif (this._patternIndexIsUnused(channelIndex, removedPattern)) {\n\t\t\t\t// When a pattern becomes unused when replaced by rectangular selection pasting,\n\t\t\t\t// remove all the notes from the pattern so that it may be reused.\n\t\t\t\tthis._doc.song.channels[channelIndex].patterns[removedPattern - 1].notes.length = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic pasteNumbers(): void {\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\n\t\tif (selectionCopy == null) return;\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\n\t\t\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\tconst fillSelection: boolean = this.boxSelectionActive;\n\t\t\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\n\t\t\tconst channelIndex: number = this.boxSelectionChannel + pasteChannel;\n\t\t\t\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\n\t\t\tif (copiedBars.length == 0) continue;\n\t\t\t\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\n\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\n\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\n\t\t\t\t\n\t\t\t\tif (copiedPatternIndex > this._doc.song.patternsPerChannel) {\n\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._doc.record(group);\n\t}\n\t\n\tpublic selectAll(): void {\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\n\t\tif (this.boxSelectionBar == 0 &&\n\t\t\tthis.boxSelectionChannel == 0 &&\n\t\t\tthis.boxSelectionWidth == this._doc.song.barCount &&\n\t\t\tthis.boxSelectionHeight == this._doc.song.getChannelCount())\n\t\t{\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\n\t\t} else {\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\n\t\t}\n\t\tthis.selectionUpdated();\n\t}\n\t\n\tpublic selectChannel(): void {\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\n\t\tif (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\n\t\t} else {\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\n\t\t}\n\t\tthis.selectionUpdated();\n\t}\n\t\n\tpublic duplicatePatterns(): void {\n\t\tthis._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n\t}\n\t\n\tpublic muteChannels(allChannels: boolean): void {\n\t\tif (allChannels) {\n\t\t\tlet anyMuted: boolean = false;\n\t\t\tfor (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\n\t\t\t\tif (this._doc.song.channels[channelIndex].muted) {\n\t\t\t\t\tanyMuted = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\n\t\t\t\tthis._doc.song.channels[channelIndex].muted = !anyMuted;\n\t\t\t}\n\t\t} else {\n\t\t\tlet anyUnmuted: boolean = false;\n\t\t\tfor (const channelIndex of this._eachSelectedChannel()) {\n\t\t\t\tif (!this._doc.song.channels[channelIndex].muted) {\n\t\t\t\t\tanyUnmuted = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const channelIndex of this._eachSelectedChannel()) {\n\t\t\t\tthis._doc.song.channels[channelIndex].muted = anyUnmuted;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tpublic soloChannels(invert: boolean): void {\n\t\tlet alreadySoloed: boolean = true;\n\t\t\n\t\tfor (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\n\t\t\tconst shouldBeMuted: boolean = (channelIndex < this.boxSelectionChannel || channelIndex >= this.boxSelectionChannel + this.boxSelectionHeight) ? !invert : invert;\n\t\t\tif (this._doc.song.channels[channelIndex].muted != shouldBeMuted) {\n\t\t\t\talreadySoloed = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (alreadySoloed) {\n\t\t\tfor (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\n\t\t\t\tthis._doc.song.channels[channelIndex].muted = false;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\n\t\t\t\tthis._doc.song.channels[channelIndex].muted = (channelIndex < this.boxSelectionChannel || channelIndex >= this.boxSelectionChannel + this.boxSelectionHeight) ? !invert : invert;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._doc.notifier.changed();\n\t}\n\t\n\tpublic forceRhythm(): void {\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\t\n\t\tif (this.boxSelectionActive) {\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n\t\t}\n\t\t\n\t\tfor (const channelIndex of this._eachSelectedChannel()) {\n\t\t\tfor (const pattern of this._eachSelectedPattern(channelIndex)) {\n\t\t\t\tgroup.append(new ChangePatternRhythm(this._doc, pattern));\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._doc.record(group);\n\t}\n\t\n\tpublic forceScale(): void {\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\t\n\t\tif (this.boxSelectionActive) {\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n\t\t}\n\t\t\n\t\tconst scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\n\t\tfor (const channelIndex of this._eachSelectedChannel()) {\n\t\t\tif (this._doc.song.getChannelIsNoise(channelIndex)) continue;\n\t\t\tfor (const pattern of this._eachSelectedPattern(channelIndex)) {\n\t\t\t\tunionOfUsedNotes(pattern, scaleFlags);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tconst scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale);\n\t\t\t\n\t\tfor (const channelIndex of this._eachSelectedChannel()) {\n\t\t\tif (this._doc.song.getChannelIsNoise(channelIndex)) continue;\n\t\t\tfor (const pattern of this._eachSelectedPattern(channelIndex)) {\n\t\t\t\tgroup.append(new ChangePatternScale(this._doc, pattern, scaleMap));\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._doc.record(group);\n\t}\n\t\n\tpublic setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\n\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTrack);\n\t\tthis._changeTrack = new ChangeGroup();\n\t\tthis._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\n\t\t// Don't erase existing redo history just to change track selection.\n\t\tif (!this._doc.hasRedoHistory()) {\n\t\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\n\t\t}\n\t}\n\t\n\tpublic transpose(upward: boolean, octave: boolean): void {\n\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\n\t\tthis._changeTranspose = new ChangeGroup();\n\t\t\n\t\tif (this.boxSelectionActive) {\n\t\t\tthis._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n\t\t}\n\t\t\n\t\tfor (const channelIndex of this._eachSelectedChannel()) {\n\t\t\tfor (const pattern of this._eachSelectedPattern(channelIndex)) {\n\t\t\t\tthis._changeTranspose.append(new ChangeTranspose(this._doc, channelIndex, pattern, upward, this._doc.prefs.notesOutsideScale, octave));\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._doc.record(this._changeTranspose, canReplaceLastChange);\n\t}\n\t\n\tpublic swapChannels(offset: number): void {\n\t\tconst possibleSectionBoundaries: number[] = [\n\t\t\tthis._doc.song.pitchChannelCount,\n\t\t\tthis._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount,\n\t\t\tthis._doc.song.getChannelCount(),\n\t\t];\n\t\tlet channelSectionMin: number = 0;\n\t\tlet channelSectionMax: number = 0;\n\t\tfor (const nextBoundary of possibleSectionBoundaries) {\n\t\t\tif ((this.boxSelectionChannel < nextBoundary && offset < 0) || (this.boxSelectionChannel + this.boxSelectionHeight <= nextBoundary)) {\n\t\t\t\tchannelSectionMax = nextBoundary - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tchannelSectionMin = nextBoundary;\n\t\t}\n\t\tconst newSelectionMin: number = Math.max(this.boxSelectionChannel, channelSectionMin);\n\t\tconst newSelectionMax: number = Math.min(this.boxSelectionChannel + this.boxSelectionHeight - 1, channelSectionMax);\n\t\toffset = Math.max(offset, channelSectionMin - newSelectionMin);\n\t\toffset = Math.min(offset, channelSectionMax - newSelectionMax);\n\t\t\n\t\tif (offset != 0) {\n\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeReorder);\n\t\t\tthis._changeReorder = new ChangeGroup();\n\t\t\tthis.boxSelectionY0 = newSelectionMin + offset;\n\t\t\tthis.boxSelectionY1 = newSelectionMax + offset;\n\t\t\tthis._changeReorder.append(new ChangeChannelOrder(this._doc, newSelectionMin, newSelectionMax, offset));\n\t\t\tthis._changeReorder.append(new ChangeChannelBar(this._doc, Math.max(this.boxSelectionY0, Math.min(this.boxSelectionY1, this._doc.channel + offset)), this._doc.bar));\n\t\t\tthis.selectionUpdated();\n\t\t\tthis._doc.record(this._changeReorder, canReplaceLastChange);\n\t\t}\n\t}\n\t\n\tpublic selectInstrument(instrument: number): void {\n\t\tif (this._doc.viewedInstrument[this._doc.channel] == instrument) {\n\t\t\tif (this._doc.song.layeredInstruments && this._doc.song.patternInstruments) {\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeInstrument);\n\t\t\t\tthis._changeInstrument = new ChangeGroup();\n\t\t\t\tconst instruments: number[] = this._doc.recentPatternInstruments[this._doc.channel];\n\t\t\t\tthis._doc.notifier.changed(); // doc.recentPatternInstruments changes even if a 0 pattern is selected.\n\t\t\t\tif (instruments.indexOf(instrument) == -1) {\n\t\t\t\t\tinstruments.push(instrument);\n\t\t\t\t\tconst maxLayers: number = this._doc.song.getMaxInstrumentsPerPattern(this._doc.channel);\n\t\t\t\t\tif (instruments.length > maxLayers) {\n\t\t\t\t\t\tinstruments.splice(0, instruments.length - maxLayers);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinstruments.splice(instruments.indexOf(instrument), 1);\n\t\t\t\t\tif (instruments.length == 0) instruments[0] = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.boxSelectionActive) {\n\t\t\t\t\tthis._changeInstrument.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n\t\t\t\t}\n\t\t\t\tfor (const channelIndex of this._eachSelectedChannel()) {\n\t\t\t\t\tfor (const pattern of this._eachSelectedPattern(channelIndex)) {\n\t\t\t\t\t\tthis._changeInstrument.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instruments, pattern));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._doc.record(this._changeInstrument, canReplaceLastChange);\n\t\t\t}\n\t\t} else {\n\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeInstrument);\n\t\t\tthis._changeInstrument = new ChangeGroup();\n\t\t\tthis._changeInstrument.append(new ChangeViewInstrument(this._doc, instrument));\n\t\t\t\n\t\t\tif (!this._doc.song.layeredInstruments && this._doc.song.patternInstruments) {\n\t\t\t\tif (this.boxSelectionActive) {\n\t\t\t\t\tthis._changeInstrument.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n\t\t\t\t}\n\t\t\t\tconst instruments: number[] = [instrument];\n\t\t\t\tfor (const channelIndex of this._eachSelectedChannel()) {\n\t\t\t\t\tfor (const pattern of this._eachSelectedPattern(channelIndex)) {\n\t\t\t\t\t\tthis._changeInstrument.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instruments, pattern));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._doc.record(this._changeInstrument, canReplaceLastChange);\n\t\t\t} else if (!this._doc.hasRedoHistory()) {\n\t\t\t\t// Don't erase existing redo history just to look at highlighted pattern.\n\t\t\t\tthis._doc.record(this._changeInstrument, canReplaceLastChange);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic resetBoxSelection(): void {\n\t\tthis.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\n\t\tthis.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Scale, Config} from \"../synth/SynthConfig\";\n\nexport class Preferences {\n\tpublic static readonly defaultVisibleOctaves: number = 3;\n\t\n\tpublic autoPlay: boolean;\n\tpublic autoFollow: boolean;\n\tpublic enableNotePreview: boolean;\n\tpublic showFifth: boolean;\n\tpublic notesOutsideScale: boolean;\n\tpublic defaultScale: number;\n\tpublic showLetters: boolean;\n\tpublic showChannels: boolean;\n\tpublic showScrollBar: boolean;\n\tpublic alwaysShowSettings: boolean;\n\tpublic instrumentCopyPaste: boolean;\n\tpublic enableChannelMuting: boolean;\n\tpublic boxbeepColorTheme: string;\n\tpublic boxbeepLayout: string;\n\tpublic displayBrowserUrl: boolean;\n\tpublic volume: number = 75;\n\tpublic visibleOctaves: number = Preferences.defaultVisibleOctaves;\n\tpublic pressControlForShortcuts: boolean;\n\tpublic keyboardLayout: string;\n\tpublic enableMidi: boolean;\n\tpublic showRecordButton: boolean;\n\tpublic snapRecordedNotesToRhythm: boolean;\n\tpublic ignorePerformedNotesNotInScale: boolean;\n\tpublic metronomeCountIn: boolean;\n\tpublic metronomeWhileRecording: boolean;\n\t\n\tconstructor() {\n\t\tthis.reload();\n\t}\n\t\n\tpublic reload(): void {\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") != \"false\";\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") != \"false\";\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\n\t\tthis.notesOutsideScale = window.localStorage.getItem(\"notesOutsideScale\") == \"true\";\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\n\t\tthis.alwaysShowSettings = window.localStorage.getItem(\"alwaysShowSettings\") == \"true\";\n\t\tthis.instrumentCopyPaste = window.localStorage.getItem(\"instrumentCopyPaste\") == \"true\";\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\n\t\tthis.pressControlForShortcuts = window.localStorage.getItem(\"pressControlForShortcuts\") == \"true\";\n\t\tthis.enableMidi = window.localStorage.getItem(\"enableMidi\") != \"false\";\n\t\tthis.showRecordButton = window.localStorage.getItem(\"showRecordButton\") == \"true\";\n\t\tthis.snapRecordedNotesToRhythm = window.localStorage.getItem(\"snapRecordedNotesToRhythm\") == \"true\";\n\t\tthis.ignorePerformedNotesNotInScale = window.localStorage.getItem(\"ignorePerformedNotesNotInScale\") == \"true\";\n\t\tthis.metronomeCountIn = window.localStorage.getItem(\"metronomeCountIn\") != \"false\";\n\t\tthis.metronomeWhileRecording = window.localStorage.getItem(\"metronomeWhileRecording\") != \"false\";\n\t\tthis.keyboardLayout = window.localStorage.getItem(\"keyboardLayout\") || \"wickiHayden\";\n\t\tthis.boxbeepLayout = window.localStorage.getItem(\"boxbeepLayout\") || \"small\";\n\t\tthis.boxbeepColorTheme = window.localStorage.getItem(\"boxbeepColorTheme\") || \"dark classic\";\n\t\tthis.visibleOctaves = ((<any>window.localStorage.getItem(\"visibleOctaves\")) >>> 0) || Preferences.defaultVisibleOctaves;\n\t\t\n\t\tconst defaultScale: Scale | undefined = Config.scales.dictionary[window.localStorage.getItem(\"defaultScale\")!];\n\t\tthis.defaultScale = (defaultScale != undefined) ? defaultScale.index : 0;\n\t\t\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\n\t\t}\n\t\t\n\t\tif (window.localStorage.getItem(\"fullScreen\") != null) {\n\t\t\tif (window.localStorage.getItem(\"fullScreen\") == \"true\") this.boxbeepLayout = \"long\";\n\t\t\twindow.localStorage.removeItem(\"fullScreen\");\n\t\t}\n\t}\n\t\n\tpublic save(): void {\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"notesOutsideScale\", this.notesOutsideScale ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"defaultScale\", Config.scales[this.defaultScale].name);\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"alwaysShowSettings\", this.alwaysShowSettings ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"instrumentCopyPaste\", this.instrumentCopyPaste ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"pressControlForShortcuts\", this.pressControlForShortcuts ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"enableMidi\", this.enableMidi ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showRecordButton\", this.showRecordButton ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"snapRecordedNotesToRhythm\", this.snapRecordedNotesToRhythm ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"ignorePerformedNotesNotInScale\", this.ignorePerformedNotesNotInScale ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"metronomeCountIn\", this.metronomeCountIn ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"metronomeWhileRecording\", this.metronomeWhileRecording ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"keyboardLayout\", this.keyboardLayout);\n\t\twindow.localStorage.setItem(\"boxbeepLayout\", this.boxbeepLayout);\n\t\twindow.localStorage.setItem(\"boxbeepColorTheme\", this.boxbeepColorTheme);\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\n\t\twindow.localStorage.setItem(\"visibleOctaves\", String(this.visibleOctaves));\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class ChangeNotifier {\n\tprivate _watchers: (()=>void)[] = [];\n\tprivate _dirty: boolean = false;\n\t\n\tpublic watch(watcher: ()=>void): void {\n\t\tif (this._watchers.indexOf(watcher) == -1) {\n\t\t\tthis._watchers.push(watcher);\n\t\t}\n\t}\n\t\n\tpublic unwatch(watcher: ()=>void): void {\n\t\tconst index: number = this._watchers.indexOf(watcher);\n\t\tif (index != -1) {\n\t\t\tthis._watchers.splice(index, 1);\n\t\t}\n\t}\n\t\n\tpublic changed(): void {\n\t\tthis._dirty = true;\n\t}\n\t\n\tpublic notifyWatchers(): void {\n\t\tif (!this._dirty) return;\n\t\tthis._dirty = false;\n\t\tfor (const watcher of this._watchers.concat()) {\n\t\t\twatcher();\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {isMobile} from \"./EditorConfig\";\nimport {Pattern, Channel, Song, Synth} from \"../synth/synth\";\nimport {SongRecovery, generateUid, errorAlert} from \"./SongRecovery\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {Layout} from \"./Layout\";\nimport {SongPerformance} from \"./SongPerformance\";\nimport {Selection} from \"./Selection\";\nimport {Preferences} from \"./Preferences\";\nimport {Change} from \"./Change\";\nimport {ChangeNotifier} from \"./ChangeNotifier\";\nimport {ChangeSong, setDefaultInstruments, discardInvalidPatternInstruments} from \"./changes\";\n\ninterface HistoryState {\n\tcanUndo: boolean;\n\tsequenceNumber: number;\n\tbar: number;\n\tchannel: number;\n\tinstrument: number;\n\trecoveryUid: string;\n\tprompt: string | null;\n\tselection: {x0: number, x1: number, y0: number, y1: number, start: number, end: number};\n}\n\nexport class SongDocument {\n\tpublic song: Song;\n\tpublic synth: Synth;\n\tpublic performance: SongPerformance;\n\tpublic readonly notifier: ChangeNotifier = new ChangeNotifier();\n\tpublic readonly selection: Selection = new Selection(this);\n\tpublic readonly prefs: Preferences = new Preferences();\n\tpublic channel: number = 0;\n\tpublic bar: number = 0;\n\tpublic readonly recentPatternInstruments: number[][] = [];\n\tpublic readonly viewedInstrument: number[] = [];\n\t\n\tpublic trackVisibleBars: number = 16;\n\tpublic trackVisibleChannels: number = 4;\n\tpublic barScrollPos: number = 0;\n\tpublic channelScrollPos: number = 0;\n\tpublic prompt: string | null = null;\n\t\n\tpublic addedEffect: boolean = false;\n\tpublic addedEnvelope: boolean = false;\n\tpublic currentPatternIsDirty: boolean = false;\n\t\n\tprivate static readonly _maximumUndoHistory: number = 100;\n\tprivate _recovery: SongRecovery = new SongRecovery();\n\tprivate _recoveryUid: string;\n\tprivate _recentChange: Change | null = null;\n\tprivate _sequenceNumber: number = 0;\n\tprivate _lastSequenceNumber: number = 0;\n\tprivate _stateShouldBePushed: boolean = false;\n\tprivate _recordedNewSong: boolean = false;\n\tprivate _waitingToUpdateState: boolean = false;\n\t\n\tconstructor() {\n\t\tthis.notifier.watch(this._validateDocState);\n\t\t\n\t\tColorConfig.setTheme(this.prefs.boxbeepColorTheme);\n\t\tLayout.setLayout(this.prefs.boxbeepLayout);\n\t\t\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\n\t\t}\n\t\t\n\t\tlet songString: string = window.location.hash;\n\t\tif (songString == \"\") {\n\t\t\tsongString = this._getHash();\n\t\t}\n\t\ttry {\n\t\t\tthis.song = new Song(songString);\n\t\t\tif (songString == \"\" || songString == undefined) {\n\t\t\t\tsetDefaultInstruments(this.song);\n\t\t\t\tthis.song.scale = this.prefs.defaultScale;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\terrorAlert(error);\n\t\t}\n\t\tsongString = this.song.toBase64String();\n\t\tthis.synth = new Synth(this.song);\n\t\tthis.synth.volume = this._calcVolume();\n\t\tthis.synth.anticipatePoorPerformance = isMobile;\n\t\t\n\t\tlet state: HistoryState | null = this._getHistoryState();\n\t\tif (state == null) {\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\n\t\t\tstate = {canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, instrument: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON()};\n\t\t}\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\n\t\tthis._replaceState(state, songString);\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\n\t\t\n\t\tthis.bar = state.bar | 0;\n\t\tthis.channel = state.channel | 0;\n\t\tfor (let i: number = 0; i <= this.channel; i++) this.viewedInstrument[i] = 0;\n\t\tthis.viewedInstrument[this.channel] = state.instrument | 0;\n\t\tthis._recoveryUid = state.recoveryUid;\n\t\t//this.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\n\t\tthis.prompt = state.prompt;\n\t\tthis.selection.fromJSON(state.selection);\n\t\tthis.selection.scrollToSelectedPattern();\n\t\t\n\t\t// For all input events, catch them when they are about to finish bubbling,\n\t\t// presumably after all handlers are done updating the model, then update the\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\n\t\t// but they are immediately followed by mousemove which does. \n\t\tfor (const eventName of [\"input\", \"change\", \"click\", \"keyup\", \"keydown\", \"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\n\t\t}\n\t\t\n\t\tthis._validateDocState();\n\t\tthis.performance = new SongPerformance(this);\n\t}\n\t\n\tpublic toggleDisplayBrowserUrl() {\n\t\tconst state: HistoryState | null = this._getHistoryState();\n\t\tif (state == null) throw new Error(\"History state is null.\");\n\t\tthis.prefs.displayBrowserUrl = !this.prefs.displayBrowserUrl;\n\t\tthis._replaceState(state, this.song.toBase64String());\n\t}\n\t\n\tprivate _getHistoryState(): HistoryState | null {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\treturn window.history.state;\n\t\t} else {\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\n\t\t\treturn json == null ? null : json.state;\n\t\t}\n\t}\n\t\n\tprivate _getHash(): string {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\treturn window.location.hash;\n\t\t} else {\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\n\t\t\treturn json == null ? \"\" : json.hash;\n\t\t}\n\t}\n\t\n\tprivate _replaceState(state: HistoryState, hash: string): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\n\t\t} else {\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({state, hash}));\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\n\t\t}\n\t}\n\t\n\tprivate _pushState(state: HistoryState, hash: string): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\n\t\t} else {\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\n\t\t\tif (currentIndex == oldestIndex) {\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\n\t\t\t}\n\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({state, hash}));\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\n\t\t}\n\t\tthis._lastSequenceNumber = state.sequenceNumber;\n\t}\n\t\n\tpublic hasRedoHistory(): boolean {\n\t\treturn this._lastSequenceNumber > this._sequenceNumber;\n\t}\n\t\n\tprivate _forward(): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.forward();\n\t\t} else {\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\n\t\t\tif (currentIndex != newestIndex) {\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _back(): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.back();\n\t\t} else {\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\n\t\t\tif (currentIndex != oldestIndex) {\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _whenHistoryStateChanged = (): void => {\n\t\tif (this.synth.recording) {\n\t\t\t// Changes to the song while it's recording to could mess up the recording so just abort the recording.\n\t\t\tthis.performance.abortRecording();\n\t\t}\n\t\t\n\t\tif (window.history.state == null && window.location.hash != \"\") {\n\t\t\t// The user changed the hash directly.\n\t\t\tthis._sequenceNumber++;\n\t\t\tthis._resetSongRecoveryUid();\n\t\t\tconst state: HistoryState = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON()};\n\t\t\ttry {\n\t\t\t\tnew ChangeSong(this, window.location.hash);\n\t\t\t} catch (error) {\n\t\t\t\terrorAlert(error);\n\t\t\t}\n\t\t\tthis.prompt = state.prompt;\n\t\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\n\t\t\t} else {\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\n\t\t\t}\n\t\t\tthis.forgetLastChange();\n\t\t\tthis.notifier.notifyWatchers();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst state: HistoryState | null = this._getHistoryState();\n\t\tif (state == null) throw new Error(\"History state is null.\");\n\t\t\n\t\t// Abort if we've already handled the current state. \n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\n\t\t\n\t\tthis.bar = state.bar;\n\t\tthis.channel = state.channel;\n\t\tthis.viewedInstrument[this.channel] = state.instrument;\n\t\tthis._sequenceNumber = state.sequenceNumber;\n\t\tthis.prompt = state.prompt;\n\t\t\n\t\ttry {\n\t\t\tnew ChangeSong(this, this._getHash());\n\t\t} catch (error) {\n\t\t\terrorAlert(error);\n\t\t}\n\t\t\n\t\tthis._recoveryUid = state.recoveryUid;\n\t\tthis.selection.fromJSON(state.selection);\n\t\t\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\n\t\t\n\t\tthis.forgetLastChange();\n\t\tthis.notifier.notifyWatchers();\n\t}\n\t\n\tprivate _cleanDocument = (): void => {\n\t\tthis.notifier.notifyWatchers();\n\t}\n\t\n\tprivate _validateDocState = (): void => {\n\t\tconst channelCount: number = this.song.getChannelCount();\n\t\tfor (let i: number = this.recentPatternInstruments.length; i < channelCount; i++) {\n\t\t\tthis.recentPatternInstruments[i] = [0];\n\t\t}\n\t\tthis.recentPatternInstruments.length = channelCount;\n\t\tfor (let i: number = 0; i < channelCount; i++) {\n\t\t\tif (i == this.channel) {\n\t\t\t\tif (this.song.patternInstruments) {\n\t\t\t\t\tconst pattern: Pattern | null = this.song.getPattern(this.channel, this.bar);\n\t\t\t\t\tif (pattern != null) {\n\t\t\t\t\t\tthis.recentPatternInstruments[i] = pattern.instruments.concat();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst channel: Channel = this.song.channels[this.channel];\n\t\t\t\t\tfor (let j: number = 0; j < channel.instruments.length; j++) {\n\t\t\t\t\t\tthis.recentPatternInstruments[i][j] = j;\n\t\t\t\t\t}\n\t\t\t\t\tthis.recentPatternInstruments[i].length = channel.instruments.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdiscardInvalidPatternInstruments(this.recentPatternInstruments[i], this.song, i);\n\t\t}\n\t\t\n\t\tfor (let i: number = this.viewedInstrument.length; i < channelCount; i++) {\n\t\t\tthis.viewedInstrument[i] = 0;\n\t\t}\n\t\tthis.viewedInstrument.length = channelCount;\n\t\tfor (let i: number = 0; i < channelCount; i++) {\n\t\t\tif (this.song.patternInstruments && !this.song.layeredInstruments && i == this.channel) {\n\t\t\t\tconst pattern: Pattern | null = this.song.getPattern(this.channel, this.bar);\n\t\t\t\tif (pattern != null) {\n\t\t\t\t\tthis.viewedInstrument[i] = pattern.instruments[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.viewedInstrument[i] = Math.min(this.viewedInstrument[i] | 0, this.song.channels[i].instruments.length - 1);\n\t\t}\n\t\t\n\t\tconst highlightedPattern: Pattern | null = this.getCurrentPattern();\n\t\tif (highlightedPattern != null && this.song.patternInstruments) {\n\t\t\tthis.recentPatternInstruments[this.channel] = highlightedPattern.instruments.concat();\n\t\t}\n\t\t\n\t\t// Normalize selection.\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\n\t\t// because it may auto-follow the playhead outside the selection but it would\n\t\t// be annoying to lose your selection just because the song is playing.\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\n\t\t\tchannelCount < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1))\n\t\t{\n\t\t\tthis.selection.resetBoxSelection();\n\t\t}\n\t\t\n\t\tthis.barScrollPos     = Math.max(0, Math.min(this.song.barCount          - this.trackVisibleBars,     this.barScrollPos));\n\t\tthis.channelScrollPos = Math.max(0, Math.min(this.song.getChannelCount() - this.trackVisibleChannels, this.channelScrollPos));\n\t}\n\t\n\tprivate _updateHistoryState = (): void => {\n\t\tthis._waitingToUpdateState = false;\n\t\tlet hash: string;\n\t\ttry {\n\t\t\t// Ensure that the song is not corrupted before saving it.\n\t\t\thash = this.song.toBase64String();\n\t\t} catch (error) {\n\t\t\terrorAlert(error);\n\t\t\treturn;\n\t\t}\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\n\t\tif (this._recordedNewSong) {\n\t\t\tthis._resetSongRecoveryUid();\n\t\t} else {\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, hash);\n\t\t}\n\t\tlet state: HistoryState = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON()};\n\t\tif (this._stateShouldBePushed) {\n\t\t\tthis._pushState(state, hash);\n\t\t} else {\n\t\t\tthis._replaceState(state, hash);\n\t\t}\n\t\tthis._stateShouldBePushed = false;\n\t\tthis._recordedNewSong = false;\n\t}\n\t\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\n\t\tif (change.isNoop()) {\n\t\t\tthis._recentChange = null;\n\t\t\tif (replace) this._back();\n\t\t} else {\n\t\t\tchange.commit();\n\t\t\tthis._recentChange = change;\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\n\t\t\tif (!this._waitingToUpdateState) {\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\n\t\t\t\t// committed and the interface has rendered the latest changes to\n\t\t\t\t// improve perceived responsiveness.\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\n\t\t\t\tthis._waitingToUpdateState = true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _resetSongRecoveryUid(): void {\n\t\tthis._recoveryUid = generateUid();\n\t}\n\t\n\tpublic openPrompt(prompt: string): void {\n\t\tthis.prompt = prompt;\n\t\tconst hash: string = this.song.toBase64String();\n\t\tthis._sequenceNumber++;\n\t\tconst state = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON()};\n\t\tthis._pushState(state, hash);\n\t}\n\t\n\tpublic undo(): void {\n\t\tconst state: HistoryState | null = this._getHistoryState();\n\t\tif (state == null || state.canUndo) this._back();\n\t}\n\t\n\tpublic redo(): void {\n\t\tthis._forward();\n\t}\n\t\n\tpublic setProspectiveChange(change: Change | null): void {\n\t\tthis._recentChange = change;\n\t}\n\t\n\tpublic forgetLastChange(): void {\n\t\tthis._recentChange = null;\n\t}\n\t\n\tpublic lastChangeWas(change: Change | null): boolean {\n\t\treturn change != null && change == this._recentChange;\n\t}\n\t\n\tpublic goBackToStart(): void {\n\t\tthis.bar = 0;\n\t\tthis.channel = 0;\n\t\tthis.barScrollPos = 0;\n\t\tthis.channelScrollPos = 0;\n\t\tthis.synth.snapToStart();\n\t\tthis.notifier.changed();\n\t}\n\t\n\tpublic setVolume(val: number): void {\n\t\tthis.prefs.volume = val;\n\t\tthis.prefs.save();\n\t\tthis.synth.volume = this._calcVolume();\n\t}\n\t\n\tprivate _calcVolume(): number {\n\t\treturn Math.min(1.0, Math.pow(this.prefs.volume / 50.0, 0.5)) * Math.pow(2.0, (this.prefs.volume - 75.0) / 25.0);\n\t}\n\t\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\n\t}\n\t\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\n\t\treturn this.viewedInstrument[this.channel];\n\t}\n\t\n\tpublic getMobileLayout(): boolean {\n\t\treturn window.innerWidth <= 710;\n\t}\n\t\n\tpublic getBarWidth(): number {\n\t\treturn (!this.getMobileLayout() && this.prefs.enableChannelMuting && !this.getFullScreen()) ? 30 : 32;\n\t}\n\t\n\tpublic getFullScreen(): boolean {\n\t\treturn !this.getMobileLayout() && (this.prefs.boxbeepLayout != \"small\");\n\t}\n\t\n\tpublic getVisibleOctaveCount(): number {\n\t\treturn this.getFullScreen() ? this.prefs.visibleOctaves : Preferences.defaultVisibleOctaves;\n\t}\n\t\n\tpublic getVisiblePitchCount(): number {\n\t\t return this.getVisibleOctaveCount() * Config.pitchesPerOctave + 1;\n\t}\n\t\n\tpublic getBaseVisibleOctave(channel: number): number {\n\t\tconst visibleOctaveCount: number = this.getVisibleOctaveCount();\n\t\treturn Math.max(0, Math.min(Config.pitchOctaves - visibleOctaveCount, Math.ceil(this.song.channels[channel].octave - visibleOctaveCount * 0.5)));\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config} from \"../synth/SynthConfig\";\nimport {isMobile, EditorConfig} from \"./EditorConfig\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport \"./style\"; // Import for the side effects, there's no exports.\nimport {SongEditor} from \"./SongEditor\";\nimport {NotePin, Note, Pattern, Instrument, Channel, Song, Synth} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {ExportPrompt} from \"./ExportPrompt\";\nimport {ChangePreset} from \"./changes\";\n\nconst doc: SongDocument = new SongDocument();\nconst editor: SongEditor = new SongEditor(doc);\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\nbeepboxEditorContainer.appendChild(editor.mainLayer);\neditor.whenUpdated();\neditor.mainLayer.focus();\n\n// don't autoplay on mobile devices, wait for input.\nif (!isMobile && doc.prefs.autoPlay) {\n\tfunction autoplay(): void {\n\t\tif (!document.hidden) {\n\t\t\tdoc.synth.play();\n\t\t\teditor.updatePlayButton();\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\n\t\t}\n\t}\n\tif (document.hidden) {\n\t\t// Wait until the tab is visible to autoplay:\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\n\t} else {\n\t\tautoplay();\n\t}\n}\n\n// BeepBox uses browser history state as its own undo history. Browsers typically\n// remember scroll position for each history state, but BeepBox users would prefer not \n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\n\neditor.updatePlayButton();\n\nif (\"serviceWorker\" in navigator) {\n\tnavigator.serviceWorker.register(\"/service_worker.js\", {updateViaCache: \"all\", scope: \"/\"}).catch(() => {});\n}\n\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\nexport {Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Song, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset};\n"],"mappings":"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AG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAACtB,eAAiB,UAAUsB,SAAW,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAACtB,eAAiB,UAAUsB,SAAW,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAACtB,eAAiB,UAAUsB,SAAW,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAACtB,eAAiB,UAAUsB,SAAW,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAACtB,eAAiB,UAAUsB,SAAW,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAACtB,eAAiB,UAAUsB,SAAW,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAACtB,eAAiB,UAAUsB,SAAW,CAAC,EAAE,EAAE,GA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","ignoreList":[]}